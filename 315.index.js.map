{"version":3,"sources":["webpack://rock-raiders-web/./src/game/model/job/PriorityIdentifier.ts","webpack://rock-raiders-web/./src/core/Util.ts","webpack://rock-raiders-web/./src/cfg/BaseConfig.ts","webpack://rock-raiders-web/./src/resource/wadworker/AlphaBitmapDecoder.ts","webpack://rock-raiders-web/./src/cfg/ConfigColor.ts","webpack://rock-raiders-web/./src/cfg/ObjectiveImageCfg.ts","webpack://rock-raiders-web/./src/cfg/LevelsCfg.ts","webpack://rock-raiders-web/./src/cfg/MenuCycleItemCfg.ts","webpack://rock-raiders-web/./src/cfg/MenuLabelItemCfg.ts","webpack://rock-raiders-web/./src/cfg/MenuSliderItemCfg.ts","webpack://rock-raiders-web/./src/cfg/MenuEntryCfg.ts","webpack://rock-raiders-web/./src/cfg/MenuCfg.ts","webpack://rock-raiders-web/./src/cfg/RewardCfg.ts","webpack://rock-raiders-web/./src/resource/wadworker/EncodingHelper.ts","webpack://rock-raiders-web/./src/resource/wadworker/CfgFileParser.ts","webpack://rock-raiders-web/./src/resource/wadworker/ObjectiveTextParser.ts","webpack://rock-raiders-web/./src/resource/wadworker/RonFile.ts","webpack://rock-raiders-web/./src/resource/wadworker/WadFile.ts","webpack://rock-raiders-web/./src/resource/wadworker/WadUtil.ts","webpack://rock-raiders-web/./src/resource/wadworker/WadLoader.ts","webpack://rock-raiders-web/./src/resource/wadworker/WorkerMessageType.ts","webpack://rock-raiders-web/./src/cfg/BuildingEntityStats.ts","webpack://rock-raiders-web/./src/cfg/MovableEntityStats.ts","webpack://rock-raiders-web/./src/cfg/GameStatsCfg.ts","webpack://rock-raiders-web/./src/resource/wadworker/WadWorkerMessage.ts","webpack://rock-raiders-web/./src/resource/wadworker/WadWorker.ts"],"names":["PriorityIdentifier","Array","prototype","remove","element","index","this","indexOf","splice","count","callback","counter","forEach","e","Map","getOrUpdate","key","updateCallback","value","get","undefined","set","HeaderTypes","setFromCfg","config","cfgObj","Object","keys","cfgKey","lCfgKeyName","startsWith","substring","toLowerCase","replace","some","objKey","assignValue","console","warn","cfgValue","currentValue","currentIsArray","isArray","parsedValue","parseValue","parsedIsArray","values","r","g","b","filename","x","y","levelsByName","levelKey","LevelEntryCfg","fullName","endGameAvi1","endGameAvi2","allowRename","recallOLObjects","generateSpiders","video","disableEndTeleport","disableStartTeleport","emergeTimeOut","boulderAnimation","noMultiSelect","noAutoEat","disableToolTipSound","blockSize","digDepth","roughLevel","roofHeight","useRoof","selBoxHeight","fpRotLightRGB","fogColourRGB","highFogColourRGB","fogRate","fallinMultiplier","numberOfLandSlidesTillCaveIn","noFallins","oxygenRate","surfaceMap","predugMap","terrainMap","emergeMap","erodeMap","fallinMap","blockPointersMap","cryOreMap","pathMap","noGather","textureSet","rockFallStyle","emergeCreature","safeCaverns","seeThroughWalls","oListFile","ptlFile","nerpFile","nerpMessageFile","objectiveText","objectiveImage640x480","erodeTriggerTime","erodeErodeTime","erodeLockTime","nextLevel","levelLinks","frontEndX","frontEndY","frontEndOpen","priorities","reward","menuBMP","BaseConfig","endsWith","ConfigColor","filter","name","map","LevelPrioritiesEntryConfig","LevelRewardConfig","ObjectiveImageCfg","enabled","obj","keyname","iGet","enable","modifier","importance","quota","LevelRewardImportanceConfig","LevelRewardQuotaConfig","crystals","timer","caverns","constructions","oxygen","figures","actionName","width","height","description","two","labelOff","labelOn","length","label","target","flag","join","imgNormal","imgHover","imgPressed","tooltip","log","min","max","imgOff","imgOn","imgLeft","imgRight","btnRightNormal","btnLeftNormal","btnRightHover","btnLeftHover","title","position","menuFont","loFont","hiFont","itemCount","menuImage","autoCenter","displayTitle","overlays","playRandom","itemsLabel","itemsSlider","itemsCycle","anchored","canScroll","match","lActionName","push","MenuLabelItemCfg","MenuSliderItemCfg","MenuCycleItemCfg","menuCount","menus","MenuEntryCfg","display","wallpaper","images","texts","boxImages","fonts","flics","scrollSpeed","centreText","vertSpacing","backFont","font","titleFont","saveButton","advanceButton","completeText","failedText","quitText","textPos","imgConf","RewardImageCfg","RewardTextCfg","RewardFontsCfg","filePath","text","ore","diggable","rockMonsters","score","buffer","toRGBA","bufferView","DataView","byteOffset","byteLength","bottomUp","String","fromCharCode","pos","Error","locRed","locGreen","locBlue","locAlpha","parseHeader","parseRGBA","fileSize","readUInt32LE","reserved1","getUint16","reserved2","offset","headerSize","planes","bitPP","compression","rawSize","hr","vr","colors","importantColors","maskAlpha","maskRed","maskGreen","maskBlue","BITMAP_INFO_HEADER","BITMAP_V2_INFO_HEADER","BITMAP_V3_INFO_HEADER","BITMAP_V4_HEADER","BITMAP_V5_HEADER","len","palette","i","blue","green","red","quad","maskRedR","maskGreenR","maskBlueR","maskAlphaR","shiftedMaskRedL","shiftedMaskGreenL","shiftedMaskBlueL","shiftedMaskAlphaL","coloShift","shiftRed","shiftGreen","shiftBlue","shiftAlpha","data","Uint8Array","bit1","bit4","bit8","bit16","bit24","bit32","lastLine","xLen","Math","ceil","mode","padding","scanImage","line","location","rgb","fill","lowNibble","lines","a","c","setPixelData","first4","last4","loc","px","processPixel","call","getUint32","rgbIndex","parse","alphaIndex","decoder","BmpDecoder","Uint8ClampedArray","alphaColor","ImageData","encodeChar","PARSING_STATE","result","ancestry","activeObject","isComment","keyVal","seek","charCode","charStr","pop","parsed","CfgFileParser","hasOwnProperty","stack","val","sub","levelConf","splitShrink","sep","split","num","Number","isNaN","lVal","toString","includes","parseObjectiveTextFile","txtFileContent","state","DROP","currentLevel","code","char","LevelObjectiveTextEntry","KEY","lLine","OBJECTIVE","FAILURE","COMPLETION","CRYSTAL_FAILURE","charCodeAt","objective","failure","completion","crystalFailure","content","l","indDoubleSlash","indComment","trim","v","root","RonFile","parseObj","start","lv","entryIndexByName","fLength","fStart","parseWadFile","debug","dataView","Int8Array","apply","slice","numberOfEntries","getInt32","bufferStart","getEntryData","entryName","getEntryBuffer","getEntryText","filterEntryNames","regexStr","regex","RegExp","entry","getPath","url","strUrl","lastInd","lastIndexOf","WorkerMessageType","wad0File","wad1File","assetIndex","totalResources","assetsFromCfgByName","onMessage","msg","onInitialLoad","onAssetLoaded","onLoadDone","loadingTimeSeconds","loadWadImageAsset","AlphaBitmapDecoder","loadWadTexture","alphaIndexMatch","parseInt","imgData","WadLoader","grayscaleToGreen","arr","loadAlphaImageAsset","n","loadFontImageAsset","loadNerpAsset","loadNerpMsg","parseNerpMsgFile","msg1","m1","txt","snd","wadFile","txt0Match","txt1Match","sndMatch","numericNameToNumber","digits","one","three","four","five","six","seven","eight","nine","tens","twenty","thirty","forty","number","ten","eleven","twelve","thirteen","fourteen","fifteen","sixteen","seventeen","eighteen","nineteen","digitName","loadObjectiveTexts","txtContent","ObjectiveTextParser","loadMapAsset","level","row","loadObjectListAsset","objectList","currentObject","objectStartMatch","drivingMatch","driving","parseFloat","loadWavAsset","path","error","loadLWOFile","lwoFilepath","lwoContent","registerAllAssets","mainConf","addAssetFolder","addMenuWithAssets","addAsset","addAlphaImageFolder","levelsCfg","LevelsCfg","bmpName","addTextureFolder","buildingTypes","bType","bName","aeFile","addAnimatedEntity","addLWSFile","rewardCfg","RewardCfg","imgPath","img","cfgRoot","polyType","cfgPoly","activities","activity","act","file","lwsFilepath","extractLwoFiles","lwoFile","objLine","folderPath","assetPath","menuImageAlpha","menuCfg","MenuCfg","method","optional","bind","loadAssetsParallel","promises","that","asset","Promise","resolve","assetObj","all","then","Date","getTime","startTime","toFixed","startWithCachedFiles","onCacheMiss","_onerror","openLocalCache","objectStore","request1","onerror","onsuccess","prop","WadFile","request2","startLoadingProcess","loadWadFiles","wad0Url","wad1Url","loadWadFile","wadFiles","put","fetch","response","ok","arrayBuffer","catch","onopen","request","indexedDB","open","onupgradeneeded","db","objectStoreNames","contains","deleteObjectStore","createObjectStore","transaction","cfg","size","Levels","SelfPowered","PowerBuilding","PickSphere","TrainDynamite","CostOre","CostCrystal","OxygenCoef","RouteSpeed","RubbleCoef","PathCoef","Pilot","SoilDrillTime","LooseDrillTime","MedDrillTime","HardDrillTime","SeamDrillTime","UpgradeTime","CollRadius","CollHeight","TrackDist","SingleWidthDig","RepairValue","SurveyRadius","Drillsound","Drillfadesound","RestPercent","EnergyDecayRate","CanClearRubble","NumOfToolsCanCarry","CrossLand","RouteAvoidance","UseLegoManTeleporter","AwarenessRange","CanStrafe","EnterToolStore","ShowHealthBar","RockMonster","AlertRadius","HealthDecayRate","CanScare","CarryMinHealth","PainThreshold","StampRadius","AttackRadius","CanSteal","GrabMinifigure","BumpDamage","AttackPaths","SplitOnZeroHealth","CanBeHitByFence","Capacity","CanBeShotAt","CanFreeze","FreezerTime","FreezerDamage","CanLaser","LaserDamage","CanPush","PusherDist","PusherDamage","WakeRadius","ScaredByBigBangs","RemoveReinforcement","SmallSpider","RandomMove","RandomEnterWall","CauseSlip","DontShowDamage","DontShowOnRadar","MovableEntityStats","Bat","randomMoveTime","Flocks","FlocksDebug","FlocksSmooth","FlocksSize","FlocksTurn","FlocksSpeed","FlocksTightness","FlocksGoalUpdate","FlocksRandomness","FlocksHeight","CrossWater","CrossLava","TinyRM","ScaredByPlayer","TinyIM","Slug","UseHoles","DrainPower","LavaMonster","IceMonster","Hoverboard","CanBeDriven","UseSmallTeleporter","UpgradeCostOre","UpgradeCostStuds","EngineSound","SmallHeli","Smallmlp","Tracker","CanDoubleSelect","SmallCat","UseWaterTeleporter","MaxCarry","GetInAtLand","GetOutAtLand","TakeCarryingDrivers","SmallDigger","VehicleCanBeCarried","SmallTruck","CarryStart","Bulldozer","UseBigTeleporter","InvisibleDriver","WalkerDigger","DrillSound","DrillFadeSound","LargeDigger","LargeCat","ClassAsLarge","CarryVehicles","LargeHeli","LargeMLP","Barracks","CostRefinedOre","SnaxULike","TrainDriver","CrystalDrain","DamageCausesCallToArms","BuildingEntityStats","Powerstation","ProcessCrystal","OreRefinery","ProcessOre","TeleportPad","SmallTeleporter","ManTeleporter","TrainPilot","TeleportBIG","BigTeleporter","Docks","WaterEntrances","WaterTeleporter","TrainSailor","Toolstation","ToolStore","StoreObjects","FunctionCoef","GunStation","Geodome","TrainScanner","Upgrade","UpgradeBuilding","TrainRepair","PowerCrystal","ProcessedOre","Ore","Boulder","Pusher","Freezer","LaserShot","ColRadius","ElectricFence","Path","type","createTextMessage","MSG","createCfgLoaded","CFG","stats","GameStatsCfg","createAssetLoaded","assetName","ASSET","createLoadDone","DONE","worker","self","postMessage","assetMessage","addEventListener","event","wadLoader","WadWorkerMessage","wad0FileUrl","wad1FileUrl","CACHE_MISS"],"mappings":"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","file":"315.index.js","sourcesContent":["export enum PriorityIdentifier {\n\n    aiPriorityTrain,\n    aiPriorityGetIn,\n    aiPriorityCrystal,\n    aiPriorityOre,\n    aiPriorityRepair,\n    aiPriorityClearing,\n    aiPriorityDestruction,\n    aiPriorityConstruction,\n    aiPriorityReinforce,\n    aiPriorityRecharge,\n\n}\n","export function getFilename(url: string) {\n    if (!url) return url\n    let strUrl = url.toString().replace(/\\\\/g, '/')\n    if (strUrl.startsWith('/')) strUrl = strUrl.substring(1)\n    const lastInd = strUrl.lastIndexOf('/')\n    return strUrl.substring(lastInd + 1)\n}\n\nexport function iGet(obj, ...keys: string[]): any {\n    keys.forEach((keyname) => {\n        obj = Object.keys(obj)\n            .filter((key) => key.toLowerCase() === keyname.toLowerCase())\n            .map((key) => obj[key])\n        obj = obj ? obj[0] : obj\n    })\n    return obj\n}\n\nexport function decodeString(data) {\n    return new TextDecoder().decode(data).replace(/\\0/g, '')\n}\n\nexport function decodeFilepath(data) {\n    return decodeString(data).replace(/\\\\/g, '/')\n}\n\nexport function getRandomInclusive(min, max) {\n    min = Math.ceil(min)\n    max = Math.floor(max)\n    return Math.floor(Math.random() * (max - min + 1)) + min\n}\n\nexport function getRandom(max) {\n    return getRandomInclusive(0, max)\n}\n\nexport function getRandomSign() {\n    return -1 + getRandomInclusive(0, 1) * 2\n}\n\nexport function clearTimeoutSafe(timeout: NodeJS.Timeout) {\n    if (timeout) clearTimeout(timeout)\n    return null\n}\n\nexport function clearIntervalSafe(interval: NodeJS.Timeout) {\n    if (interval) clearInterval(interval)\n    return null\n}\n\ndeclare global {\n\n    interface Array<T> {\n        remove(element: T): void\n\n        count(callback: (element: T) => boolean): number\n    }\n\n    interface Map<K, V> {\n        getOrUpdate(key: K, updateCallback: () => V): V\n    }\n\n}\n\nArray.prototype.remove = function <T>(element: T): void {\n    const index = this.indexOf(element)\n    if (index !== -1) this.splice(index, 1)\n}\n\nArray.prototype.count = function <T>(callback: (element: T) => boolean): number {\n    let counter = 0\n    this.forEach((e) => callback(e) && counter++)\n    return counter\n}\n\n// noinspection JSUnusedGlobalSymbols\nMap.prototype.getOrUpdate = function <K, V>(key: K, updateCallback: () => V): V {\n    let value = this.get(key)\n    if (value === undefined) {\n        value = updateCallback()\n        this.set(key, value)\n    }\n    return value\n}\n","export class BaseConfig {\n\n    static setFromCfg(config: BaseConfig, cfgObj: any) {\n        Object.keys(cfgObj).forEach((cfgKey) => {\n            const lCfgKeyName = (cfgKey.startsWith('!') ? cfgKey.substring(1) : cfgKey)\n                .toLowerCase()\n                .replace(/_/g, '') // Activity_Stand\n                .replace(/-/g, '') // Geo-dome\n            const found = Object.keys(config).some((objKey) => {\n                return config.assignValue(objKey, lCfgKeyName, cfgObj[cfgKey])\n            })\n            if (!found) {\n                console.warn('cfg key does not exist: ' + cfgKey)\n            }\n        })\n        return config\n    }\n\n    assignValue(objKey, lCfgKeyName, cfgValue): boolean {\n        if (objKey.toLowerCase() === lCfgKeyName) {\n            const currentValue = this[objKey]\n            const currentIsArray = Array.isArray(currentValue)\n            let parsedValue = this.parseValue(lCfgKeyName, cfgValue)\n            const parsedIsArray = Array.isArray(parsedValue)\n            if (currentValue && currentIsArray !== parsedIsArray) {\n                if (currentIsArray) {\n                    parsedValue = [parsedValue]\n                    // } else {\n                    //     console.warn('Array overwrite conflict for key ' + objKey + ' with existing value (' + currentValue + ') and new value (' + parsedValue + ')')\n                }\n            }\n            this[objKey] = parsedValue\n            return true\n        }\n    }\n\n    parseValue(lCfgKeyName: string, cfgValue: any): any {\n        return cfgValue\n    }\n\n}\n","/**\n * Source: https://github.com/wokwi/bmp-ts\n */\n\nenum HeaderTypes {\n    BITMAP_INFO_HEADER = 40,\n    BITMAP_V2_INFO_HEADER = 52,\n    BITMAP_V3_INFO_HEADER = 56,\n    BITMAP_V4_HEADER = 108,\n    BITMAP_V5_HEADER = 124\n}\n\n// We have these:\n//\n// const sample = 0101 0101 0101 0101\n// const mask   = 0111 1100 0000 0000\n// 256        === 0000 0001 0000 0000\n//\n// We want to take the sample and turn it into an 8-bit value.\n//\n// 1. We extract the last bit of the mask:\n//\n// 0000 0100 0000 0000\n//       ^\n//\n// Like so:\n//\n// const a = ~mask =    1000 0011 1111 1111\n// const b = a + 1 =    1000 0100 0000 0000\n// const c = b & mask = 0000 0100 0000 0000\n//\n// 2. We shift it to the right and extract the bit before the first:\n//\n// 0000 0000 0010 0000\n//             ^\n//\n// Like so:\n//\n// const d = mask / c = 0000 0000 0001 1111\n// const e = mask + 1 = 0000 0000 0010 0000\n//\n// 3. We apply the mask and the two values above to a sample:\n//\n// const f = sample & mask = 0101 0100 0000 0000\n// const g = f / c =         0000 0000 0001 0101\n// const h = 256 / e =       0000 0000 0000 0100\n// const i = g * h =         0000 0000 1010 1000\n//                                     ^^^^ ^\n//\n// Voila, we have extracted a sample and \"stretched\" it to 8 bits. For samples\n// which are already 8-bit, h === 1 and g === i.\n\nfunction maskColor(\n    maskRed: number,\n    maskGreen: number,\n    maskBlue: number,\n    maskAlpha: number,\n) {\n    const maskRedR = (~maskRed + 1) & maskRed\n    const maskGreenR = (~maskGreen + 1) & maskGreen\n    const maskBlueR = (~maskBlue + 1) & maskBlue\n    const maskAlphaR = (~maskAlpha + 1) & maskAlpha\n\n    const shiftedMaskRedL = maskRed / maskRedR + 1\n    const shiftedMaskGreenL = maskGreen / maskGreenR + 1\n    const shiftedMaskBlueL = maskBlue / maskBlueR + 1\n    const shiftedMaskAlphaL = maskAlpha / maskAlphaR + 1\n\n    return {\n        shiftRed: (x: number) =>\n            (((x & maskRed) / maskRedR) * 0x100) / shiftedMaskRedL,\n        shiftGreen: (x: number) =>\n            (((x & maskGreen) / maskGreenR) * 0x100) / shiftedMaskGreenL,\n        shiftBlue: (x: number) =>\n            (((x & maskBlue) / maskBlueR) * 0x100) / shiftedMaskBlueL,\n        shiftAlpha:\n            maskAlpha !== 0\n                ? (x: number) =>\n                (((x & maskAlpha) / maskAlphaR) * 0x100) / shiftedMaskAlphaL\n                : () => 255,\n    }\n}\n\nconst enum Compression {\n    NONE = 0,\n    BI_RLE8 = 1,\n    BI_RLE4 = 2,\n    BI_BIT_FIELDS = 3,\n    BI_ALPHA_BIT_FIELDS = 6\n}\n\ntype BitsPerPixel = 1 | 4 | 8 | 16 | 24 | 32;\n\ninterface IColor {\n    red: number;\n    green: number;\n    blue: number;\n    quad: number;\n}\n\ninterface IDecoderOptions {\n    toRGBA?: boolean;\n}\n\ninterface IImage {\n    width: number;\n    height: number;\n    bitPP: BitsPerPixel;\n    data: Uint8Array;\n    reserved1?: number;\n    reserved2?: number;\n    hr?: number;\n    vr?: number;\n    colors?: number;\n    importantColors?: number;\n    palette?: IColor[];\n}\n\ninterface IBitmapImage extends IImage {\n    flag: string;\n    fileSize: number;\n    offset: number;\n    headerSize: number;\n    planes?: number;\n    compression?: Compression;\n    rawSize: number;\n}\n\ntype IColorProcessor = (x: number, line: number) => void;\n\nclass BmpDecoder implements IBitmapImage {\n    // Header\n    public flag: string\n    public fileSize!: number\n    public reserved1!: number\n    public reserved2!: number\n    public offset!: number\n    public headerSize!: number\n    public width!: number\n    public height!: number\n    public planes!: number\n    public bitPP!: BitsPerPixel\n    public compression?: Compression\n    public rawSize!: number\n    public hr!: number\n    public vr!: number\n    public colors!: number\n    public importantColors!: number\n    public palette!: IColor[]\n    public data!: Uint8Array\n\n    private maskRed!: number\n    private maskGreen!: number\n    private maskBlue!: number\n    private maskAlpha!: number\n\n    private readonly toRGBA: boolean\n\n    private pos: number\n    private bottomUp: boolean\n    private readonly buffer: Uint8Array\n    private readonly bufferView: DataView\n\n    private readonly locRed: number\n    private readonly locGreen: number\n    private readonly locBlue: number\n    private readonly locAlpha: number\n\n    private shiftRed!: (x: number) => number\n    private shiftGreen!: (x: number) => number\n    private shiftBlue!: (x: number) => number\n    private shiftAlpha!: (x: number) => number\n\n    constructor(\n        buffer: Uint8Array,\n        {toRGBA}: IDecoderOptions = {toRGBA: false},\n    ) {\n        this.buffer = buffer\n        this.bufferView = new DataView(\n            buffer.buffer,\n            buffer.byteOffset,\n            buffer.byteLength,\n        )\n        this.toRGBA = !!toRGBA\n        this.bottomUp = true\n        this.flag = String.fromCharCode(this.buffer[0]) + String.fromCharCode(this.buffer[1])\n        this.pos = 2\n\n        if (this.flag !== 'BM') {\n            throw new Error('Invalid BMP File')\n        }\n\n        this.locRed = this.toRGBA ? 0 : 3\n        this.locGreen = this.toRGBA ? 1 : 2\n        this.locBlue = this.toRGBA ? 2 : 1\n        this.locAlpha = this.toRGBA ? 3 : 0\n\n        this.parseHeader()\n        this.parseRGBA()\n    }\n\n    private parseHeader() {\n        this.fileSize = this.readUInt32LE()\n\n        this.reserved1 = this.bufferView.getUint16(this.pos, true)\n        this.pos += 2\n        this.reserved2 = this.bufferView.getUint16(this.pos, true)\n        this.pos += 2\n\n        this.offset = this.readUInt32LE()\n\n        // End of BITMAP_FILE_HEADER\n        this.headerSize = this.readUInt32LE()\n\n        if (!(this.headerSize in HeaderTypes)) {\n            throw new Error(`Unsupported BMP header size ${this.headerSize}`)\n        }\n\n        this.width = this.readUInt32LE()\n        this.height = this.readUInt32LE()\n\n        this.planes = this.bufferView.getUint16(this.pos, true)\n        this.pos += 2\n        this.bitPP = this.bufferView.getUint16(this.pos, true) as BitsPerPixel\n        this.pos += 2\n\n        this.compression = this.readUInt32LE()\n        this.rawSize = this.readUInt32LE()\n        this.hr = this.readUInt32LE()\n        this.vr = this.readUInt32LE()\n        this.colors = this.readUInt32LE()\n        this.importantColors = this.readUInt32LE()\n\n        // De facto defaults\n\n        if (this.bitPP === 32) {\n            this.maskAlpha = 0\n            this.maskRed = 0x00ff0000\n            this.maskGreen = 0x0000ff00\n            this.maskBlue = 0x000000ff\n        } else if (this.bitPP === 16) {\n            this.maskAlpha = 0\n            this.maskRed = 0x7c00\n            this.maskGreen = 0x03e0\n            this.maskBlue = 0x001f\n        }\n\n        // End of BITMAP_INFO_HEADER\n\n        if (\n            this.headerSize > HeaderTypes.BITMAP_INFO_HEADER ||\n            this.compression === Compression.BI_BIT_FIELDS ||\n            this.compression === Compression.BI_ALPHA_BIT_FIELDS\n        ) {\n            this.maskRed = this.readUInt32LE()\n            this.maskGreen = this.readUInt32LE()\n            this.maskBlue = this.readUInt32LE()\n        }\n\n        // End of BITMAP_V2_INFO_HEADER\n\n        if (\n            this.headerSize > HeaderTypes.BITMAP_V2_INFO_HEADER ||\n            this.compression === Compression.BI_ALPHA_BIT_FIELDS\n        ) {\n            this.maskAlpha = this.readUInt32LE()\n        }\n\n        // End of BITMAP_V3_INFO_HEADER\n\n        if (this.headerSize > HeaderTypes.BITMAP_V3_INFO_HEADER) {\n            this.pos +=\n                HeaderTypes.BITMAP_V4_HEADER - HeaderTypes.BITMAP_V3_INFO_HEADER\n        }\n\n        // End of BITMAP_V4_HEADER\n\n        if (this.headerSize > HeaderTypes.BITMAP_V4_HEADER) {\n            this.pos += HeaderTypes.BITMAP_V5_HEADER - HeaderTypes.BITMAP_V4_HEADER\n        }\n\n        // End of BITMAP_V5_HEADER\n\n        if (this.bitPP <= 8 || this.colors > 0) {\n            const len = this.colors === 0 ? 1 << this.bitPP : this.colors\n            this.palette = new Array(len)\n\n            for (let i = 0; i < len; i++) {\n                const blue = this.buffer[this.pos++]\n                const green = this.buffer[this.pos++]\n                const red = this.buffer[this.pos++]\n                const quad = this.buffer[this.pos++]\n\n                this.palette[i] = {\n                    red,\n                    green,\n                    blue,\n                    quad,\n                }\n            }\n        }\n\n        // End of color table\n\n        // Can the height ever be negative?\n        if (this.height < 0) {\n            this.height *= -1\n            this.bottomUp = false\n        }\n\n        const coloShift = maskColor(\n            this.maskRed,\n            this.maskGreen,\n            this.maskBlue,\n            this.maskAlpha,\n        )\n\n        this.shiftRed = coloShift.shiftRed\n        this.shiftGreen = coloShift.shiftGreen\n        this.shiftBlue = coloShift.shiftBlue\n        this.shiftAlpha = coloShift.shiftAlpha\n    }\n\n    private parseRGBA() {\n        this.data = new Uint8Array(this.width * this.height * 4)\n\n        switch (this.bitPP) {\n            case 1:\n                this.bit1()\n                break\n            case 4:\n                this.bit4()\n                break\n            case 8:\n                this.bit8()\n                break\n            case 16:\n                this.bit16()\n                break\n            case 24:\n                this.bit24()\n                break\n            default:\n                this.bit32()\n        }\n    }\n\n    private bit1() {\n        const xLen = Math.ceil(this.width / 8)\n        const mode = xLen % 4\n        const padding = mode !== 0 ? 4 - mode : 0\n\n        let lastLine: number | undefined\n\n        this.scanImage(padding, xLen, (x, line) => {\n            if (line !== lastLine) {\n                lastLine = line\n            }\n\n            const b = this.buffer[this.pos++]\n            const location = line * this.width * 4 + x * 8 * 4\n\n            for (let i = 0; i < 8; i++) {\n                if (x * 8 + i < this.width) {\n                    const rgb = this.palette[(b >> (7 - i)) & 0x1]\n\n                    this.data[location + i * 4 + this.locAlpha] = 0xff\n                    this.data[location + i * 4 + this.locBlue] = rgb.blue\n                    this.data[location + i * 4 + this.locGreen] = rgb.green\n                    this.data[location + i * 4 + this.locRed] = rgb.red\n                } else {\n                    break\n                }\n            }\n        })\n    }\n\n    private bit4() {\n        if (this.compression === Compression.BI_RLE4) {\n            this.data.fill(0)\n\n            let lowNibble = false //for all count of pixel\n            let lines = this.bottomUp ? this.height - 1 : 0\n            let location = 0\n\n            while (location < this.data.length) {\n                const a = this.buffer[this.pos++]\n                const b = this.buffer[this.pos++]\n\n                //absolute mode\n                if (a === 0) {\n                    if (b === 0) {\n                        //line end\n                        lines += this.bottomUp ? -1 : 1\n                        location = lines * this.width * 4\n                        lowNibble = false\n\n                        continue\n                    }\n\n                    if (b === 1) {\n                        // image end\n                        break\n                    }\n\n                    if (b === 2) {\n                        // offset x, y\n                        const x = this.buffer[this.pos++]\n                        const y = this.buffer[this.pos++]\n\n                        lines += this.bottomUp ? -y : y\n                        location += y * this.width * 4 + x * 4\n                    } else {\n                        let c = this.buffer[this.pos++]\n\n                        for (let i = 0; i < b; i++) {\n                            location = this.setPixelData(\n                                location,\n                                lowNibble ? c & 0x0f : (c & 0xf0) >> 4,\n                            )\n\n                            if (i & 1 && i + 1 < b) {\n                                c = this.buffer[this.pos++]\n                            }\n\n                            lowNibble = !lowNibble\n                        }\n\n                        if ((((b + 1) >> 1) & 1) === 1) {\n                            this.pos++\n                        }\n                    }\n                } else {\n                    //encoded mode\n                    for (let i = 0; i < a; i++) {\n                        location = this.setPixelData(\n                            location,\n                            lowNibble ? b & 0x0f : (b & 0xf0) >> 4,\n                        )\n                        lowNibble = !lowNibble\n                    }\n                }\n            }\n        } else {\n            const xLen = Math.ceil(this.width / 2)\n            const mode = xLen % 4\n            const padding = mode !== 0 ? 4 - mode : 0\n\n            this.scanImage(padding, xLen, (x, line) => {\n                const b = this.buffer[this.pos++]\n                const location = line * this.width * 4 + x * 2 * 4\n\n                const first4 = b >> 4\n                let rgb = this.palette[first4]\n\n                this.data[location + this.locAlpha] = 0xff\n                this.data[location + this.locBlue] = rgb.blue\n                this.data[location + this.locGreen] = rgb.green\n                this.data[location + this.locRed] = rgb.red\n\n                if (x * 2 + 1 >= this.width) {\n                    // throw new Error('Something');\n                    return false\n                }\n\n                const last4 = b & 0x0f\n                rgb = this.palette[last4]\n\n                this.data[location + 4 + this.locAlpha] = 0xff\n                this.data[location + 4 + this.locBlue] = rgb.blue\n                this.data[location + 4 + this.locGreen] = rgb.green\n                this.data[location + 4 + this.locRed] = rgb.red\n            })\n        }\n    }\n\n    private bit8() {\n        if (this.compression === Compression.BI_RLE8) {\n            this.data.fill(0)\n\n            let lines = this.bottomUp ? this.height - 1 : 0\n            let location = 0\n\n            while (location < this.data.length) {\n                const a = this.buffer[this.pos++]\n                const b = this.buffer[this.pos++]\n\n                //absolute mode\n                if (a === 0) {\n                    if (b === 0) {\n                        //line end\n                        lines += this.bottomUp ? -1 : 1\n                        location = lines * this.width * 4\n                        continue\n                    }\n\n                    if (b === 1) {\n                        //image end\n                        break\n                    }\n\n                    if (b === 2) {\n                        //offset x,y\n                        const x = this.buffer[this.pos++]\n                        const y = this.buffer[this.pos++]\n\n                        lines += this.bottomUp ? -y : y\n                        location += y * this.width * 4 + x * 4\n                    } else {\n                        for (let i = 0; i < b; i++) {\n                            const c = this.buffer[this.pos++]\n                            location = this.setPixelData(location, c)\n                        }\n\n                        // @ts-ignore\n                        const shouldIncrement = b & (1 === 1)\n                        if (shouldIncrement) {\n                            this.pos++\n                        }\n                    }\n                } else {\n                    //encoded mode\n                    for (let i = 0; i < a; i++) {\n                        location = this.setPixelData(location, b)\n                    }\n                }\n            }\n        } else {\n            const mode = this.width % 4\n            const padding = mode !== 0 ? 4 - mode : 0\n\n            this.scanImage(padding, this.width, (x, line) => {\n                const b = this.buffer[this.pos++]\n                const location = line * this.width * 4 + x * 4\n\n                if (b < this.palette.length) {\n                    const rgb = this.palette[b]\n\n                    this.data[location + this.locAlpha] = 0xff\n                    this.data[location + this.locBlue] = rgb.blue\n                    this.data[location + this.locGreen] = rgb.green\n                    this.data[location + this.locRed] = rgb.red\n                }\n            })\n        }\n    }\n\n    private bit16() {\n        const padding = (this.width % 2) * 2\n\n        this.scanImage(padding, this.width, (x, line) => {\n            const loc = line * this.width * 4 + x * 4\n            const px = this.bufferView.getUint16(this.pos, true)\n            this.pos += 2\n\n            this.data[loc + this.locRed] = this.shiftRed(px)\n            this.data[loc + this.locGreen] = this.shiftGreen(px)\n            this.data[loc + this.locBlue] = this.shiftBlue(px)\n            this.data[loc + this.locAlpha] = this.shiftAlpha(px)\n        })\n    }\n\n    private bit24() {\n        const padding = this.width % 4\n\n        this.scanImage(padding, this.width, (x, line) => {\n            const loc = line * this.width * 4 + x * 4\n            const blue = this.buffer[this.pos++]\n            const green = this.buffer[this.pos++]\n            const red = this.buffer[this.pos++]\n\n            this.data[loc + this.locAlpha] = 0xff\n            this.data[loc + this.locBlue] = blue\n            this.data[loc + this.locGreen] = green\n            this.data[loc + this.locRed] = red\n        })\n    }\n\n    private bit32() {\n        this.scanImage(0, this.width, (x, line) => {\n            const loc = line * this.width * 4 + x * 4\n            const px = this.readUInt32LE()\n\n            this.data[loc + this.locAlpha] = this.shiftAlpha(px)\n            this.data[loc + this.locBlue] = this.shiftBlue(px)\n            this.data[loc + this.locGreen] = this.shiftGreen(px)\n            this.data[loc + this.locRed] = this.shiftRed(px)\n        })\n    }\n\n    private scanImage(\n        padding = 0,\n        width = this.width,\n        processPixel: IColorProcessor,\n    ) {\n        for (let y = this.height - 1; y >= 0; y--) {\n            const line = this.bottomUp ? y : this.height - 1 - y\n\n            for (let x = 0; x < width; x++) {\n                processPixel.call(this, x, line)\n            }\n\n            this.pos += padding\n        }\n    }\n\n    private readUInt32LE() {\n        const value = this.bufferView.getUint32(this.pos, true)\n        this.pos += 4\n        return value\n    }\n\n    private setPixelData(location: number, rgbIndex: number) {\n        const {blue, green, red} = this.palette[rgbIndex]\n\n        this.data[location + this.locAlpha] = 0xff\n        this.data[location + this.locBlue] = blue\n        this.data[location + this.locGreen] = green\n        this.data[location + this.locRed] = red\n\n        return location + 4\n    }\n}\n\nexport class AlphaBitmapDecoder {\n\n    static parse(buffer: Uint8Array, alphaIndex: number = null): ImageData {\n        const decoder = new BmpDecoder(buffer, {toRGBA: true})\n        const data = new Uint8ClampedArray(decoder.data)\n        if (alphaIndex || alphaIndex === 0) {\n            const alphaColor = decoder.palette?.[alphaIndex] // XXX fails for a102_bigtyre.bmp\n            for (let c = 0; c < decoder.data.length; c += 4) {\n                data[c + 3] = alphaColor?.red === data[c] && alphaColor?.green === data[c + 1] && alphaColor?.blue === data[c + 2] ? 0 : 255\n            }\n        }\n        return new ImageData(data, decoder.width, decoder.height)\n    }\n\n}\n","export class ConfigColor {\n\n    r: number\n    g: number\n    b: number\n\n    constructor(values: number[]) {\n        [this.r, this.g, this.b] = values\n    }\n\n}\n","export class ObjectiveImageCfg {\n\n    filename: string\n    x: number\n    y: number\n\n    constructor(cfgValue: any) {\n        [this.filename, this.x, this.y] = cfgValue\n    }\n\n}\n","import { iGet } from '../core/Util'\nimport { PriorityIdentifier } from '../game/model/job/PriorityIdentifier'\nimport { BaseConfig } from './BaseConfig'\nimport { ConfigColor } from './ConfigColor'\nimport { ObjectiveImageCfg } from './ObjectiveImageCfg'\n\nexport class LevelsCfg {\n\n    levelsByName: {} = []\n\n    constructor(cfgObj: any) {\n        Object.keys(cfgObj).forEach((levelKey) => {\n            if (!levelKey.startsWith('Tutorial') && !levelKey.startsWith('Level')) return // ignore incomplete test levels and duplicates\n            this.levelsByName[levelKey] = new LevelEntryCfg(cfgObj[levelKey])\n        })\n    }\n\n}\n\nexport class LevelEntryCfg extends BaseConfig {\n\n    fullName: string = ''\n    endGameAvi1: string = ''\n    endGameAvi2: string = ''\n    allowRename: boolean = false\n    recallOLObjects: boolean = false\n    generateSpiders: boolean = false\n    video: string = ''\n    disableEndTeleport: boolean = false\n    disableStartTeleport: boolean = false\n    emergeTimeOut: any = ''\n    boulderAnimation: any = ''\n    noMultiSelect: any = ''\n    noAutoEat: any = ''\n    disableToolTipSound: any = ''\n    blockSize: any = ''\n    digDepth: any = ''\n    roughLevel: any = ''\n    roofHeight: any = ''\n    useRoof: any = ''\n    selBoxHeight: any = ''\n    fpRotLightRGB: any = ''\n    fogColourRGB: any = ''\n    highFogColourRGB: any = ''\n    fogRate: number = 0\n    fallinMultiplier: number = 0\n    numberOfLandSlidesTillCaveIn: number = 0\n    noFallins: boolean = false\n    oxygenRate: number = 0 // 0 - 100\n    surfaceMap: string = ''\n    predugMap: string = ''\n    terrainMap: string = ''\n    emergeMap: string = ''\n    erodeMap: string = ''\n    fallinMap: string = ''\n    blockPointersMap: string = ''\n    cryOreMap: string = ''\n    pathMap: string = ''\n    noGather: boolean = false\n    textureSet: string = ''\n    rockFallStyle: any = ''\n    emergeCreature: any = ''\n    safeCaverns: any = ''\n    seeThroughWalls: any = ''\n    oListFile: any = ''\n    ptlFile: any = ''\n    nerpFile: any = ''\n    nerpMessageFile: any = ''\n    objectiveText: any = ''\n    objectiveImage640x480: ObjectiveImageCfg = null\n    erodeTriggerTime: number = 0\n    erodeErodeTime: number = 0\n    erodeLockTime: number = 0\n    nextLevel: any = ''\n    levelLinks: any = ''\n    frontEndX: number = 0\n    frontEndY: number = 0\n    frontEndOpen: boolean = false\n    priorities: LevelPrioritiesEntryConfig[] = [] // priority order matters!\n    reward: LevelRewardConfig = null\n    menuBMP: string[] = []\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n    parseValue(lCfgKeyName: string, cfgValue: any): any {\n        if (lCfgKeyName === 'fullName'.toLowerCase()) {\n            return cfgValue.replace(/_/g, ' ')\n        } else if (lCfgKeyName.endsWith('rgb')) {\n            return new ConfigColor(cfgValue)\n        } else if (lCfgKeyName === 'priorities') {\n            return Object.keys(cfgValue)\n                .filter(name => name.toLowerCase() !== 'AI_Priority_GetTool'.toLowerCase()) // not used in the game\n                .map(name => new LevelPrioritiesEntryConfig(name, cfgValue[name]))\n        } else if (lCfgKeyName === 'reward') {\n            return new LevelRewardConfig(cfgValue)\n        } else if (lCfgKeyName === 'objectiveimage640x480') {\n            return new ObjectiveImageCfg(cfgValue)\n        } else {\n            return super.parseValue(lCfgKeyName, cfgValue)\n        }\n    }\n\n}\n\nexport class LevelPrioritiesEntryConfig {\n\n    key: PriorityIdentifier\n    enabled: boolean\n\n    constructor(name: string, enabled: boolean) {\n        this.key = iGet(PriorityIdentifier, name.replace(/_/g, ''))\n        this.enabled = enabled\n    }\n\n}\n\nexport class LevelRewardConfig extends BaseConfig {\n\n    enable: boolean = true\n    modifier: number = null\n    importance: LevelRewardImportanceConfig = null\n    quota: LevelRewardQuotaConfig = null\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n    parseValue(lCfgKeyName: string, cfgValue: any): any {\n        if (lCfgKeyName === 'importance') {\n            return new LevelRewardImportanceConfig(cfgValue)\n        } else if (lCfgKeyName === 'quota') {\n            return new LevelRewardQuotaConfig(cfgValue)\n        } else {\n            return super.parseValue(lCfgKeyName, cfgValue)\n        }\n    }\n}\n\nexport class LevelRewardImportanceConfig extends BaseConfig {\n\n    crystals: number = 0\n    timer: number = 0\n    caverns: number = 0\n    constructions: number = 0\n    oxygen: number = 0\n    figures: number = 0\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n}\n\nexport class LevelRewardQuotaConfig extends BaseConfig {\n\n    crystals: number = null\n    timer: number = null\n    caverns: number = null\n    constructions: number = null\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n}\n","export class MenuCycleItemCfg {\n\n    actionName: string\n    x: number\n    y: number\n    width: number\n    height: number\n    description: string\n    two: number // usage unclear\n    labelOff: string\n    labelOn: string\n\n    constructor(cfgObj: any) {\n        [this.actionName, this.x, this.y, this.width, this.height, this.description, this.two, this.labelOff, this.labelOn] = cfgObj\n        this.description = this.description.replace(/_/g, ' ')\n    }\n\n}\n","export class MenuLabelItemCfg {\n\n    actionName: string\n    x: number\n    y: number\n    label: string\n    imgNormal: string\n    imgHover: string\n    imgPressed: string\n    tooltip: string\n    target: string\n    flag: string // usage unclear\n\n    constructor(cfgObj: any) {\n        if (cfgObj.length === 5 || cfgObj.length === 6) {\n            [this.actionName, this.x, this.y, this.label, this.target, this.flag] = cfgObj\n            this.label = Array.isArray(this.label) ? this.label.join(',') : this.label // TODO improve cfg handling, remove join\n            this.label = this.label.replace(/_/g, ' ')\n        } else if (cfgObj.length === 8) {\n            [this.actionName, this.x, this.y, this.imgNormal, this.imgHover, this.imgPressed, this.tooltip, this.target] = cfgObj\n        } else {\n            console.warn('Unexpected cfg object length: ' + cfgObj.length)\n            console.log(cfgObj)\n        }\n    }\n\n}\n","export class MenuSliderItemCfg {\n\n    actionName: string\n    x: number\n    y: number\n    width: number\n    height: number\n    description: string\n    min: number\n    max: number\n    imgOff: string\n    imgOn: string\n    imgLeft: string\n    imgRight: string\n    btnLeftNormal: string\n    btnRightNormal: string\n    btnLeftHover: string\n    btnRightHover: string\n\n    constructor(cfgObj: any) {\n        [this.actionName, this.x, this.y, this.width, this.height, this.description, this.min, this.max, this.imgOff, this.imgOn,\n            this.imgLeft, this.imgRight, this.btnRightNormal, this.btnLeftNormal, this.btnRightHover, this.btnLeftHover] = cfgObj\n    }\n\n}\n","import { BaseConfig } from './BaseConfig'\nimport { MenuCycleItemCfg } from './MenuCycleItemCfg'\nimport { MenuLabelItemCfg } from './MenuLabelItemCfg'\nimport { MenuSliderItemCfg } from './MenuSliderItemCfg'\n\nexport class MenuEntryCfg extends BaseConfig {\n\n    fullName: string = ''\n    title: string = ''\n    position: [number, number] = [0, 0]\n    menuFont: string = ''\n    loFont: string = ''\n    hiFont: string = ''\n    itemCount: number = 0\n    menuImage: string = ''\n    autoCenter: boolean = false\n    displayTitle: boolean = false\n    overlays: any[] = []\n    playRandom: boolean = false\n    itemsLabel: MenuLabelItemCfg[] = []\n    itemsSlider: MenuSliderItemCfg[] = []\n    itemsCycle: MenuCycleItemCfg[] = []\n    anchored: boolean = false\n    canScroll: boolean = false\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n    assignValue(objKey, lCfgKeyName, cfgValue): boolean {\n        if (lCfgKeyName.match(/item\\d+/i)) {\n            const lActionName = cfgValue[0].toLowerCase()\n            if (lActionName === 'next' || lActionName === 'trigger') {\n                this.itemsLabel.push(new MenuLabelItemCfg(cfgValue))\n            } else if (lActionName === 'slider') {\n                this.itemsSlider.push(new MenuSliderItemCfg(cfgValue))\n            } else if (lActionName === 'cycle') {\n                this.itemsCycle.push(new MenuCycleItemCfg(cfgValue))\n            } else {\n                console.warn('Unexpected item action name: ' + cfgValue[0])\n                return false\n            }\n            return true\n        } else if (lCfgKeyName.match(/overlay\\d+/i)) {\n            this.overlays.push(cfgValue)\n            return true\n        }\n        return super.assignValue(objKey, lCfgKeyName, cfgValue)\n    }\n\n    parseValue(lCfgKeyName: string, cfgValue: any): any {\n        if (lCfgKeyName === 'fullName'.toLowerCase() || lCfgKeyName === 'title') {\n            return cfgValue.replace(/_/g, ' ')\n        } else {\n            return super.parseValue(lCfgKeyName, cfgValue)\n        }\n    }\n\n}\n","import { BaseConfig } from './BaseConfig'\nimport { MenuEntryCfg } from './MenuEntryCfg'\n\nexport class MenuCfg extends BaseConfig {\n\n    menuCount: number = 0\n    menus: MenuEntryCfg[] = []\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n    assignValue(objKey, lCfgKeyName, cfgValue): boolean {\n        if (lCfgKeyName.match(/menu\\d+/i)) {\n            this.menus.push(new MenuEntryCfg(cfgValue))\n            return true\n        }\n        return super.assignValue(objKey, lCfgKeyName, cfgValue)\n    }\n\n}\n","import { BaseConfig } from './BaseConfig'\n\nexport class RewardCfg extends BaseConfig {\n\n    display: boolean = true\n    wallpaper: string = ''\n    images: RewardImageCfg[] = []\n    texts: RewardTextCfg[] = []\n    boxImages: RewardImageCfg[] = []\n    fonts: RewardFontsCfg = null\n    flics: { flhFilepath: string, x: number, y: number, w: number, h: number } = null\n    scrollSpeed: number = 0\n    centreText: boolean = false\n    vertSpacing: number = 0\n    backFont: string = ''\n    font: string = ''\n    titleFont: string = ''\n    timer: number = 0\n    saveButton: any = ''\n    advanceButton: any = ''\n    completeText: string = ''\n    failedText: string = ''\n    quitText: string = ''\n    textPos: [number, number] = [0, 0]\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n    assignValue(objKey, lCfgKeyName, cfgValue): boolean {\n        if (lCfgKeyName === 'images') {\n            Object.values(cfgValue).forEach((imgConf) => this.images.push(new RewardImageCfg(imgConf)))\n            return true\n        } else if (lCfgKeyName === 'text') {\n            Object.values(cfgValue).forEach((imgConf) => this.texts.push(new RewardTextCfg(imgConf)))\n            return true\n        } else if (lCfgKeyName === 'boximages') {\n            Object.values(cfgValue).forEach((imgConf) => this.boxImages.push(new RewardImageCfg(imgConf)))\n            return true\n        } else if (lCfgKeyName === 'fonts') {\n            this.fonts = new RewardFontsCfg(cfgValue)\n            return true\n        } else {\n            return super.assignValue(objKey, lCfgKeyName, cfgValue)\n        }\n    }\n\n}\n\nexport class RewardImageCfg {\n\n    filePath: string = ''\n    x: number = 0\n    y: number = 0\n\n    constructor(cfgObj: any) {\n        [this.filePath, this.x, this.y] = cfgObj\n    }\n\n}\n\nexport class RewardTextCfg {\n\n    text: string = ''\n    x: number = 0\n    y: number = 0\n\n    constructor(cfgObj: any) {\n        [this.text, this.x, this.y] = cfgObj\n    }\n\n}\n\nexport class RewardFontsCfg extends BaseConfig {\n\n    crystals: string = ''\n    ore: string = ''\n    diggable: string = ''\n    constructions: string = ''\n    caverns: string = ''\n    figures: string = ''\n    rockMonsters: string = ''\n    oxygen: string = ''\n    timer: string = ''\n    score: string = ''\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n}\n","export const encodeChar: number[] = []\n\nfor (let c = 0; c < 256; c++) {\n    encodeChar[c] = c\n}\nencodeChar[130] = 0x00E4 // ä\nencodeChar[142] = 0x00C4 // Ä\nencodeChar[162] = 0x00F6 // ö\nencodeChar[167] = 0x00DC // Ü\nencodeChar[171] = 0x00FC // ü\nencodeChar[195] = 0x00DF // ß\n","import { encodeChar } from './EncodingHelper'\n\nexport class CfgFileParser {\n\n    static parse(buffer): any {\n        const result = {}\n        const ancestry = []\n        let activeObject = result\n        let isComment = false\n        let keyVal = 0 // 0 = looking for key, 1 = inside key, 1 = looking for value, 2 = inside value\n        let key = ''\n        let value = ''\n        // debug output is a bad idea here, buffer size is about 232.611 characters and has 6781 lines\n        for (let seek = 0; seek < buffer.length; seek++) {\n            let charCode = buffer[seek]\n            if (charCode === 123 && key === 'FullName') { // dirty workaround but in the original file { (123) was used instead of Ä (142)\n                charCode = 142\n            }\n            let charStr = String.fromCharCode(encodeChar[charCode])\n            if (charStr === ';' || charStr === '/') { // someone used // as a marker for a comment\n                isComment = true\n            } else if (charCode === 10 || charCode === 13) {\n                isComment = false\n            }\n            if (!isComment) {\n                if (charCode > 32) { // not a whitespace\n                    if (keyVal === 0) { // looking for key\n                        if (charStr === '}') {\n                            activeObject = ancestry.pop()\n                        } else {\n                            keyVal++\n                            key = charStr\n                        }\n                    } else if (keyVal === 1) { // inside key\n                        key += charStr\n                    } else if (keyVal === 2) { // looking for value\n                        if (charStr === '{') { // start of a new object key is identifier\n                            ancestry.push(activeObject)\n                            activeObject = {}\n                            ancestry[ancestry.length - 1][key] = activeObject\n                            keyVal = 0 // start looking for a key again\n                        } else {\n                            keyVal++\n                            value = charStr\n                        }\n                    } else if (keyVal === 3) { // inside value\n                        value += charStr\n                    }\n                } else { // some whitespace\n                    if (keyVal === 1) {\n                        keyVal++\n                    } else if (keyVal === 3) {\n                        keyVal = 0\n                        const parsed = CfgFileParser.parseValue(value)\n                        if (activeObject.hasOwnProperty(key)) {\n                            activeObject[key].push(parsed)\n                        } else {\n                            activeObject[key] = [parsed]\n                        }\n                    }\n                }\n            }\n        }\n\n        const stack = [result]\n        while (stack.length > 0) {\n            const obj = stack.pop()\n            Object.keys(obj).forEach((key) => {\n                const val = obj[key]\n                if (Array.isArray(val)) {\n                    if (val.length === 1) {\n                        obj[key] = val[0]\n                    } else {\n                        val.forEach((sub) => stack.push(sub))\n                    }\n                } else if (Object.keys(val).length > 1) {\n                    stack.push(val)\n                }\n            })\n        }\n\n        // apply some patches here\n        Object.values(result['Lego*']['Levels']).forEach((levelConf) => {\n            if (levelConf['CryoreMap']) {\n                levelConf['CryOreMap'] = levelConf['CryoreMap']  // typos... typos everywhere\n                delete levelConf['CryoreMap']\n            }\n            if (levelConf['CryOreMap']) {\n                levelConf['CryOreMap'] = levelConf['CryOreMap'].replace('Cryo_', 'Cror_')\n            }\n            if (levelConf['PredugMap']) {\n                levelConf['PreDugMap'] = levelConf['PredugMap']\n                delete levelConf['PredugMap']\n            }\n            const textureSet = levelConf['TextureSet']\n            if (Array.isArray(textureSet) && Array.isArray(textureSet[1])) {\n                levelConf['TextureSet'] = textureSet[1]\n            }\n        })\n\n        return result['Lego*']\n    }\n\n    static parseValue(val) {\n        function splitShrink(sep) {\n            val = val.split(sep).filter(val => val !== '').map(val => CfgFileParser.parseValue(val))\n            if (val.length === 0) {\n                val = ''\n            } else if (val.length === 1) {\n                val = val[0]\n            }\n        }\n\n        const num = Number(val)\n        if (isNaN(num)) {\n            val = val.toString().replace(/\\\\/g, '/')\n            const lVal = val.toLowerCase()\n            if (lVal === 'true') return true\n            if (lVal === 'false') return false\n            if (lVal === 'null') return ''\n            if (val.includes(':')) {\n                splitShrink.call(this, ':')\n            } else if (val.includes(',')) { // TODO improve cfg handling: what about strings\n                splitShrink.call(this, ',')\n            } else if (val.includes('|')) {\n                splitShrink.call(this, '|')\n            }\n            return val\n        } else {\n            return num\n        }\n    }\n\n}\n","import { encodeChar } from './EncodingHelper'\n\nexport class ObjectiveTextParser {\n\n    parseObjectiveTextFile(txtFileContent: Uint8Array) {\n        const result = {}\n        let state = PARSING_STATE.DROP\n        let currentLevel: LevelObjectiveTextEntry = null\n        let value = ''\n        let line = ''\n        for (let c = 0; c < txtFileContent.length; c++) {\n            const code = encodeChar[txtFileContent[c]]\n            let char = String.fromCharCode(code)\n            if (state === PARSING_STATE.DROP) {\n                if (char === '[') {\n                    if (currentLevel) result[currentLevel.key] = currentLevel\n                    currentLevel = new LevelObjectiveTextEntry()\n                    state = PARSING_STATE.KEY\n                } else if (currentLevel && char === ':') {\n                    const lLine = line.toLowerCase()\n                    if (lLine === 'objective') {\n                        line = ''\n                        state = PARSING_STATE.OBJECTIVE\n                    } else if (lLine === 'failure') {\n                        line = ''\n                        state = PARSING_STATE.FAILURE\n                    } else if (lLine === 'completion') {\n                        line = ''\n                        state = PARSING_STATE.COMPLETION\n                    } else if (lLine === 'crystalfailure') {\n                        line = ''\n                        state = PARSING_STATE.CRYSTAL_FAILURE\n                    }\n                    for (; c < txtFileContent.length && txtFileContent[c + 1] === '\\t'.charCodeAt(0); c++) {\n                    }\n                } else if (char === '\\n' || char === '\\r') {\n                    line = ''\n                } else {\n                    line += char\n                }\n            } else if (state === PARSING_STATE.KEY) {\n                if (char === ']') {\n                    currentLevel.key = value\n                    value = ''\n                    state = PARSING_STATE.DROP\n                } else if (char === '\\n' || char === '\\r') {\n                    throw 'Malformed objective text file'\n                } else {\n                    value += char\n                }\n            } else if (state === PARSING_STATE.OBJECTIVE) {\n                if (char === '\\n' || char === '\\r') {\n                    currentLevel.objective = value\n                    value = ''\n                    state = PARSING_STATE.DROP\n                } else {\n                    value += char\n                }\n            } else if (state === PARSING_STATE.FAILURE) {\n                if (char === '\\n' || char === '\\r') {\n                    currentLevel.failure = value\n                    value = ''\n                    state = PARSING_STATE.DROP\n                } else {\n                    value += char\n                }\n            } else if (state === PARSING_STATE.COMPLETION) {\n                if (char === '\\n' || char === '\\r') {\n                    currentLevel.completion = value\n                    value = ''\n                    state = PARSING_STATE.DROP\n                } else {\n                    value += char\n                }\n            } else if (state === PARSING_STATE.CRYSTAL_FAILURE) {\n                if (char === '\\n' || char === '\\r') {\n                    currentLevel.crystalFailure = value\n                    value = ''\n                    state = PARSING_STATE.DROP\n                } else {\n                    value += char\n                }\n            }\n        }\n        if (currentLevel) result[currentLevel.key] = currentLevel\n        currentLevel = null\n        return result\n    }\n\n}\n\nenum PARSING_STATE {\n\n    DROP,\n    KEY,\n    OBJECTIVE,\n    FAILURE,\n    COMPLETION,\n    CRYSTAL_FAILURE,\n\n}\n\nexport class LevelObjectiveTextEntry {\n\n    key: string\n    objective: string\n    failure: string\n    completion: string\n    crystalFailure: string\n\n}\n","// The RockRaidersObjectNotation (RON) format is related to JSON\n\nexport class RonFile {\n\n    static parse(content: string) {\n        const lines: string[][] = content.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n') // normalize newlines\n            .replace(/\\t/g, ' ') // tabs to spaces\n            .split('\\n')\n            .map((l) => { // strip comments from each line\n                const indDoubleSlash = l.indexOf('//')\n                if (indDoubleSlash > -1) l = l.substring(0, indDoubleSlash)\n                const indComment = l.indexOf(';')\n                if (indComment > -1) l = l.substring(0, indComment)\n                return l\n            })\n            .map((l) => { // remove whitespace at start/end of lines\n                l = l.trim()\n                return l\n            })\n            .filter(l => l !== '') // filter empty lines\n            .map((v) => v.split(' ').filter(v => v !== ''))\n        const root = {}\n        RonFile.parseObj(root, lines, 0)\n        return root\n    }\n\n    static parseObj(obj: {}, lines: string[][], start): number {\n        for (let c = start; c < lines.length; c++) {\n            const [name, val] = lines[c]\n            const key = name.toLowerCase()\n            if (val === '{') {\n                obj[key] = {}\n                c = this.parseObj(obj[key], lines, c + 1)\n            } else if (key === '}') {\n                return c\n            } else {\n                // parse values\n                let value: any = val.split(':').filter(v => v !== '') // there is key::value\n                    .map(v => v.split(',').map(v => v.split('|').map(v => this.parseValue(v))))\n                while (value.length === 1) value = value[0] // replace arrays with only one value\n                obj[key] = value\n            }\n        }\n        return lines.length\n    }\n\n    static parseValue(value: string) {\n        const num = Number(value)\n        const lv = value.toLowerCase()\n        if (!isNaN(num)) {\n            return num\n        } else if (lv === 'false') {\n            return false\n        } else if (lv === 'true') {\n            return true\n        } else {\n            return value\n        }\n    }\n\n}\n","import { encodeChar } from './EncodingHelper'\n\n/**\n * Handles the extraction of single files from a bigger WAD data blob\n */\nexport class WadFile {\n\n    buffer: Int8Array = null\n    entryIndexByName: Map<string, number> = new Map()\n    fLength: number[] = []\n    fStart: number[] = []\n\n    /**\n     * Validate and parse the given data object as binary blob of a WAD file\n     * @param data binary blob\n     * @param debug enable/disable debug output while parsing\n     */\n    parseWadFile(data, debug = false) {\n        const dataView = new DataView(data)\n        this.buffer = new Int8Array(data)\n        let pos = 0\n        if (String.fromCharCode.apply(null, this.buffer.slice(pos, 4)) !== 'WWAD') {\n            throw 'Invalid WAD0 file provided'\n        }\n        if (debug) {\n            console.log('WAD0 file seems legit')\n        }\n        pos = 4\n        const numberOfEntries = dataView.getInt32(pos, true)\n        if (debug) {\n            console.log(numberOfEntries)\n        }\n        pos = 8\n\n        let bufferStart = pos\n        for (let i = 0; i < numberOfEntries; pos++) {\n            if (this.buffer[pos] === 0) {\n                this.entryIndexByName.set(String.fromCharCode.apply(null, this.buffer.slice(bufferStart, pos)).replace(/\\\\/g, '/').toLowerCase(), i)\n                bufferStart = pos + 1\n                i++\n            }\n        }\n\n        if (debug) {\n            console.log(this.entryIndexByName)\n        }\n\n        for (let i = 0; i < numberOfEntries; pos++) {\n            if (this.buffer[pos] === 0) {\n                bufferStart = pos + 1\n                i++\n            }\n        }\n\n        if (debug) {\n            console.log('Offset after absolute original names is ' + pos)\n        }\n\n        for (let i = 0; i < numberOfEntries; i++) {\n            this.fLength[i] = dataView.getInt32(pos + 8, true)\n            this.fStart[i] = dataView.getInt32(pos + 12, true)\n            pos += 16\n        }\n\n        if (debug) {\n            console.log(this.fLength)\n            console.log(this.fStart)\n        }\n    }\n\n    /**\n     * Returns the entries content extracted by name from the managed WAD file\n     * @param entryName Entry name to be extracted\n     * @returns {Uint8Array} Returns the content as Uint8Array\n     */\n    getEntryData(entryName): Uint8Array {\n        return new Uint8Array(this.getEntryBuffer(entryName))\n    }\n\n    /**\n     * Returns the entries content as text extracted by name from the managed WAD file\n     * @param entryName Entry name to be extracted\n     * @returns {string} Returns the content as String\n     */\n    getEntryText(entryName): string {\n        let result = ''\n        this.getEntryData(entryName).forEach((c) => result += String.fromCharCode(encodeChar[c]))\n        return result\n    }\n\n    /**\n     * Returns the entries content by name extracted from the managed WAD file\n     * @param entryName Entry name to be extracted\n     * @returns {Int8Array} Returns the content as buffer slice\n     */\n    getEntryBuffer(entryName): Int8Array {\n        const index = this.entryIndexByName.get(entryName.toLowerCase())\n        if (index === undefined || index === null) {\n            throw 'Entry \\'' + entryName + '\\' not found in WAD file'\n        }\n        return this.buffer.slice(this.fStart[index], this.fStart[index] + this.fLength[index])\n    }\n\n    filterEntryNames(regexStr) {\n        const regex = new RegExp(regexStr.toLowerCase())\n        const result = []\n        this.entryIndexByName.forEach((index, entry) => {\n            if (entry.match(regex)) result.push(entry)\n        })\n        return result\n    }\n\n}\n","export function getPath(url: string): string {\n    if (!url) return url\n    let strUrl = url.toString().replace(/\\\\/g, '/')\n    if (strUrl.startsWith('/')) strUrl = strUrl.substring(1)\n    const lastInd = strUrl.lastIndexOf('/')\n    strUrl = strUrl.substring(0, lastInd + 1)\n    if (strUrl.startsWith('/')) strUrl = strUrl.substring(1)\n    return strUrl\n}\n\nexport function getFilename(url: string): string {\n    if (!url) return url\n    let strUrl = url.toString().replace(/\\\\/g, '/')\n    if (strUrl.startsWith('/')) strUrl = strUrl.substring(1)\n    const lastInd = strUrl.lastIndexOf('/')\n    return strUrl.substring(lastInd + 1)\n}\n\nexport function iGet(obj, ...keys: string[]): any {\n    keys.forEach((keyname) => {\n        obj = Object.keys(obj)\n            .filter((key) => key.toLowerCase() === keyname.toLowerCase())\n            .map((key) => obj[key])\n        obj = obj ? obj[0] : obj\n    })\n    return obj\n}\n","import { LevelEntryCfg, LevelsCfg } from '../../cfg/LevelsCfg'\nimport { MenuCfg } from '../../cfg/MenuCfg'\nimport { RewardCfg } from '../../cfg/RewardCfg'\nimport { AlphaBitmapDecoder } from './AlphaBitmapDecoder'\nimport { CfgFileParser } from './CfgFileParser'\nimport { ObjectiveTextParser } from './ObjectiveTextParser'\nimport { RonFile } from './RonFile'\nimport { WadFile } from './WadFile'\nimport { getFilename, getPath, iGet } from './WadUtil'\n\nexport class WadLoader {\n\n    wad0File: WadFile = null\n    wad1File: WadFile = null\n    startTime: Date\n    assetIndex: number = 0\n    totalResources: number = 0\n    assetsFromCfgByName: Map<string, { method: ((name: string, callback: (any) => void) => void), assetPath: string, optional: boolean }> = new Map()\n\n    onMessage: (msg: string) => any = (msg: string) => {\n        console.log(msg)\n    }\n    onInitialLoad: (totalResources: number, cfg: any) => any = () => {\n        console.log('Initial loading done.')\n    }\n    onAssetLoaded: (assetIndex: number, assetName: string, assetObj: any) => any = () => {\n    }\n    onLoadDone: (totalResources: number, loadingTimeSeconds: string) => any = (totalResources: number, loadingTimeSeconds: string) => {\n        console.log('Loading of about ' + totalResources + ' assets complete! Total load time: ' + loadingTimeSeconds + ' seconds.')\n    }\n\n    loadWadImageAsset(name: string, callback: (obj: ImageData) => any) {\n        const data = this.wad0File.getEntryData(name)\n        const imgData = AlphaBitmapDecoder.parse(data)\n        callback(imgData)\n    }\n\n    loadWadTexture(name: string, callback: (obj: ImageData) => any) {\n        const data = this.wad0File.getEntryData(name)\n        const alphaIndexMatch = getFilename(name).match(/^a(\\d+).+/i)\n        const alphaIndex = alphaIndexMatch ? parseInt(alphaIndexMatch[1]) : null\n        const imgData = AlphaBitmapDecoder.parse(data, alphaIndex)\n        if (name.toLowerCase().startsWith('miscanims/crystal')) { // XXX fix crystal lwo loading\n            callback(WadLoader.grayscaleToGreen(imgData))\n        } else {\n            callback(imgData)\n        }\n    }\n\n    private static grayscaleToGreen(imgData: ImageData): ImageData {\n        const arr = imgData.data\n        for (let c = 0; c < arr.length; c += 4) {\n            arr[c] = 0\n            arr[c + 2] = 0\n        }\n        return imgData\n    }\n\n    loadAlphaImageAsset(name: string, callback: (obj: ImageData) => any) {\n        const data = this.wad0File.getEntryData(name)\n        const imgData = AlphaBitmapDecoder.parse(data)\n        for (let n = 0; n < imgData.data.length; n += 4) {\n            if (imgData.data[n] <= 2 && imgData.data[n + 1] <= 2 && imgData.data[n + 2] <= 2) { // Interface/Reward/RSoxygen.bmp uses 2/2/2 as \"black\" alpha background\n                imgData.data[n + 3] = 0\n            }\n        }\n        callback(imgData)\n    }\n\n    loadFontImageAsset(name: string, callback: (obj: ImageData) => any) {\n        const data = this.wad0File.getEntryData(name)\n        const imgData = AlphaBitmapDecoder.parse(data)\n        callback(imgData)\n    }\n\n    loadNerpAsset(name: string, callback: (obj: string) => any) {\n        name = name.replace(/.npl$/, '.nrn')\n        const script = this.wad0File.getEntryText(name)\n        callback(script)\n    }\n\n    loadNerpMsg(name: string, callback: (obj: any) => any) {\n        const result = this.parseNerpMsgFile(this.wad0File, name)\n        const msg1 = this.parseNerpMsgFile(this.wad1File, name)\n        for (let c = 0; c < msg1.length; c++) {\n            const m1 = msg1[c]\n            if (!m1) continue\n            if (m1.txt) {\n                result[c].txt = m1.txt\n            }\n            if (m1.snd) {\n                result[c].snd = m1.snd\n            }\n        }\n        callback(result)\n    }\n\n    parseNerpMsgFile(wadFile: WadFile, name: string) {\n        const result = []\n        const lines = wadFile.getEntryText(name).split(/[\\r\\n]/).map((l) => l?.trim()).filter((l) => !!l)\n        for (let c = 0; c < lines.length; c++) {\n            const line = lines[c]\n            if (line === '-') {\n                continue\n            }\n            // line formatting differs between wad0 and wad1 files!\n            const txt0Match = line.match(/\\\\\\[([^\\\\]+)\\\\](\\s*#([^#]+)#)?/)\n            const txt1Match = line.match(/^([^$][^#]+)(\\s*#([^#]+)#)?/)\n            const sndMatch = line.match(/\\$([^\\s]+)\\s*([^\\s]+)/)\n            if (wadFile === this.wad0File && txt0Match) {\n                const index = txt0Match[3] !== undefined ? this.numericNameToNumber(txt0Match[3]) : c // THIS IS MADNESS! #number# at the end of line is OPTIONAL\n                result[index] = result[index] || {}\n                result[index].txt = txt0Match[1]\n            } else if (wadFile === this.wad1File && txt1Match) {\n                const index = txt1Match[3] !== undefined ? this.numericNameToNumber(txt1Match[3]) : c // THIS IS MADNESS! #number# at the end of line is OPTIONAL\n                result[index] = result[index] || {}\n                result[index].txt = txt1Match[1].replace(/_/g, ' ').trim()\n            } else if (sndMatch && sndMatch.length === 3) {\n                const index = this.numericNameToNumber(sndMatch[1])\n                result[index] = result[index] || {}\n                result[index].snd = sndMatch[2].replace(/\\\\/g, '/')\n            } else {\n                throw 'Line in nerps message file did not match anything'\n            }\n        }\n        return result\n    }\n\n    numericNameToNumber(name: string) {\n        if (name === undefined) {\n            throw 'Numeric name must not be undefined'\n        }\n        const digits = {one: 1, two: 2, three: 3, four: 4, five: 5, six: 6, seven: 7, eight: 8, nine: 9}\n        const specials = {\n            ten: 10, eleven: 11, twelve: 12, thirteen: 13, fourteen: 14, fifteen: 15,\n            sixteen: 16, seventeen: 17, eighteen: 18, nineteen: 19,\n        }\n        const tens = {twenty: 20, thirty: 30, forty: 40}\n        let number = specials[name] || digits[name]\n        if (number === undefined) {\n            Object.keys(tens).forEach(ten => {\n                if (name.startsWith(ten)) {\n                    const digitName = name.replace(ten, '')\n                    number = tens[ten] + (digitName ? digits[digitName] : 0)\n                }\n            })\n        }\n        if (number === undefined) {\n            throw 'Found unexpected numeric name ' + name\n        }\n        return number\n    }\n\n    loadObjectiveTexts(name: string, callback: (obj: any) => any) {\n        const txtContent = this.wad1File.getEntryData(name)\n        const result = new ObjectiveTextParser().parseObjectiveTextFile(txtContent)\n        callback(result)\n    }\n\n    loadMapAsset(name: string, callback: (obj: any) => any) {\n        const buffer = this.wad0File.getEntryData(name)\n        if (buffer.length < 13 || String.fromCharCode.apply(String, buffer.slice(0, 3)) !== 'MAP') {\n            console.log('Invalid map data provided')\n            return\n        }\n        const map = {width: buffer[8], height: buffer[12], level: []}\n        let row = []\n        for (let seek = 16; seek < buffer.length; seek += 2) {\n            row.push(buffer[seek])\n            if (row.length >= map.width) {\n                map.level.push(row)\n                row = []\n            }\n        }\n        callback(map)\n    }\n\n    loadObjectListAsset(name: string, callback: (obj: any) => any) {\n        const lines = this.wad0File.getEntryText(name).split('\\n')\n        const objectList = []\n        let currentObject = null\n        for (let c = 0; c < lines.length; c++) {\n            const line = lines[c].trim()\n            const objectStartMatch = line.match(/(.+)\\s+{/)\n            const drivingMatch = line.match(/driving\\s+(.+)/)\n            if (line.length < 1 || line.startsWith(';') || line.startsWith('Lego*')) {\n                // ignore empty lines, comments and the root object\n            } else if (objectStartMatch) {\n                currentObject = {}\n                objectList[objectStartMatch[1]] = currentObject\n            } else if (line === '}') {\n                currentObject = null\n            } else if (drivingMatch) {\n                currentObject.driving = drivingMatch[1]\n            } else {\n                const split = line.split(/\\s+/)\n                if (split.length !== 2 || currentObject === null) {\n                    throw 'Unexpected key value entry: ' + line\n                }\n                const key = split[0]\n                let val: any = split[1]\n                if (key === 'xPos' || key === 'yPos' || key === 'heading') {\n                    val = parseFloat(val)\n                } else if (key !== 'type') {\n                    throw 'Unexpected key value entry: ' + line\n                }\n                currentObject[key] = val\n            }\n        }\n        callback(objectList)\n    }\n\n    /**\n     * Load a WAV file format sound asset from the WAD file.\n     * @param path Path inside the WAD file\n     * @param callback A callback that is triggered after the file has been loaded\n     * @param key Optional key to store the sound, should look like SND_pilotdrill\n     */\n    loadWavAsset(path, callback, key) {\n        console.error('wav asset loading not yet implemented') // TODO implement this\n        // const snd = document.createElement('audio');\n        // if (callback != null) {\n        //     snd.oncanplay = function () {\n        //         snd.oncanplay = null; // otherwise the callback is triggered multiple times\n        //         const keyPath = key || path;\n        //         // use array, because sounds have multiple variants sometimes\n        //         ResourceManager.sounds[keyPath] = ResourceManager.sounds[keyPath] || [];\n        //         ResourceManager.sounds[keyPath].push(snd);\n        //         callback();\n        //     };\n        // }\n        // // try (localized) wad1 file first, then use generic wad0 file\n        // try {\n        //     snd.src = this.wad1File.getEntryUrl(path);\n        // } catch (e) {\n        //     snd.src = this.wad0File.getEntryUrl(path);\n        // }\n    }\n\n    loadLWOFile(lwoFilepath: string, callback: (obj: any) => any) {\n        let lwoContent\n        try {\n            lwoContent = this.wad0File.getEntryBuffer(lwoFilepath)\n        } catch (e) {\n            try {\n                lwoContent = this.wad0File.getEntryBuffer('world/shared/' + getFilename(lwoFilepath))\n            } catch (e) {\n                console.error('Could not load LWO file ' + lwoFilepath + '; Error: ' + e)\n                return\n            }\n        }\n        callback(lwoContent.buffer)\n    }\n\n    registerAllAssets(mainConf: any) { // dynamically register all assets from config\n        // add fonts and cursors\n        this.addAssetFolder(this.loadFontImageAsset, 'Interface/Fonts/')\n        this.addAssetFolder(this.loadAlphaImageAsset, 'Interface/Pointers/')\n        // add menu assets\n        this.addMenuWithAssets(mainConf, 'MainMenuFull', false)\n        this.addMenuWithAssets(mainConf, 'PausedMenu')\n        this.addMenuWithAssets(mainConf, 'OptionsMenu')\n        this.addAsset(this.loadAlphaImageAsset, 'Interface/BriefingPanel/BriefingPanel.bmp')\n        this.addAsset(this.loadObjectiveTexts, 'Languages/ObjectiveText.txt')\n        // add in-game assets\n        this.addAlphaImageFolder('Interface/TopPanel/') // top panel\n        this.addAlphaImageFolder('Interface/RightPanel/') // crystal side bar\n        this.addAlphaImageFolder('Interface/RadarPanel/')\n        this.addAlphaImageFolder('Interface/MessagePanel/')\n        this.addAsset(this.loadWadImageAsset, 'Interface/Airmeter/msgpanel_air_juice.bmp')\n        this.addAlphaImageFolder('Interface/InfoPanel/')\n        this.addAlphaImageFolder('Interface/PriorityPanel/')\n        this.addAlphaImageFolder('Interface/Priorities')\n        this.addAlphaImageFolder('Interface/CameraControl/')\n        this.addAlphaImageFolder('Interface/MessageTabs/')\n        this.addAlphaImageFolder('Interface/IconPanel/')\n        this.addAlphaImageFolder('Interface/Icons/')\n        this.addAlphaImageFolder('Interface/Menus/')\n        this.addAlphaImageFolder('Interface/Buttons/')\n        this.addAlphaImageFolder('Interface/InfoImages/')\n        this.addAssetFolder(this.loadAlphaImageAsset, 'Interface/FrontEnd/Vol_')\n        this.addAssetFolder(this.loadWadImageAsset, 'Interface/FrontEnd/lp_')\n        this.addAsset(this.loadAlphaImageAsset, 'Interface/FrontEnd/LowerPanel.bmp')\n        // level files\n        this.addAsset(this.loadNerpAsset, 'Levels/nerpnrn.h')\n        const levelsCfg = new LevelsCfg(iGet(mainConf, 'Levels'))\n        this.onAssetLoaded(0, 'Levels', levelsCfg)\n        Object.values(levelsCfg.levelsByName).forEach((level: LevelEntryCfg) => {\n            level.menuBMP.forEach((bmpName) => {\n                this.addAsset(this.loadAlphaImageAsset, bmpName)\n            })\n            this.addAsset(this.loadMapAsset, level.surfaceMap)\n            this.addAsset(this.loadMapAsset, level.predugMap)\n            this.addAsset(this.loadMapAsset, level.terrainMap)\n            this.addAsset(this.loadMapAsset, level.blockPointersMap, true)\n            this.addAsset(this.loadMapAsset, level.cryOreMap)\n            this.addAsset(this.loadMapAsset, level.pathMap, true)\n            if (level.fallinMap) this.addAsset(this.loadMapAsset, level.fallinMap)\n            if (level.erodeMap) this.addAsset(this.loadMapAsset, level.erodeMap)\n            this.addAsset(this.loadObjectListAsset, level.oListFile)\n            this.addAsset(this.loadNerpAsset, level.nerpFile)\n            this.addAsset(this.loadNerpMsg, level.nerpMessageFile)\n        })\n        // load all shared textures\n        this.addTextureFolder('World/Shared/')\n        // load all building types\n        const buildingTypes = mainConf['BuildingTypes']\n        Object.values(buildingTypes).forEach((bType: string) => {\n            const bName = bType.split('/')[1]\n            const aeFile = bType + '/' + bName + '.ae'\n            this.addAnimatedEntity(aeFile)\n        })\n        this.addAnimatedEntity('mini-figures/pilot/pilot.ae')\n        // load monsters\n        this.addAnimatedEntity('Creatures/SpiderSB/SpiderSB.ae')\n        this.addAnimatedEntity('Creatures/bat/bat.ae')\n        // load misc objects\n        this.addAnimatedEntity(iGet(mainConf, 'MiscObjects', 'Dynamite') + '/Dynamite.ae')\n        this.addAnimatedEntity(iGet(mainConf, 'MiscObjects', 'Barrier') + '/Barrier.ae')\n        this.addAsset(this.loadLWOFile, 'World/Shared/Crystal.lwo') // highpoly version, but unused?\n        this.addAsset(this.loadLWOFile, iGet(mainConf, 'MiscObjects', 'Crystal') + '.lwo')\n        this.addTextureFolder('MiscAnims/Crystal/')\n        this.addAsset(this.loadLWOFile, iGet(mainConf, 'MiscObjects', 'Ore') + '.lwo')\n        this.addAsset(this.loadWadTexture, 'MiscAnims/Ore/Ore.bmp')\n        this.addAsset(this.loadLWOFile, 'World/Shared/Brick.lwo')\n        this.addAsset(this.loadLWOFile, iGet(mainConf, 'MiscObjects', 'ProcessedOre') + '.lwo')\n        this.addAsset(this.loadLWOFile, iGet(mainConf, 'MiscObjects', 'ElectricFence') + '.lwo')\n        this.addTextureFolder('Buildings/E-Fence/')\n        this.addAnimatedEntity(iGet(mainConf, 'MiscObjects', 'Barrier') + '/Barrier.ae')\n        this.addAnimatedEntity('MiscAnims/Dynamite/Dynamite.ae')\n        this.addLWSFile('MiscAnims/RockFall/Rock3Sides.lws')\n        this.addTextureFolder('MiscAnims/RockFall/')\n        // spaces\n        this.addTextureFolder('World/WorldTextures/IceSplit/Ice')\n        this.addTextureFolder('World/WorldTextures/LavaSplit/Lava')\n        this.addTextureFolder('World/WorldTextures/RockSplit/Rock')\n        // reward screen\n        const rewardCfg = new RewardCfg(iGet(mainConf, 'Reward'))\n        this.onAssetLoaded(0, 'Reward', rewardCfg)\n        this.addAsset(this.loadWadImageAsset, rewardCfg.wallpaper)\n        this.addAsset(this.loadFontImageAsset, rewardCfg.backFont)\n        Object.values(rewardCfg.fonts).forEach(imgPath => this.addAsset(this.loadFontImageAsset, imgPath))\n        rewardCfg.images.forEach(img => this.addAsset(this.loadAlphaImageAsset, img.filePath))\n        rewardCfg.boxImages.forEach(img => this.addAsset(this.loadWadImageAsset, img.filePath))\n        rewardCfg.saveButton.splice(0, 4).forEach(img => this.addAsset(this.loadWadImageAsset, img))\n        rewardCfg.advanceButton.splice(0, 4).forEach(img => this.addAsset(this.loadWadImageAsset, img))\n        // // sounds\n        // const samplesConf = mainConf['Samples'];\n        // Object.keys(samplesConf).forEach(sndKey => {\n        //     let sndPath = samplesConf[sndKey] + '.wav';\n        //     if (sndKey.startsWith('!')) { // TODO no clue what this means... loop? duplicate?!\n        //         sndKey = sndKey.slice(1);\n        //     }\n        //     if (sndPath.startsWith('*')) { // TODO no clue what this means... don't loop, see telportup\n        //         sndPath = sndPath.slice(1);\n        //     } else if (sndPath.startsWith('@')) {\n        //         // sndPath = sndPath.slice(1);\n        //         // console.warn('Sound ' + sndPath + ' must be loaded from program files folder. Not yet implemented!');\n        //         return;\n        //     }\n        //     sndPath.split(',').forEach(sndPath => {\n        //         this.addAsset(this.loadWavAsset, sndPath, false, sndKey);\n        //     });\n        // });\n    }\n\n    addAnimatedEntity(aeFile: string) {\n        const content = this.wad0File.getEntryText(aeFile)\n        const cfgRoot = iGet(RonFile.parse(content), 'Lego*')\n        this.onAssetLoaded(0, aeFile, cfgRoot)\n        const path = getPath(aeFile);\n        ['HighPoly', 'MediumPoly', 'LowPoly'].forEach((polyType) => { // TODO add 'FPPoly' (contains two cameras)\n            const cfgPoly = iGet(cfgRoot, polyType)\n            if (cfgPoly) {\n                Object.keys(cfgPoly).forEach((key) => {\n                    this.addAsset(this.loadLWOFile, path + cfgPoly[key] + '.lwo')\n                })\n            }\n        })\n        const activities = iGet(cfgRoot, 'Activities')\n        if (activities) {\n            Object.keys(activities).forEach((activity) => {\n                try {\n                    let keyname = iGet(activities, activity)\n                    const act = iGet(cfgRoot, keyname)\n                    const file = iGet(act, 'FILE')\n                    const isLws = iGet(act, 'LWSFILE') === true\n                    if (isLws) {\n                        this.addLWSFile(path + file + '.lws')\n                    } else {\n                        console.error('Found activity which is not an LWS file')\n                    }\n                } catch (e) {\n                    console.error(e)\n                    console.log(cfgRoot)\n                    console.log(activities)\n                    console.log(activity)\n                }\n            })\n        }\n        // load all textures for this type\n        this.addTextureFolder(getPath(aeFile))\n    }\n\n    addLWSFile(lwsFilepath: string) {\n        const content = this.wad0File.getEntryText(lwsFilepath)\n        this.onAssetLoaded(0, lwsFilepath, content)\n        const lwoFiles: string[] = this.extractLwoFiles(getPath(lwsFilepath), content)\n        lwoFiles.forEach((lwoFile) => this.addAsset(this.loadLWOFile, lwoFile))\n    }\n\n    extractLwoFiles(path: string, content: string): string[] {\n        const lines: string[] = content.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n') // normalize newlines\n            .replace(/\\t/g, ' ') // tabs to spaces\n            .split('\\n')\n            .map((l) => l.trim())\n\n        if (lines[0] !== 'LWSC') {\n            throw 'Invalid start of file! Expected \\'LWSC\\' in first line'\n        }\n\n        return lines.filter((line) => line.toLowerCase().startsWith('LoadObject '.toLowerCase()))\n            .map((objLine) => path + getFilename(objLine.substring('LoadObject '.length)).toLowerCase())\n    }\n\n    addAlphaImageFolder(folderPath: string) {\n        this.addAssetFolder(this.loadAlphaImageAsset, folderPath)\n    }\n\n    addTextureFolder(folderPath: string) {\n        this.addAssetFolder(this.loadWadTexture, folderPath)\n    }\n\n    addAssetFolder(callback: (name: string, callback: (obj: any) => any) => void, folderPath) {\n        this.wad0File.filterEntryNames(folderPath + '.+\\\\.bmp').forEach((assetPath) => {\n            this.addAsset(callback, assetPath)\n        })\n    }\n\n    addMenuWithAssets(mainConf, name: string, menuImageAlpha: boolean = true) {\n        const menuCfg = new MenuCfg(iGet(mainConf, 'Menu', name))\n        this.onAssetLoaded(0, name, menuCfg)\n        menuCfg.menus.forEach((menuCfg) => {\n            const method = menuImageAlpha ? this.loadAlphaImageAsset : this.loadWadImageAsset\n            const menuImage = Array.isArray(menuCfg.menuImage) ? menuCfg.menuImage[0] : menuCfg.menuImage\n            this.addAsset(method, menuImage)\n            this.addAsset(this.loadFontImageAsset, menuCfg.menuFont)\n            this.addAsset(this.loadFontImageAsset, menuCfg.loFont)\n            this.addAsset(this.loadFontImageAsset, menuCfg.hiFont)\n        })\n    }\n\n    addAsset(method: (name: string, callback: (obj: any) => any) => void, assetPath, optional = false) {\n        if (!assetPath || this.assetsFromCfgByName.hasOwnProperty(assetPath) || assetPath === 'NULL') {\n            return // do not load assets twice\n        }\n        this.assetsFromCfgByName.set(assetPath, {method: method.bind(this), assetPath: assetPath, optional: optional})\n    }\n\n    loadAssetsParallel() {\n        const promises = []\n        const that = this\n        this.assetsFromCfgByName.forEach((asset) => {\n            promises.push(new Promise<void>((resolve) => {\n                try {\n                    asset.method(asset.assetPath, (assetObj) => {\n                        this.assetIndex++\n                        that.onAssetLoaded(this.assetIndex, asset.assetPath, assetObj)\n                        resolve()\n                    })\n                } catch (e) {\n                    if (!asset.optional) throw e\n                    this.assetIndex++\n                    that.onAssetLoaded(this.assetIndex, asset.assetPath, null)\n                    resolve()\n                }\n            }))\n        })\n        Promise.all(promises).then(() => {\n            // indicate that loading has finished, and display the total loading time\n            const loadingTimeSeconds = ((new Date().getTime() - this.startTime.getTime()) / 1000).toFixed(3).toString()\n            this.onLoadDone(this.totalResources, loadingTimeSeconds)\n        })\n    }\n\n    startWithCachedFiles(onCacheMiss: () => any) {\n        this.startTime = new Date()\n        const _onerror = () => {\n            this.onMessage('WAD files not found in cache')\n            onCacheMiss()\n        }\n        this.onMessage('Loading WAD files from cache...')\n        const that = this\n        this.openLocalCache((objectStore) => {\n            const request1 = objectStore.get('wad0')\n            request1.onerror = _onerror\n            request1.onsuccess = function () {\n                if (request1.result === undefined) {\n                    _onerror()\n                    return\n                }\n                // console.log('First WAD file loaded from cache after ' + ((new Date().getTime() - that.startTime.getTime()) / 1000));\n                that.wad0File = new WadFile()\n                for (let prop in request1.result) { // class info are runtime info and not stored in cache => use copy constructor\n                    if (request1.result.hasOwnProperty(prop)) {\n                        that.wad0File[prop] = request1.result[prop]\n                    }\n                }\n                const request2 = objectStore.get('wad1')\n                request2.onerror = _onerror\n                request2.onsuccess = function () {\n                    if (request2.result === undefined) {\n                        _onerror()\n                        return\n                    }\n                    that.wad1File = new WadFile()\n                    for (let prop in request2.result) { // class info are runtime info and not stored in cache => use copy constructor\n                        if (request2.result.hasOwnProperty(prop)) {\n                            that.wad1File[prop] = request2.result[prop]\n                        }\n                    }\n                    console.log('WAD files loaded from cache after ' + ((new Date().getTime() - that.startTime.getTime()) / 1000))\n                    that.startLoadingProcess()\n                }\n            }\n        })\n    }\n\n    /**\n     * Private helper method, which combines file loading and waits for them to become ready before continuing\n     * @param wad0Url Url to parse the LegoRR0.wad file from\n     * @param wad1Url Url to parse the LegoRR1.wad file from\n     */\n    loadWadFiles(wad0Url: string, wad1Url: string) {\n        const that = this\n        Promise.all([this.loadWadFile(wad0Url), this.loadWadFile(wad1Url)]).then(wadFiles => {\n            that.wad0File = wadFiles[0] as WadFile\n            that.wad1File = wadFiles[1] as WadFile\n            this.openLocalCache((objectStore) => {\n                objectStore.put(that.wad0File, 'wad0')\n                objectStore.put(that.wad1File, 'wad1')\n            })\n            this.startLoadingProcess()\n        })\n    }\n\n    /**\n     * Read WAD file as binary blob from the given URL and parse it on success\n     * @param url the url to the WAD file, can be local file url (file://...) too\n     */\n    loadWadFile(url: string) {\n        return new Promise(resolve => {\n            console.log('Loading WAD file from ' + url)\n            fetch(url).then((response) => {\n                if (response.ok) {\n                    response.arrayBuffer().then((buffer) => {\n                        const wadFile = new WadFile()\n                        wadFile.parseWadFile(buffer)\n                        resolve(wadFile)\n                    })\n                }\n            }).catch((e) => console.error(e))\n        })\n    }\n\n    openLocalCache(onopen: (IDBObjectStore) => void) {\n        const request: IDBOpenDBRequest = indexedDB.open('RockRaidersWeb')\n        request.onupgradeneeded = function () {\n            const db = request.result\n            if (db.objectStoreNames.contains('wadfiles')) {\n                db.deleteObjectStore('wadfiles')\n            }\n            db.createObjectStore('wadfiles')\n        }\n        request.onsuccess = function () {\n            const db = request.result\n            const transaction = db.transaction(['wadfiles'], 'readwrite')\n            const objectStore = transaction.objectStore('wadfiles')\n            onopen(objectStore)\n        }\n    }\n\n    /**\n     * Load essential files, to begin the chain of asset loading\n     */\n    startLoadingProcess() {\n        this.startTime = new Date()\n        this.assetsFromCfgByName = new Map()\n        this.onMessage('Loading configuration...')\n        const cfg = CfgFileParser.parse(this.wad1File.getEntryData('Lego.cfg'))\n        this.registerAllAssets(cfg)\n        this.onMessage('Loading initial assets...')\n        Promise.all([\n            new Promise<void>((resolve) => {\n                const name = iGet(cfg, 'Main', 'LoadScreen') // loading screen image\n                this.loadWadImageAsset(name, (imgData) => {\n                    this.onAssetLoaded(0, name, imgData)\n                    resolve()\n                })\n            }),\n            new Promise<void>((resolve) => {\n                const name = iGet(cfg, 'Main', 'ProgressBar') // loading bar container image\n                this.loadWadImageAsset(name, (imgData) => {\n                    this.onAssetLoaded(0, name, imgData)\n                    resolve()\n                })\n            }),\n            new Promise<void>((resolve) => {\n                const name = iGet(cfg, 'Pointers', 'Pointer_Standard')\n                this.loadAlphaImageAsset(name, (imgData) => {\n                    this.onAssetLoaded(0, name, imgData)\n                    resolve()\n                })\n            }),\n            new Promise<void>((resolve) => {\n                const name = 'Interface/Fonts/Font5_Hi.bmp'\n                this.loadFontImageAsset(name, (imgData) => {\n                    this.onAssetLoaded(0, name, imgData)\n                    resolve()\n                })\n            }),\n        ]).then(() => {\n            this.onMessage('Start loading assets...')\n            this.totalResources = this.assetsFromCfgByName.size\n            this.onInitialLoad(this.totalResources, cfg)\n            this.assetIndex = 0\n            this.loadAssetsParallel()\n        })\n    }\n\n}\n","export enum WorkerMessageType {\n\n    MSG,\n    CFG,\n    CACHE_MISS,\n    SFX,\n    ASSET,\n    DONE,\n\n}\n","import { BaseConfig } from './BaseConfig'\n\nexport class BuildingEntityStats extends BaseConfig {\n\n    Levels: number = 0\n    SelfPowered: boolean = false\n    PowerBuilding: boolean = false\n    PickSphere: number = 0\n    TrainDynamite: boolean[] = null\n    CostOre: number = 0\n    CostCrystal: number = 0\n    OxygenCoef: number = 0\n\n}\n","import { BaseConfig } from './BaseConfig'\n\nexport class MovableEntityStats extends BaseConfig {\n\n    RouteSpeed: number[] = []\n    RubbleCoef: number = 1\n    PathCoef: number = 1\n\n}\n","// noinspection JSUnusedGlobalSymbols\n\nimport { BaseConfig } from './BaseConfig'\nimport { BuildingEntityStats } from './BuildingEntityStats'\nimport { MovableEntityStats } from './MovableEntityStats'\n\nexport class GameStatsCfg extends BaseConfig {\n\n    Pilot = new class PilotStats extends BaseConfig {\n        Levels: number = 4\n        RouteSpeed: number[] = [1.10, 1.10, 1.10, 1.10]\n        SoilDrillTime: number[] = [4.0, 4.0, 4.0, 4.0] // Time in seconds to drill through the rock.\n        LooseDrillTime: number[] = [4.0, 4.0, 4.0, 4.0]\n        MedDrillTime: number[] = [8.0, 8.0, 8.0, 8.0]\n        HardDrillTime: number[] = [0.0, 0.0, 0.0, 0.0] // Zero means the object cannot drill the rock type\n        SeamDrillTime: number[] = [10.0, 10.0, 10.0, 10.0] // Either or both ore or crystal.\n        UpgradeTime: number[] = [30.0, 45.0, 60.0, 60.0] // Last entry is ignored as it can never upgrade from that.\n        CollRadius: number = 5.0\n        CollHeight: number = 12.0\n        TrackDist: number = 40.0\n        SingleWidthDig: boolean[] = [true, true, true, true]\n        PickSphere: number = 10.0\n        RepairValue: number[] = [10.0, 15.0, 20.0, 25.0]\n        SurveyRadius: number[] = [3, 3, 3, 3]\n        Drillsound: string = 'SND_pilotdrill'\n        Drillfadesound: string = 'SND_pilotdrillfade'\n        RestPercent: number = 60.0\n        EnergyDecayRate: number = 0.25\n        CanClearRubble: boolean = true\n        NumOfToolsCanCarry: number[] = [2, 3, 4, 5]\n        CrossLand: boolean = true\n        RubbleCoef: number = 0.5\n        PathCoef: number = 2.0\n        RouteAvoidance: boolean = true\n        UseLegoManTeleporter: boolean = true\n        AwarenessRange: number = 10.0\n        OxygenCoef: number = -1.0\n        CanStrafe: boolean = true\n        EnterToolStore: boolean = true\n        ShowHealthBar: boolean = true\n    }\n\n    RockMonster = new class RockMonsterStats extends BaseConfig {\n        Levels: number = 1\n        RouteSpeed: number = 0.8\n        TrackDist: number = 50.0\n        CollRadius: number = 10.0\n        CollHeight: number = 22.0\n        AlertRadius: number = 60.0\n        HealthDecayRate: number = 0.6 // Reduce health by 'n' every second.\n        PickSphere: number = 22.0\n        RepairValue: number = -10.0\n        CanScare: boolean = true\n        RestPercent: number = 20.0\n        CarryMinHealth: number = 15.0\n        PainThreshold: number = 20.0\n        StampRadius: number = 80.0\n        AttackRadius: number = 160.0\n        CanSteal: boolean = true\n        CrossLand: boolean = true\n        RubbleCoef: number = 1.5\n        GrabMinifigure: boolean = true\n        RouteAvoidance: boolean = true\n        BumpDamage: boolean = true\n        AttackPaths: boolean = true\n        SplitOnZeroHealth: boolean = true\n        CanBeHitByFence: boolean = true\n        Capacity: number = 6 // How many crystals it can eat\n        PathCoef: number = 0.5\n        // Statistics about the weapons\n        CanBeShotAt: boolean = true // Can this monster be shot at by lego men\n        CanFreeze: boolean = true // Can this object be frozen\n        FreezerTime: number = 25.0 // Time this object is frozen for\n        FreezerDamage: number = 5.0 // Damage that freezing causes\n        CanLaser: boolean = true // Can this object be lasered\n        LaserDamage: number = 110.0 // Damage sustained by a laser\n        CanPush: boolean = true // Can this object be pusher'ed\n        PusherDist: number = 20.0 // Distance the object is pushed 40=1 block\n        PusherDamage: number = 2.0 // Damage that the pusher gun causes\n        WakeRadius: number = 25.0\n        ScaredByBigBangs: boolean = true\n        RemoveReinforcement: boolean = true\n        ShowHealthBar: boolean = true\n    }\n\n    SmallSpider = new class SmallSpiderStats extends MovableEntityStats {\n        Levels: number = 1\n        RouteSpeed: number[] = [2.0]\n        TrackDist: number = 10.0\n        CollRadius: number = 0.0\n        CollHeight: number = 0.0\n        PickSphere: number = 6.0\n        AlertRadius: number = 40.0\n        RandomMove: boolean = true\n        RandomEnterWall: boolean = true\n        CauseSlip: boolean = true\n        CrossLand: boolean = true\n        RubbleCoef: number = 0.2\n        DontShowDamage: boolean = true\n        DontShowOnRadar: boolean = true\n        ScaredByBigBangs: boolean = true\n    }\n\n    Bat = new class BatStats extends MovableEntityStats {\n        Levels: number = 1\n        RouteSpeed: number[] = [1.0]\n        TrackDist: number = 10.0\n        CollRadius: number = 10.0\n        AlertRadius: number = 10.0 // Alert radius (causes attack mode)\n        RandomMove: boolean = true // Random movement\n        randomMoveTime: number = 10\n        CanScare: boolean = true // Scare away the player\n        ScaredByBigBangs: boolean = true\n        // Flock parameters.\n        Flocks: boolean = true // Set this to create a flock for this object.\n        FlocksDebug: boolean = false // If this is set the actual lego objects animation is displayed at the \"lego\" position.\n        FlocksSmooth: boolean = true // Smooths out the orientation of the flocks elements.\n        FlocksSize: number = 8 // Number of the given item in the flock.  (Default 5)\n        FlocksTurn: number = 0.6 // Turning speed of the bat. (0.6 default)\n        FlocksSpeed: number = 1.5 // Velocity of the flock. (2.0 default)\n        FlocksTightness: number = 0.8 // Tightness of the flock. (2.0 default)\n        FlocksGoalUpdate: number = 2.0 // How often the flocks goal is updated (25 per second).  (2.0 default)\n        FlocksRandomness: number = 6.0 // Randomness of goals. (2.0 default)\n        FlocksHeight: number = 22.0 // Height above the ground of the flock elements.  (30.0 default)\n        CrossLand: boolean = true\n        CrossWater: boolean = true\n        CrossLava: boolean = true\n        DontShowDamage: boolean = true\n    }\n\n    TinyRM = new class TinyRMStats extends BaseConfig {\n        Levels: number = 1\n        RouteSpeed: number = 1.2\n        TrackDist: number = 10.0\n        CollRadius: number = 0.0\n        CollHeight: number = 5.0\n        PickSphere: number = 6.0\n        AlertRadius: number = 40.0\n        CrossLand: boolean = true\n        RubbleCoef: number = 1.5\n        DontShowDamage: boolean = true\n        DontShowOnRadar: boolean = true\n        ScaredByPlayer: boolean = true\n        ScaredByBigBangs: boolean = true\n    }\n\n    TinyIM = new class TinyIMStats extends BaseConfig {\n        Levels: number = 1\n        RouteSpeed: number = 1.2\n        TrackDist: number = 10.0\n        CollRadius: number = 0.0\n        CollHeight: number = 5.0\n        PickSphere: number = 6.0\n        AlertRadius: number = 40.0\n        CrossLand: boolean = true\n        RubbleCoef: number = 1.5\n        DontShowDamage: boolean = true\n        DontShowOnRadar: boolean = true\n        ScaredByPlayer: boolean = true\n        ScaredByBigBangs: boolean = true\n    }\n\n    Slug = new class SlugStats extends BaseConfig {\n        Levels: number = 1\n        RouteSpeed: number = 0.3\n        TrackDist: number = 10.0\n        CollRadius: number = 3.0\n        CollHeight: number = 7.0\n        PickSphere: number = 12.0\n        AlertRadius: number = 40.0\n        CrossLand: boolean = true\n        RubbleCoef: number = 0.3\n        UseHoles: boolean = true\n        DrainPower: boolean = true\n        AttackRadius: number = 280.0\n        PainThreshold: number = 50.0\n        CanBeShotAt: boolean = true\n        CanLaser: boolean = true\n        LaserDamage: number = 5.0\n        CanPush: boolean = true // Can this object be pusher'ed\n        PusherDist: number = 60.0 // Distance the object is pushed\n        PusherDamage: number = 5.0 // Damage that the pusher gun causes\n        ShowHealthBar: boolean = true\n        ScaredByBigBangs: boolean = true\n    }\n\n    LavaMonster = new class LavaMonsterStats extends BaseConfig {\n        Levels: number = 1\n        RouteSpeed: number = 0.8\n        TrackDist: number = 50.0\n        CollRadius: number = 10.0\n        CollHeight: number = 22.0\n        AlertRadius: number = 60.0\n        HealthDecayRate: number = 0.6 // Reduce health by 'n' every second.\n        PickSphere: number = 22.0\n        RepairValue: number = -10.0\n        CanScare: boolean = true\n        RestPercent: number = 20.0\n        CarryMinHealth: number = 15.0\n        PainThreshold: number = 20.0\n        StampRadius: number = 80.0\n        AttackRadius: number = 160.0\n        CanSteal: boolean = true\n        CrossLand: boolean = true\n        RubbleCoef: number = 1.5\n        GrabMinifigure: boolean = true\n        Capacity: number = 7 // How many crystals it can eat\n        RouteAvoidance: boolean = true\n        BumpDamage: boolean = true\n        AttackPaths: boolean = true\n        SplitOnZeroHealth: boolean = true\n        CanBeHitByFence: boolean = true\n        PathCoef: number = 0.5\n        CrossLava: boolean = true\n        // Statistics about the weapons\n        CanBeShotAt: boolean = true // Can this monster be shot at by lego men\n        CanFreeze: boolean = true // Can this object be frozen\n        FreezerTime: number = 75.0 // Time this object is frozen for\n        FreezerDamage: number = 40.0 // Damage that freezing causes\n        CanLaser: boolean = true // Can this object be lasered\n        LaserDamage: number = 1.0 // Damage sustained by a laser\n        CanPush: boolean = true // Can this object be pusher'ed\n        PusherDist: number = 60.0 // Distance the object is pushed\n        PusherDamage: number = 5.0 // Damage that the pusher gun causes\n        WakeRadius: number = 25.0\n        ScaredByBigBangs: boolean = true\n        RemoveReinforcement: boolean = true\n        ShowHealthBar: boolean = true\n    }\n\n    IceMonster = new class IceMonsterStats extends BaseConfig {\n        Levels: number = 1\n        RouteSpeed: number = 0.8\n        TrackDist: number = 50.0\n        CollRadius: number = 10.0\n        CollHeight: number = 22.0\n        AlertRadius: number = 60.0\n        HealthDecayRate: number = 0.6 // Reduce health by 'n' every second.\n        PickSphere: number = 22.0\n        RepairValue: number = -10.0\n        CanScare: boolean = true\n        RestPercent: number = 20.0\n        CarryMinHealth: number = 15.0\n        PainThreshold: number = 20.0\n        StampRadius: number = 80.0\n        AttackRadius: number = 120.0\n        CanSteal: boolean = true\n        CrossLand: boolean = true\n        RubbleCoef: number = 1.5\n        GrabMinifigure: boolean = true\n        Capacity: number = 5 // How many crystals it can eat\n        RouteAvoidance: boolean = true\n        BumpDamage: boolean = true\n        AttackPaths: boolean = true\n        SplitOnZeroHealth: boolean = true\n        CanBeHitByFence: boolean = true\n        PathCoef: number = 0.5\n        // Statistics about the weapons\n        CanBeShotAt: boolean = true // Can this monster be shot at by lego men\n        CanFreeze: boolean = false // Can this object be frozen\n        FreezerTime: number = 0.0 // Time this object is frozen for\n        FreezerDamage: number = 0.0 // Damage that freezing causes\n        CanLaser: boolean = true // Can this object be lasered\n        LaserDamage: number = 110.0 // Damage sustained by a laser\n        CanPush: boolean = true // Can this object be pusher'ed\n        PusherDist: number = 60.0 // Distance the object is pushed\n        PusherDamage: number = 2.0 // Damage that the pusher gun causes\n        WakeRadius: number = 25.0\n        ScaredByBigBangs: boolean = true\n        RemoveReinforcement: boolean = true\n        ShowHealthBar: boolean = true\n    }\n\n    Hoverboard = new class HoverboardStats extends BaseConfig { // [Carry][Scan][Speed][Drill]    (No drill or carry)\n        Levels: number = 8\n        RouteSpeed: number[] = [3.0, 3.0, 5.0, 5.0, 3.0, 3.0, 5.0, 5.0]\n        SurveyRadius: number[] = [0, 0, 0, 0, 4, 4, 4, 4]\n        TrackDist: number = 50.0\n        CollRadius: number = 8.0\n        CollHeight: number = 12.0\n        PickSphere: number = 16.0\n        CanBeDriven: boolean = true\n        CrossLand: boolean = true\n        UseSmallTeleporter: boolean = true\n        CanStrafe: boolean = true\n        CostCrystal: number = 1\n        UpgradeCostOre: number[] = [0, 5, 10, 0]\n        UpgradeCostStuds: number[] = [0, 1, 2, 0]\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_SmallEngine'\n    }\n\n    SmallHeli = new class SmallHeliStats extends BaseConfig {\n        Levels: number = 1\n        RouteSpeed: number = 2.50\n        TrackDist: number = 50.0\n        CollRadius: number = 10.0\n        CollHeight: number = 12.0\n        PickSphere: number = 20.0\n        CanBeDriven: boolean = true\n        CrossLand: boolean = true\n        CrossWater: boolean = true\n        CrossLava: boolean = true\n        UseSmallTeleporter: boolean = true\n        CanStrafe: boolean = true\n        CostCrystal: number = 3\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_HeliEngine'\n    }\n\n    Smallmlp = new class SmallmlpStats extends BaseConfig {\n        Levels: number = 4\n        RouteSpeed: number[] = [0.50, 0.50, 0.50, 0.50]\n        TrackDist: number = 50.0\n        CollRadius: number = 12.0\n        CollHeight: number = 22.0\n        PickSphere: number = 26.0\n        CanBeDriven: boolean = true\n        CrossLand: boolean = true\n        UseSmallTeleporter: boolean = true\n        Tracker: boolean = true\n        CanDoubleSelect: boolean = true\n        CostCrystal: number = 3\n        UpgradeCostOre: number[] = [0, 0, 0, 10]\n        UpgradeCostStuds: number[] = [0, 0, 0, 2]\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_MediumEngine'\n    }\n\n    SmallCat = new class SmallCatStats extends BaseConfig {\n        Levels: number = 3\n        RouteSpeed: number[] = [2.0, 3.0, 4.0]\n        TrackDist: number = 50.0\n        CollRadius: number = 12.0\n        CollHeight: number = 12.0\n        PickSphere: number = 26.0\n        CrossWater: boolean = true\n        CanBeDriven: boolean = true\n        UseWaterTeleporter: boolean = true\n        CostCrystal: number = 2\n        MaxCarry: number[] = [1, 1, 1]\n        GetInAtLand: boolean = true\n        GetOutAtLand: boolean = true\n        TakeCarryingDrivers: boolean = true\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_Catamaran'\n    }\n\n    SmallDigger = new class SmallDiggerStats extends BaseConfig {\n        Levels: number = 8\n        RouteSpeed: number[] = [2.0, 2.0, 4.0, 4.0, 2.0, 2.0, 4.0, 4.0]\n        SoilDrillTime: number[] = [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]\n        LooseDrillTime: number[] = [2.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0, 1.0]\n        MedDrillTime: number[] = [4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0]\n        HardDrillTime: number[] = [180.0, 150.0, 180.0, 150.0, 180.0, 150.0, 180.0, 150.0]\n        SeamDrillTime: number[] = [8.0, 4.0, 8.0, 4.0, 8.0, 4.0, 8.0, 4.0]\n        MaxCarry: number[] = [0, 0, 0, 0, 0, 0, 0, 0]\n        SurveyRadius: number[] = [0, 0, 0, 0, 4, 4, 4, 4]\n        TrackDist: number = 50.0\n        CollRadius: number = 10.0\n        CollHeight: number = 12.0\n        PickSphere: number = 20.0\n        CanBeDriven: boolean = true\n        CrossLand: boolean = true\n        RouteAvoidance: boolean = true\n        UseSmallTeleporter: boolean = true\n        VehicleCanBeCarried: boolean = true\n        CostCrystal: number = 1\n        UpgradeCostOre: number[] = [0, 5, 10, 10]\n        UpgradeCostStuds: number[] = [0, 1, 2, 2]\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_SmallEngine'\n    }\n\n    SmallTruck = new class SmallTruckStats extends BaseConfig { // [Carry][Scan][Speed][Drill]    (No drill)\n        Levels: number = 16\n        RouteSpeed: number[] = [2.0, 2.0, 3.0, 3.0, 2.0, 2.0, 3.0, 3.0, 2.0, 2.0, 3.0, 3.0, 2.0, 2.0, 3.0, 3.0]\n        MaxCarry: number[] = [3, 3, 3, 3, 3, 3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6]\n        CarryStart: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3]\n        SurveyRadius: number[] = [0, 0, 0, 0, 4, 4, 4, 4, 0, 0, 0, 0, 4, 4, 4, 4]\n        TrackDist: number = 50.0\n        CollRadius: number = 10.0\n        CollHeight: number = 12.0\n        PickSphere: number = 20.0\n        CanBeDriven: boolean = true\n        CrossLand: boolean = true\n        UseSmallTeleporter: boolean = true\n        VehicleCanBeCarried: boolean = true\n        CostCrystal: number = 2\n        EnterToolStore: boolean = true\n        UpgradeCostOre: number[] = [5, 5, 10, 0]\n        UpgradeCostStuds: number[] = [1, 1, 2, 0]\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_SmallEngine'\n    }\n\n    Bulldozer = new class BulldozerStats extends BaseConfig { // [Carry][Scan][Speed][Drill]    (No drill)\n        Levels: number = 16\n        RouteSpeed: number[] = [0.5, 0.5, 0.8, 0.8, 0.5, 0.5, 0.8, 0.8, 0.5, 0.5, 0.8, 0.8, 0.5, 0.5, 0.8, 0.8]\n        MaxCarry: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]\n        SurveyRadius: number[] = [0, 0, 0, 0, 5, 5, 5, 5, 0, 0, 0, 0, 5, 5, 5, 5]\n        TrackDist: number = 80.0\n        CollRadius: number = 18.0\n        CollHeight: number = 26.0\n        PickSphere: number = 40.0\n        CrossLand: boolean = true\n        CanClearRubble: boolean = true\n        UseBigTeleporter: boolean = true\n        CanBeDriven: boolean = true\n        CostCrystal: number = 4\n        InvisibleDriver: boolean = true\n        UpgradeCostOre: number[] = [5, 5, 20, 0]\n        UpgradeCostStuds: number[] = [1, 1, 4, 0]\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_MediumEngine'\n    }\n\n    WalkerDigger = new class WalkerDiggerStats extends BaseConfig { // [Carry][Scan][Speed][Drill]    (No carry)\n        Levels: number = 8\n        RouteSpeed: number[] = [0.50, 0.50, 0.80, 0.80, 0.50, 0.50, 0.80, 0.80]\n        SoilDrillTime: number[] = [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]\n        LooseDrillTime: number[] = [0.80, 0.40, 0.80, 0.40, 0.80, 0.40, 0.80, 0.40]\n        MedDrillTime: number[] = [2.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0, 1.0]\n        HardDrillTime: number[] = [180.0, 150.0, 180.0, 150.0, 180.0, 150.0, 180.0, 150.0]\n        SeamDrillTime: number[] = [4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0]\n        SurveyRadius: number[] = [0, 0, 0, 0, 5, 5, 5, 5]\n        TrackDist: number = 80.0\n        CollRadius: number = 15.0\n        CollHeight: number = 33.0\n        PickSphere: number = 35.0\n        CrossLand: boolean = true\n        UseBigTeleporter: boolean = true\n        CostCrystal: number = 3\n        CanBeDriven: boolean = true\n        InvisibleDriver: boolean = true\n        CanStrafe: boolean = true\n        DrillSound: string = 'DrillSFX_Grinder'\n        DrillFadeSound: string = 'DrillSFX_GrinderFade'\n        UpgradeCostOre: number[] = [0, 5, 20, 20]\n        UpgradeCostStuds: number[] = [0, 1, 4, 4]\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_MediumEngine'\n    }\n\n    LargeDigger = new class LargeDiggerStats extends BaseConfig { // [Carry][Scan][Speed][Drill]    (No carry or scan)\n        Levels: number = 4\n        RouteSpeed: number[] = [0.30, 0.30, 0.60, 0.60]\n        SoilDrillTime: number[] = [1.0, 1.0, 1.0, 1.0]\n        LooseDrillTime: number[] = [0.40, 0.20, 0.40, 0.20]\n        MedDrillTime: number[] = [0.80, 0.40, 0.80, 0.40]\n        HardDrillTime: number[] = [1.0, 0.50, 1.0, 0.50]\n        SeamDrillTime: number[] = [1.0, 0.50, 1.0, 0.50]\n        TrackDist: number = 80.0\n        CollRadius: number = 22.0\n        CollHeight: number = 30.0\n        PickSphere: number = 50.0\n        CrossLand: boolean = true\n        UseBigTeleporter: boolean = true\n        Tracker: boolean = true\n        CanDoubleSelect: boolean = true\n        CanBeDriven: boolean = true\n        CostCrystal: number = 5\n        InvisibleDriver: boolean = true\n        DrillSound: string = 'DrillSFX_Grinder'\n        DrillFadeSound: string = 'DrillSFX_GrinderFade'\n        UpgradeCostOre: number[] = [0, 0, 15, 20]\n        UpgradeCostStuds: number[] = [0, 0, 3, 4]\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_LargeEngine'\n    }\n\n    LargeCat = new class LargeCatStats extends BaseConfig { // [Carry][Scan][Speed][Drill] (No carry) (Drill???)\n        Levels: number = 1\n        RouteSpeed: number = 1.50\n        SurveyRadius: number = 0\n        TrackDist: number = 80.0\n        CollRadius: number = 22.0\n        CollHeight: number = 25.0\n        PickSphere: number = 50.0\n        CanBeDriven: boolean = true\n        CrossWater: boolean = true\n        UseWaterTeleporter: boolean = true\n        ClassAsLarge: boolean = true\n        CarryVehicles: boolean = true\n        CostCrystal: number = 4\n        EngineSound: string = 'SND_Catamaran'\n        ShowHealthBar: boolean = true\n    }\n\n    LargeHeli = new class LargeHeliStats extends BaseConfig {\n        Levels: number = 3\n        RouteSpeed: number[] = [0.30, 0.40, 0.50]\n        TrackDist: number = 80.0\n        CollRadius: number = 0.0\n        CollHeight: number = 0.0\n        PickSphere: number = 20.0\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_HeliEngine'\n    }\n\n    LargeMLP = new class LargeMLPStats extends BaseConfig { // [Carry][Scan][Speed][Drill]    (No carry or speed) (Doesn't have drills, just lasers)\n        Levels: number = 8\n        RouteSpeed: number[] = [0.40, 0.40, 0.40, 0.40, 0.40, 0.40, 0.40, 0.40]\n        SurveyRadius: number[] = [0, 0, 0, 0, 5, 5, 5, 5]\n        TrackDist: number = 80.0\n        CollRadius: number = 20.0\n        CollHeight: number = 24.0\n        PickSphere: number = 47.0\n        CrossLand: boolean = true\n        UseBigTeleporter: boolean = true\n        Tracker: boolean = true\n        CanDoubleSelect: boolean = true\n        CostCrystal: number = 4\n        CanBeDriven: boolean = true\n        InvisibleDriver: boolean = true\n        UpgradeCostOre: number[] = [0, 5, 0, 25]\n        UpgradeCostStuds: number[] = [0, 1, 0, 5]\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_LargeEngine'\n    }\n\n    Barracks = new class BarracksStats extends BuildingEntityStats {\n        Levels: number = 3\n        TrackDist: number = 50.0\n        CollHeight: number = 23.0\n        CollRadius: number = 15.0\n        PickSphere: number = 30.0\n        CostOre: number = 15\n        CostRefinedOre: number = 3\n        CostCrystal: number = 3\n        SnaxULike: boolean = true\n        TrainDriver: boolean[] = [true, true, true]\n        CrystalDrain: number[] = [1, 1, 1]\n        DamageCausesCallToArms: boolean = true\n        OxygenCoef: number = 10.0\n        EngineSound: string = 'SND_BuildingHum'\n        ShowHealthBar: boolean = true\n    }\n\n    Powerstation = new class PowerstationStats extends BuildingEntityStats {\n        Levels: number = 2\n        TrackDist: number = 80.0\n        ProcessCrystal: boolean = true\n        CollHeight: number = 31.0\n        CollRadius: number = 15.0\n        PickSphere: number = 32.0\n        CostOre: number = 12\n        CostRefinedOre: number = 3\n        CostCrystal: number = 2\n        PowerBuilding: boolean = true\n        DamageCausesCallToArms: boolean = true\n        EngineSound: string = 'SND_PowerBuildingHum'\n        ShowHealthBar: boolean = true\n    }\n\n    OreRefinery = new class OreRefineryStats extends BuildingEntityStats {\n        Levels: number = 4\n        TrackDist: number = 60.0\n        ProcessOre: boolean = true\n        CollHeight: number = 16.0\n        CollRadius: number = 15.0\n        PickSphere: number = 30.0\n        CostOre: number = 20\n        CostRefinedOre: number = 4\n        CostCrystal: number = 3\n        CrystalDrain: number[] = [1, 1, 1, 1]\n        DamageCausesCallToArms: boolean = true\n        MaxCarry: number[] = [5, 4, 3, 2]\n        EngineSound: string = 'SND_BuildingHum'\n        ShowHealthBar: boolean = true\n    }\n\n    TeleportPad = new class TeleportPadStats extends BuildingEntityStats {\n        Levels: number = 3\n        TrackDist: number = 60.0\n        SmallTeleporter: boolean = true\n        ManTeleporter: boolean = true\n        CollHeight: number = 20.0\n        CollRadius: number = 15.0\n        PickSphere: number = 30.0\n        CostOre: number = 8\n        CostRefinedOre: number = 2\n        CrystalDrain: number[] = [1, 1, 1]\n        DamageCausesCallToArms: boolean = true\n        TrainPilot: boolean[] = [true, true, true]\n        EngineSound: string = 'SND_BuildingHum'\n        ShowHealthBar: boolean = true\n    }\n\n    TeleportBIG = new class TeleportBIGStats extends BuildingEntityStats {\n        Levels: number = 2\n        TrackDist: number = 50.0\n        BigTeleporter: boolean = true\n        CollHeight: number = 17.0\n        CollRadius: number = 15.0\n        PickSphere: number = 30.0\n        CostOre: number = 20\n        CostRefinedOre: number = 4\n        CostCrystal: number = 2\n        CrystalDrain: number[] = [1, 1]\n        DamageCausesCallToArms: boolean = true\n        EngineSound: string = 'SND_BuildingHum'\n        ShowHealthBar: boolean = true\n    }\n\n    Docks = new class DocksStats extends BuildingEntityStats {\n        Levels: number = 1\n        TrackDist: number = 60.0\n        CollHeight: number = 20.0\n        CollRadius: number = 15.0\n        PickSphere: number = 30.0\n        CostOre: number = 8\n        CostRefinedOre: number = 2\n        CostCrystal: number = 1\n        WaterEntrances: number = 1\n        WaterTeleporter: boolean = true\n        CrystalDrain: number = 1\n        DamageCausesCallToArms: boolean = true\n        TrainSailor: boolean = true\n        EngineSound: string = 'SND_BuildingHum'\n        ShowHealthBar: boolean = true\n    }\n\n    Toolstation = new class ToolstationStats extends BuildingEntityStats {\n        Levels: number = 3\n        TrackDist: number = 50.0\n        ManTeleporter: boolean = true\n        CollHeight: number = 16.0\n        CollRadius: number = 15.0\n        PickSphere: number = 30.0\n        ToolStore: boolean = true\n        StoreObjects: boolean = true\n        SelfPowered: boolean = true\n        DamageCausesCallToArms: boolean = true\n        TrainDynamite: boolean[] = [false, false, true]\n        FunctionCoef: number[] = [1.0, 1.0, 1.0] // Function here is how long it takes to upgrade a minfigure\n        ShowHealthBar: boolean = true\n    }\n\n    GunStation = new class GunStationStats extends BuildingEntityStats {\n        Levels: number = 2\n        TrackDist: number = 60.0\n        CollHeight: number = 33.0\n        CollRadius: number = 15.0\n        PickSphere: number = 30.0\n        CostOre: number = 15\n        CostRefinedOre: number = 3\n        CostCrystal: number = 1\n        Tracker: boolean = true\n        CanDoubleSelect: boolean = true\n        CrystalDrain: number[] = [1, 1]\n        DamageCausesCallToArms: boolean = true\n        FunctionCoef: number[] = [1.0, 0.5] // How much of a crystal it drains every time it fires...\n        EngineSound: string = 'SND_BuildingHum'\n        ShowHealthBar: boolean = true\n    }\n\n    Geodome = new class GeodomeStats extends BuildingEntityStats {\n        Levels: number = 3\n        TrackDist: number = 50.0\n        CollHeight: number = 20.0\n        CollRadius: number = 15.0\n        PickSphere: number = 30.0\n        CostOre: number = 15\n        CostRefinedOre: number = 3\n        CostCrystal: number = 3\n        SurveyRadius: number[] = [6, 8, 12]\n        CrystalDrain: number[] = [1, 1, 1]\n        DamageCausesCallToArms: boolean = true\n        TrainScanner: boolean[] = [true, true, true]\n        EngineSound: string = 'SND_BuildingHum'\n        ShowHealthBar: boolean = true\n    }\n\n    Upgrade = new class UpgradeStats extends BuildingEntityStats {\n        Levels: number = 2\n        TrackDist: number = 80.0\n        CollHeight: number = 40.0\n        CollRadius: number = 15.0\n        PickSphere: number = 32.0\n        CostOre: number = 20\n        CostRefinedOre: number = 4\n        CostCrystal: number = 3\n        UpgradeBuilding: boolean = true\n        CrystalDrain: number[] = [1, 1]\n        DamageCausesCallToArms: boolean = true\n        FunctionCoef: number[] = [0.8, 1.6] // Function is speed of upgrade animation.\n        TrainRepair: boolean[] = [true, true]\n        EngineSound: string = 'SND_BuildingHum'\n        ShowHealthBar: boolean = true\n    }\n\n    PowerCrystal = new class PowerCrystalStats extends BaseConfig {\n        Levels: number = 1\n        TrackDist: number = 20.0\n        CollHeight: number = 2.0\n        PickSphere: number = 6.0\n    }\n\n    ProcessedOre = new class ProcessedOreStats extends BaseConfig {\n        Levels: number = 1\n        TrackDist: number = 20.0\n        CollHeight: number = 2.0\n        PickSphere: number = 8.0\n    }\n\n    Ore = new class OreStats extends BaseConfig {\n        Levels: number = 1\n        TrackDist: number = 20.0\n        CollHeight: number = 2.0\n        PickSphere: number = 6.0\n    }\n\n    Boulder = new class BoulderStats extends BaseConfig {\n        Levels: number = 1\n        CollRadius: number = 2.0\n    }\n\n    Pusher = new class PusherStats extends BaseConfig {\n        Levels: number = 1\n        CollRadius: number = 1.0\n    }\n\n    Freezer = new class FreezerStats extends BaseConfig {\n        Levels: number = 1\n        CollRadius: number = 1.0\n    }\n\n    LaserShot = new class LaserShotStats extends BaseConfig {\n        Levels: number = 1\n        ColRadius: number = 1.0\n    }\n\n    ElectricFence = new class ElectricFenceStats extends BaseConfig {\n        Levels: number = 1\n        TrackDist: number = 50.0\n        CollRadius: number = 5.0\n        CollHeight: number = 18.0\n        PickSphere: number = 20.0\n        DamageCausesCallToArms: boolean = true\n    }\n\n    Path = new class PathStats extends BaseConfig {\n        Levels: number = 1\n        CostOre: number = 2\n        CostRefinedOre: number = 1\n    }\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n    assignValue(objKey, lCfgKeyName, cfgValue): boolean {\n        if (objKey.toLowerCase() === lCfgKeyName) {\n            BaseConfig.setFromCfg(this[objKey], cfgValue)\n            return true\n        }\n    }\n\n}\n\n","import { GameStatsCfg } from '../../cfg/GameStatsCfg'\nimport { WorkerMessageType } from './WorkerMessageType'\n\nexport class WadWorkerMessage {\n\n    type: WorkerMessageType = null\n    text?: string\n    cfg?: any\n    stats?: any\n    totalResources?: number\n    assetName?: string\n    assetObj?: any\n    loadingTimeSeconds?: string\n\n    constructor(type: WorkerMessageType) {\n        this.type = type\n    }\n\n    static createTextMessage(msg: string): WadWorkerMessage {\n        return {type: WorkerMessageType.MSG, text: msg}\n    }\n\n    static createCfgLoaded(cfg: any, totalResources: number): WadWorkerMessage {\n        return {\n            type: WorkerMessageType.CFG,\n            cfg: cfg,\n            stats: new GameStatsCfg(cfg['Stats']),\n            totalResources: totalResources,\n        }\n    }\n\n    static createAssetLoaded(assetIndex: number, assetName: string, assetObj: any): WadWorkerMessage {\n        return {type: WorkerMessageType.ASSET, assetName: assetName, assetObj: assetObj}\n    }\n\n    static createLoadDone(totalResources: number, loadingTimeSeconds: string): WadWorkerMessage {\n        return {type: WorkerMessageType.DONE, totalResources: totalResources, loadingTimeSeconds: loadingTimeSeconds}\n    }\n\n}\n","import { InitLoadingMessage } from './InitLoadingMessage'\nimport { WadLoader } from './WadLoader'\nimport { WadWorkerMessage } from './WadWorkerMessage'\nimport { WorkerMessageType } from './WorkerMessageType'\n\nconst worker: Worker = self as any\n\nfunction postMessage(assetMessage: WadWorkerMessage) {\n    worker.postMessage(assetMessage)\n}\n\nworker.addEventListener('message', (event) => {\n    const wadLoader = new WadLoader()\n    // set callbacks on wadLoader\n    wadLoader.onMessage = (text: string) => postMessage(WadWorkerMessage.createTextMessage(text))\n    wadLoader.onInitialLoad = (totalResources: number, cfg: any) => postMessage(WadWorkerMessage.createCfgLoaded(cfg, totalResources))\n    wadLoader.onAssetLoaded = (assetIndex: number, assetName: string, assetObj: any) => {\n        postMessage(WadWorkerMessage.createAssetLoaded(assetIndex, assetName, assetObj))\n    }\n    wadLoader.onLoadDone = (totalResources: number, loadingTimeSeconds: string) => {\n        postMessage(WadWorkerMessage.createLoadDone(totalResources, loadingTimeSeconds))\n    }\n    // start loading\n    const msg = event.data as InitLoadingMessage\n    if (msg) {\n        wadLoader.loadWadFiles(msg.wad0FileUrl, msg.wad1FileUrl)\n    } else {\n        wadLoader.startWithCachedFiles(() => postMessage(new WadWorkerMessage(WorkerMessageType.CACHE_MISS)))\n    }\n})\n"],"sourceRoot":""}