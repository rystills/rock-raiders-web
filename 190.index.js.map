{"version":3,"sources":["webpack://rock-raiders-web/./src/game/model/job/PriorityIdentifier.ts","webpack://rock-raiders-web/./src/resource/wadworker/AlphaBitmapDecoder.ts","webpack://rock-raiders-web/./src/core/Util.ts","webpack://rock-raiders-web/./src/cfg/BaseConfig.ts","webpack://rock-raiders-web/./src/cfg/ConfigColor.ts","webpack://rock-raiders-web/./src/cfg/ObjectiveImageCfg.ts","webpack://rock-raiders-web/./src/cfg/LevelsCfg.ts","webpack://rock-raiders-web/./src/cfg/MenuCycleItemCfg.ts","webpack://rock-raiders-web/./src/cfg/MenuLabelItemCfg.ts","webpack://rock-raiders-web/./src/cfg/MenuSliderItemCfg.ts","webpack://rock-raiders-web/./src/cfg/MenuEntryCfg.ts","webpack://rock-raiders-web/./src/cfg/MenuCfg.ts","webpack://rock-raiders-web/./src/cfg/RewardCfg.ts","webpack://rock-raiders-web/./src/resource/wadworker/EncodingHelper.ts","webpack://rock-raiders-web/./src/resource/wadworker/CfgFileParser.ts","webpack://rock-raiders-web/./src/resource/wadworker/ObjectiveTextParser.ts","webpack://rock-raiders-web/./src/resource/wadworker/WorkerMessageType.ts","webpack://rock-raiders-web/./src/resource/wadworker/RonFile.ts","webpack://rock-raiders-web/./src/resource/wadworker/WadFile.ts","webpack://rock-raiders-web/./src/resource/wadworker/WadUtil.ts","webpack://rock-raiders-web/./src/resource/wadworker/WadLoader.ts","webpack://rock-raiders-web/./src/params.ts","webpack://rock-raiders-web/./src/cfg/BuildingEntityStats.ts","webpack://rock-raiders-web/./src/cfg/MovableEntityStats.ts","webpack://rock-raiders-web/./src/cfg/GameStatsCfg.ts","webpack://rock-raiders-web/./src/resource/wadworker/WadWorkerMessage.ts","webpack://rock-raiders-web/./src/resource/wadworker/WadWorker.ts"],"names":["PriorityIdentifier","HeaderTypes","Array","prototype","remove","element","index","this","indexOf","splice","last","length","undefined","count","callback","counter","forEach","e","partition","filter","left","right","a","push","Map","getOrUpdate","key","updateCallback","value","get","set","BaseConfig","config","cfgObj","Object","keys","cfgKey","lCfgKeyName","startsWith","substring","toLowerCase","replace","some","objKey","assignValue","console","warn","constructor","name","cfgValue","currentValue","currentIsArray","isArray","parsedValue","parseValue","parsedIsArray","ConfigColor","values","r","g","b","ObjectiveImageCfg","filename","x","y","LevelsCfg","levelsByName","levelKey","LevelEntryCfg","super","fullName","endGameAvi1","endGameAvi2","allowRename","recallOLObjects","generateSpiders","video","disableEndTeleport","disableStartTeleport","emergeTimeOut","boulderAnimation","noMultiSelect","noAutoEat","disableToolTipSound","blockSize","digDepth","roughLevel","roofHeight","useRoof","selBoxHeight","fpRotLightRGB","fogColourRGB","highFogColourRGB","fogRate","fallinMultiplier","numberOfLandSlidesTillCaveIn","noFallins","oxygenRate","surfaceMap","predugMap","terrainMap","emergeMap","erodeMap","fallinMap","blockPointersMap","cryOreMap","pathMap","noGather","textureSet","rockFallStyle","emergeCreature","safeCaverns","seeThroughWalls","oListFile","ptlFile","nerpFile","nerpMessageFile","objectiveText","objectiveImage640x480","erodeTriggerTime","erodeErodeTime","erodeLockTime","nextLevel","levelLinks","frontEndX","frontEndY","frontEndOpen","priorities","reward","menuBMP","setFromCfg","endsWith","map","LevelPrioritiesEntryConfig","LevelRewardConfig","enabled","obj","keyname","iGet","enable","modifier","importance","quota","LevelRewardImportanceConfig","LevelRewardQuotaConfig","crystals","timer","caverns","constructions","oxygen","figures","MenuCycleItemCfg","actionName","width","height","description","two","labelOff","labelOn","MenuLabelItemCfg","label","target","flag","join","imgNormal","imgHover","imgPressed","tooltip","log","MenuSliderItemCfg","min","max","imgOff","imgOn","imgLeft","imgRight","btnRightNormal","btnLeftNormal","btnRightHover","btnLeftHover","MenuEntryCfg","title","position","menuFont","loFont","hiFont","itemCount","menuImage","autoCenter","displayTitle","overlays","playRandom","itemsLabel","itemsSlider","itemsCycle","anchored","canScroll","match","lActionName","MenuCfg","menuCount","menus","RewardCfg","display","wallpaper","images","texts","boxImages","fonts","flics","scrollSpeed","centreText","vertSpacing","backFont","font","titleFont","saveButton","advanceButton","completeText","failedText","quitText","textPos","imgConf","RewardImageCfg","RewardTextCfg","RewardFontsCfg","filePath","text","ore","diggable","rockMonsters","score","BmpDecoder","buffer","toRGBA","bufferView","DataView","byteOffset","byteLength","bottomUp","String","fromCharCode","pos","Error","locRed","locGreen","locBlue","locAlpha","parseHeader","parseRGBA","fileSize","readUInt32LE","reserved1","getUint16","reserved2","offset","headerSize","planes","bitPP","compression","rawSize","hr","vr","colors","importantColors","maskAlpha","maskRed","maskGreen","maskBlue","BITMAP_INFO_HEADER","BITMAP_V2_INFO_HEADER","BITMAP_V3_INFO_HEADER","BITMAP_V4_HEADER","BITMAP_V5_HEADER","len","palette","i","blue","green","red","quad","coloShift","maskRedR","maskGreenR","maskBlueR","maskAlphaR","shiftedMaskRedL","shiftedMaskGreenL","shiftedMaskBlueL","shiftedMaskAlphaL","shiftRed","shiftGreen","shiftBlue","shiftAlpha","maskColor","data","Uint8Array","bit1","bit4","bit8","bit16","bit24","bit32","xLen","Math","ceil","mode","padding","lastLine","scanImage","line","location","rgb","fill","lowNibble","lines","c","setPixelData","first4","last4","loc","px","processPixel","call","getUint32","rgbIndex","AlphaBitmapDecoder","alphaIndex","decoder","Uint8ClampedArray","alphaColor","ImageData","encodeChar","CfgFileParser","result","ancestry","activeObject","isComment","keyVal","seek","charCode","charStr","pop","parsed","hasOwnProperty","stack","val","sub","levelConf","splitShrink","sep","split","num","Number","isNaN","lVal","toString","includes","ObjectiveTextParser","txtFileContent","state","PARSING_STATE","DROP","currentLevel","code","char","LevelObjectiveTextEntry","KEY","lLine","OBJECTIVE","FAILURE","COMPLETION","CRYSTAL_FAILURE","charCodeAt","objective","failure","completion","crystalFailure","WorkerMessageType","RonFile","content","l","indDoubleSlash","indComment","trim","v","root","parseObj","start","lv","WadFile","entryIndexByName","fLength","fStart","debug","dataView","Int8Array","apply","slice","numberOfEntries","getInt32","bufferStart","entryName","getEntryBuffer","getEntryData","regexStr","regex","RegExp","entry","getPath","url","strUrl","lastInd","lastIndexOf","WadLoader","wad0File","wad1File","assetIndex","totalResources","assetsFromCfgByName","onMessage","msg","onInitialLoad","onAssetLoaded","onLoadDone","loadingTimeSeconds","parse","alphaIndexMatch","parseInt","imgData","grayscaleToGreen","arr","n","getEntryText","parseNerpMsgFile","msg1","m1","txt","snd","wadFile","txt0Match","txt1Match","sndMatch","numericNameToNumber","digits","one","three","four","five","six","seven","eight","nine","tens","twenty","thirty","forty","number","ten","eleven","twelve","thirteen","fourteen","fifteen","sixteen","seventeen","eighteen","nineteen","eightteen","digitName","txtContent","parseObjectiveTextFile","level","row","objectList","currentObject","objectStartMatch","drivingMatch","driving","parseFloat","path","error","lwoFilepath","lwoContent","mainConf","addAssetFolder","loadFontImageAsset","loadAlphaImageAsset","addMenuWithAssets","addAsset","loadObjectiveTexts","addAlphaImageFolder","loadWadImageAsset","loadNerpAsset","levelsCfg","bmpName","loadMapAsset","loadObjectListAsset","loadNerpMsg","addTextureFolder","buildingTypes","bType","bName","aeFile","addAnimatedEntity","loadLWOFile","loadWadTexture","addLWSFile","rewardCfg","imgPath","img","cfgRoot","polyType","cfgPoly","activities","activity","act","file","lwsFilepath","extractLwoFiles","lwoFile","objLine","folderPath","filterEntryNames","assetPath","menuImageAlpha","menuCfg","method","optional","bind","promises","that","asset","Promise","resolve","assetObj","all","then","Date","getTime","startTime","toFixed","onCacheMiss","_onerror","openLocalCache","objectStore","request1","onerror","onsuccess","prop","request2","startLoadingProcess","wad0Url","wad1Url","loadWadFile","wadFiles","put","fetch","response","ok","arrayBuffer","parseWadFile","catch","onopen","request","indexedDB","open","onupgradeneeded","db","objectStoreNames","contains","deleteObjectStore","createObjectStore","transaction","cfg","registerAllAssets","size","loadAssetsParallel","BuildingEntityStats","Levels","SelfPowered","PowerBuilding","PickSphere","TrainDynamite","CostOre","CostCrystal","OxygenCoef","MovableEntityStats","RouteSpeed","RubbleCoef","PathCoef","GameStatsCfg","Pilot","SoilDrillTime","LooseDrillTime","MedDrillTime","HardDrillTime","SeamDrillTime","UpgradeTime","CollRadius","CollHeight","TrackDist","SingleWidthDig","RepairValue","SurveyRadius","Drillsound","Drillfadesound","RestPercent","EnergyDecayRate","CanClearRubble","NumOfToolsCanCarry","CrossLand","RouteAvoidance","UseLegoManTeleporter","AwarenessRange","CanStrafe","EnterToolStore","ShowHealthBar","RockMonster","AlertRadius","HealthDecayRate","CanScare","CarryMinHealth","PainThreshold","StampRadius","AttackRadius","CanSteal","GrabMinifigure","BumpDamage","AttackPaths","SplitOnZeroHealth","CanBeHitByFence","Capacity","CanBeShotAt","CanFreeze","FreezerTime","FreezerDamage","CanLaser","LaserDamage","CanPush","PusherDist","PusherDamage","WakeRadius","ScaredByBigBangs","RemoveReinforcement","SmallSpider","RandomMove","RandomEnterWall","CauseSlip","DontShowDamage","DontShowOnRadar","Bat","randomMoveTime","Flocks","FlocksDebug","FlocksSmooth","FlocksSize","FlocksTurn","FlocksSpeed","FlocksTightness","FlocksGoalUpdate","FlocksRandomness","FlocksHeight","CrossWater","CrossLava","TinyRM","ScaredByPlayer","TinyIM","Slug","UseHoles","DrainPower","LavaMonster","IceMonster","Hoverboard","CanBeDriven","UseSmallTeleporter","UpgradeCostOre","UpgradeCostStuds","EngineSound","SmallHeli","Smallmlp","Tracker","CanDoubleSelect","SmallCat","UseWaterTeleporter","MaxCarry","GetInAtLand","GetOutAtLand","TakeCarryingDrivers","SmallDigger","VehicleCanBeCarried","SmallTruck","CarryStart","Bulldozer","UseBigTeleporter","InvisibleDriver","WalkerDigger","DrillSound","DrillFadeSound","LargeDigger","LargeCat","ClassAsLarge","CarryVehicles","LargeHeli","LargeMLP","Barracks","CostRefinedOre","SnaxULike","TrainDriver","CrystalDrain","DamageCausesCallToArms","Powerstation","ProcessCrystal","OreRefinery","ProcessOre","TeleportPad","SmallTeleporter","ManTeleporter","TrainPilot","TeleportBIG","BigTeleporter","Docks","WaterEntrances","WaterTeleporter","TrainSailor","Toolstation","ToolStore","StoreObjects","FunctionCoef","GunStation","Geodome","TrainScanner","Upgrade","UpgradeBuilding","TrainRepair","PowerCrystal","ProcessedOre","Ore","Boulder","Pusher","Freezer","LaserShot","ColRadius","ElectricFence","Path","WadWorkerMessage","type","MSG","CFG","stats","assetName","ASSET","DONE","worker","self","postMessage","assetMessage","addEventListener","event","wadLoader","createTextMessage","createCfgLoaded","createAssetLoaded","createLoadDone","loadWadFiles","wad0FileUrl","wad1FileUrl","startWithCachedFiles","CACHE_MISS"],"mappings":"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","file":"190.index.js","sourcesContent":["export enum PriorityIdentifier {\n\n    aiPriorityTrain,\n    aiPriorityGetIn,\n    aiPriorityCrystal,\n    aiPriorityOre,\n    aiPriorityRepair,\n    aiPriorityClearing,\n    aiPriorityDestruction,\n    aiPriorityConstruction,\n    aiPriorityReinforce,\n    aiPriorityRecharge,\n\n}\n","/**\n * Source: https://github.com/wokwi/bmp-ts\n */\n\nenum HeaderTypes {\n    BITMAP_INFO_HEADER = 40,\n    BITMAP_V2_INFO_HEADER = 52,\n    BITMAP_V3_INFO_HEADER = 56,\n    BITMAP_V4_HEADER = 108,\n    BITMAP_V5_HEADER = 124\n}\n\n// We have these:\n//\n// const sample = 0101 0101 0101 0101\n// const mask   = 0111 1100 0000 0000\n// 256        === 0000 0001 0000 0000\n//\n// We want to take the sample and turn it into an 8-bit value.\n//\n// 1. We extract the last bit of the mask:\n//\n// 0000 0100 0000 0000\n//       ^\n//\n// Like so:\n//\n// const a = ~mask =    1000 0011 1111 1111\n// const b = a + 1 =    1000 0100 0000 0000\n// const c = b & mask = 0000 0100 0000 0000\n//\n// 2. We shift it to the right and extract the bit before the first:\n//\n// 0000 0000 0010 0000\n//             ^\n//\n// Like so:\n//\n// const d = mask / c = 0000 0000 0001 1111\n// const e = mask + 1 = 0000 0000 0010 0000\n//\n// 3. We apply the mask and the two values above to a sample:\n//\n// const f = sample & mask = 0101 0100 0000 0000\n// const g = f / c =         0000 0000 0001 0101\n// const h = 256 / e =       0000 0000 0000 0100\n// const i = g * h =         0000 0000 1010 1000\n//                                     ^^^^ ^\n//\n// Voila, we have extracted a sample and \"stretched\" it to 8 bits. For samples\n// which are already 8-bit, h === 1 and g === i.\n\nfunction maskColor(\n    maskRed: number,\n    maskGreen: number,\n    maskBlue: number,\n    maskAlpha: number,\n) {\n    const maskRedR = (~maskRed + 1) & maskRed\n    const maskGreenR = (~maskGreen + 1) & maskGreen\n    const maskBlueR = (~maskBlue + 1) & maskBlue\n    const maskAlphaR = (~maskAlpha + 1) & maskAlpha\n\n    const shiftedMaskRedL = maskRed / maskRedR + 1\n    const shiftedMaskGreenL = maskGreen / maskGreenR + 1\n    const shiftedMaskBlueL = maskBlue / maskBlueR + 1\n    const shiftedMaskAlphaL = maskAlpha / maskAlphaR + 1\n\n    return {\n        shiftRed: (x: number) =>\n            (((x & maskRed) / maskRedR) * 0x100) / shiftedMaskRedL,\n        shiftGreen: (x: number) =>\n            (((x & maskGreen) / maskGreenR) * 0x100) / shiftedMaskGreenL,\n        shiftBlue: (x: number) =>\n            (((x & maskBlue) / maskBlueR) * 0x100) / shiftedMaskBlueL,\n        shiftAlpha:\n            maskAlpha !== 0\n                ? (x: number) =>\n                (((x & maskAlpha) / maskAlphaR) * 0x100) / shiftedMaskAlphaL\n                : () => 255,\n    }\n}\n\nconst enum Compression {\n    NONE = 0,\n    BI_RLE8 = 1,\n    BI_RLE4 = 2,\n    BI_BIT_FIELDS = 3,\n    BI_ALPHA_BIT_FIELDS = 6\n}\n\ntype BitsPerPixel = 1 | 4 | 8 | 16 | 24 | 32;\n\ninterface IColor {\n    red: number;\n    green: number;\n    blue: number;\n    quad: number;\n}\n\ninterface IDecoderOptions {\n    toRGBA?: boolean;\n}\n\ninterface IImage {\n    width: number;\n    height: number;\n    bitPP: BitsPerPixel;\n    data: Uint8Array;\n    reserved1?: number;\n    reserved2?: number;\n    hr?: number;\n    vr?: number;\n    colors?: number;\n    importantColors?: number;\n    palette?: IColor[];\n}\n\ninterface IBitmapImage extends IImage {\n    flag: string;\n    fileSize: number;\n    offset: number;\n    headerSize: number;\n    planes?: number;\n    compression?: Compression;\n    rawSize: number;\n}\n\ntype IColorProcessor = (x: number, line: number) => void;\n\nclass BmpDecoder implements IBitmapImage {\n    // Header\n    public flag: string\n    public fileSize!: number\n    public reserved1!: number\n    public reserved2!: number\n    public offset!: number\n    public headerSize!: number\n    public width!: number\n    public height!: number\n    public planes!: number\n    public bitPP!: BitsPerPixel\n    public compression?: Compression\n    public rawSize!: number\n    public hr!: number\n    public vr!: number\n    public colors!: number\n    public importantColors!: number\n    public palette!: IColor[]\n    public data!: Uint8Array\n\n    private maskRed!: number\n    private maskGreen!: number\n    private maskBlue!: number\n    private maskAlpha!: number\n\n    private readonly toRGBA: boolean\n\n    private pos: number\n    private bottomUp: boolean\n    private readonly buffer: Uint8Array\n    private readonly bufferView: DataView\n\n    private readonly locRed: number\n    private readonly locGreen: number\n    private readonly locBlue: number\n    private readonly locAlpha: number\n\n    private shiftRed!: (x: number) => number\n    private shiftGreen!: (x: number) => number\n    private shiftBlue!: (x: number) => number\n    private shiftAlpha!: (x: number) => number\n\n    constructor(\n        buffer: Uint8Array,\n        {toRGBA}: IDecoderOptions = {toRGBA: false},\n    ) {\n        this.buffer = buffer\n        this.bufferView = new DataView(\n            buffer.buffer,\n            buffer.byteOffset,\n            buffer.byteLength,\n        )\n        this.toRGBA = !!toRGBA\n        this.bottomUp = true\n        this.flag = String.fromCharCode(this.buffer[0]) + String.fromCharCode(this.buffer[1])\n        this.pos = 2\n\n        if (this.flag !== 'BM') {\n            throw new Error('Invalid BMP File')\n        }\n\n        this.locRed = this.toRGBA ? 0 : 3\n        this.locGreen = this.toRGBA ? 1 : 2\n        this.locBlue = this.toRGBA ? 2 : 1\n        this.locAlpha = this.toRGBA ? 3 : 0\n\n        this.parseHeader()\n        this.parseRGBA()\n    }\n\n    private parseHeader() {\n        this.fileSize = this.readUInt32LE()\n\n        this.reserved1 = this.bufferView.getUint16(this.pos, true)\n        this.pos += 2\n        this.reserved2 = this.bufferView.getUint16(this.pos, true)\n        this.pos += 2\n\n        this.offset = this.readUInt32LE()\n\n        // End of BITMAP_FILE_HEADER\n        this.headerSize = this.readUInt32LE()\n\n        if (!(this.headerSize in HeaderTypes)) {\n            throw new Error(`Unsupported BMP header size ${this.headerSize}`)\n        }\n\n        this.width = this.readUInt32LE()\n        this.height = this.readUInt32LE()\n\n        this.planes = this.bufferView.getUint16(this.pos, true)\n        this.pos += 2\n        this.bitPP = this.bufferView.getUint16(this.pos, true) as BitsPerPixel\n        this.pos += 2\n\n        this.compression = this.readUInt32LE()\n        this.rawSize = this.readUInt32LE()\n        this.hr = this.readUInt32LE()\n        this.vr = this.readUInt32LE()\n        this.colors = this.readUInt32LE()\n        this.importantColors = this.readUInt32LE()\n\n        // De facto defaults\n\n        if (this.bitPP === 32) {\n            this.maskAlpha = 0\n            this.maskRed = 0x00ff0000\n            this.maskGreen = 0x0000ff00\n            this.maskBlue = 0x000000ff\n        } else if (this.bitPP === 16) {\n            this.maskAlpha = 0\n            this.maskRed = 0x7c00\n            this.maskGreen = 0x03e0\n            this.maskBlue = 0x001f\n        }\n\n        // End of BITMAP_INFO_HEADER\n\n        if (\n            this.headerSize > HeaderTypes.BITMAP_INFO_HEADER ||\n            this.compression === Compression.BI_BIT_FIELDS ||\n            this.compression === Compression.BI_ALPHA_BIT_FIELDS\n        ) {\n            this.maskRed = this.readUInt32LE()\n            this.maskGreen = this.readUInt32LE()\n            this.maskBlue = this.readUInt32LE()\n        }\n\n        // End of BITMAP_V2_INFO_HEADER\n\n        if (\n            this.headerSize > HeaderTypes.BITMAP_V2_INFO_HEADER ||\n            this.compression === Compression.BI_ALPHA_BIT_FIELDS\n        ) {\n            this.maskAlpha = this.readUInt32LE()\n        }\n\n        // End of BITMAP_V3_INFO_HEADER\n\n        if (this.headerSize > HeaderTypes.BITMAP_V3_INFO_HEADER) {\n            this.pos +=\n                HeaderTypes.BITMAP_V4_HEADER - HeaderTypes.BITMAP_V3_INFO_HEADER\n        }\n\n        // End of BITMAP_V4_HEADER\n\n        if (this.headerSize > HeaderTypes.BITMAP_V4_HEADER) {\n            this.pos += HeaderTypes.BITMAP_V5_HEADER - HeaderTypes.BITMAP_V4_HEADER\n        }\n\n        // End of BITMAP_V5_HEADER\n\n        if (this.bitPP <= 8 || this.colors > 0) {\n            const len = this.colors === 0 ? 1 << this.bitPP : this.colors\n            this.palette = new Array(len)\n\n            for (let i = 0; i < len; i++) {\n                const blue = this.buffer[this.pos++]\n                const green = this.buffer[this.pos++]\n                const red = this.buffer[this.pos++]\n                const quad = this.buffer[this.pos++]\n\n                this.palette[i] = {\n                    red,\n                    green,\n                    blue,\n                    quad,\n                }\n            }\n        }\n\n        // End of color table\n\n        // Can the height ever be negative?\n        if (this.height < 0) {\n            this.height *= -1\n            this.bottomUp = false\n        }\n\n        const coloShift = maskColor(\n            this.maskRed,\n            this.maskGreen,\n            this.maskBlue,\n            this.maskAlpha,\n        )\n\n        this.shiftRed = coloShift.shiftRed\n        this.shiftGreen = coloShift.shiftGreen\n        this.shiftBlue = coloShift.shiftBlue\n        this.shiftAlpha = coloShift.shiftAlpha\n    }\n\n    private parseRGBA() {\n        this.data = new Uint8Array(this.width * this.height * 4)\n\n        switch (this.bitPP) {\n            case 1:\n                this.bit1()\n                break\n            case 4:\n                this.bit4()\n                break\n            case 8:\n                this.bit8()\n                break\n            case 16:\n                this.bit16()\n                break\n            case 24:\n                this.bit24()\n                break\n            default:\n                this.bit32()\n        }\n    }\n\n    private bit1() {\n        const xLen = Math.ceil(this.width / 8)\n        const mode = xLen % 4\n        const padding = mode !== 0 ? 4 - mode : 0\n\n        let lastLine: number | undefined\n\n        this.scanImage(padding, xLen, (x, line) => {\n            if (line !== lastLine) {\n                lastLine = line\n            }\n\n            const b = this.buffer[this.pos++]\n            const location = line * this.width * 4 + x * 8 * 4\n\n            for (let i = 0; i < 8; i++) {\n                if (x * 8 + i < this.width) {\n                    const rgb = this.palette[(b >> (7 - i)) & 0x1]\n\n                    this.data[location + i * 4 + this.locAlpha] = 0xff\n                    this.data[location + i * 4 + this.locBlue] = rgb.blue\n                    this.data[location + i * 4 + this.locGreen] = rgb.green\n                    this.data[location + i * 4 + this.locRed] = rgb.red\n                } else {\n                    break\n                }\n            }\n        })\n    }\n\n    private bit4() {\n        if (this.compression === Compression.BI_RLE4) {\n            this.data.fill(0)\n\n            let lowNibble = false //for all count of pixel\n            let lines = this.bottomUp ? this.height - 1 : 0\n            let location = 0\n\n            while (location < this.data.length) {\n                const a = this.buffer[this.pos++]\n                const b = this.buffer[this.pos++]\n\n                //absolute mode\n                if (a === 0) {\n                    if (b === 0) {\n                        //line end\n                        lines += this.bottomUp ? -1 : 1\n                        location = lines * this.width * 4\n                        lowNibble = false\n\n                        continue\n                    }\n\n                    if (b === 1) {\n                        // image end\n                        break\n                    }\n\n                    if (b === 2) {\n                        // offset x, y\n                        const x = this.buffer[this.pos++]\n                        const y = this.buffer[this.pos++]\n\n                        lines += this.bottomUp ? -y : y\n                        location += y * this.width * 4 + x * 4\n                    } else {\n                        let c = this.buffer[this.pos++]\n\n                        for (let i = 0; i < b; i++) {\n                            location = this.setPixelData(\n                                location,\n                                lowNibble ? c & 0x0f : (c & 0xf0) >> 4,\n                            )\n\n                            if (i & 1 && i + 1 < b) {\n                                c = this.buffer[this.pos++]\n                            }\n\n                            lowNibble = !lowNibble\n                        }\n\n                        if ((((b + 1) >> 1) & 1) === 1) {\n                            this.pos++\n                        }\n                    }\n                } else {\n                    //encoded mode\n                    for (let i = 0; i < a; i++) {\n                        location = this.setPixelData(\n                            location,\n                            lowNibble ? b & 0x0f : (b & 0xf0) >> 4,\n                        )\n                        lowNibble = !lowNibble\n                    }\n                }\n            }\n        } else {\n            const xLen = Math.ceil(this.width / 2)\n            const mode = xLen % 4\n            const padding = mode !== 0 ? 4 - mode : 0\n\n            this.scanImage(padding, xLen, (x, line) => {\n                const b = this.buffer[this.pos++]\n                const location = line * this.width * 4 + x * 2 * 4\n\n                const first4 = b >> 4\n                let rgb = this.palette[first4]\n\n                this.data[location + this.locAlpha] = 0xff\n                this.data[location + this.locBlue] = rgb.blue\n                this.data[location + this.locGreen] = rgb.green\n                this.data[location + this.locRed] = rgb.red\n\n                if (x * 2 + 1 >= this.width) {\n                    // throw new Error('Something');\n                    return false\n                }\n\n                const last4 = b & 0x0f\n                rgb = this.palette[last4]\n\n                this.data[location + 4 + this.locAlpha] = 0xff\n                this.data[location + 4 + this.locBlue] = rgb.blue\n                this.data[location + 4 + this.locGreen] = rgb.green\n                this.data[location + 4 + this.locRed] = rgb.red\n            })\n        }\n    }\n\n    private bit8() {\n        if (this.compression === Compression.BI_RLE8) {\n            this.data.fill(0)\n\n            let lines = this.bottomUp ? this.height - 1 : 0\n            let location = 0\n\n            while (location < this.data.length) {\n                const a = this.buffer[this.pos++]\n                const b = this.buffer[this.pos++]\n\n                //absolute mode\n                if (a === 0) {\n                    if (b === 0) {\n                        //line end\n                        lines += this.bottomUp ? -1 : 1\n                        location = lines * this.width * 4\n                        continue\n                    }\n\n                    if (b === 1) {\n                        //image end\n                        break\n                    }\n\n                    if (b === 2) {\n                        //offset x,y\n                        const x = this.buffer[this.pos++]\n                        const y = this.buffer[this.pos++]\n\n                        lines += this.bottomUp ? -y : y\n                        location += y * this.width * 4 + x * 4\n                    } else {\n                        for (let i = 0; i < b; i++) {\n                            const c = this.buffer[this.pos++]\n                            location = this.setPixelData(location, c)\n                        }\n\n                        // @ts-ignore\n                        const shouldIncrement = b & (1 === 1)\n                        if (shouldIncrement) {\n                            this.pos++\n                        }\n                    }\n                } else {\n                    //encoded mode\n                    for (let i = 0; i < a; i++) {\n                        location = this.setPixelData(location, b)\n                    }\n                }\n            }\n        } else {\n            const mode = this.width % 4\n            const padding = mode !== 0 ? 4 - mode : 0\n\n            this.scanImage(padding, this.width, (x, line) => {\n                const b = this.buffer[this.pos++]\n                const location = line * this.width * 4 + x * 4\n\n                if (b < this.palette.length) {\n                    const rgb = this.palette[b]\n\n                    this.data[location + this.locAlpha] = 0xff\n                    this.data[location + this.locBlue] = rgb.blue\n                    this.data[location + this.locGreen] = rgb.green\n                    this.data[location + this.locRed] = rgb.red\n                }\n            })\n        }\n    }\n\n    private bit16() {\n        const padding = (this.width % 2) * 2\n\n        this.scanImage(padding, this.width, (x, line) => {\n            const loc = line * this.width * 4 + x * 4\n            const px = this.bufferView.getUint16(this.pos, true)\n            this.pos += 2\n\n            this.data[loc + this.locRed] = this.shiftRed(px)\n            this.data[loc + this.locGreen] = this.shiftGreen(px)\n            this.data[loc + this.locBlue] = this.shiftBlue(px)\n            this.data[loc + this.locAlpha] = this.shiftAlpha(px)\n        })\n    }\n\n    private bit24() {\n        const padding = this.width % 4\n\n        this.scanImage(padding, this.width, (x, line) => {\n            const loc = line * this.width * 4 + x * 4\n            const blue = this.buffer[this.pos++]\n            const green = this.buffer[this.pos++]\n            const red = this.buffer[this.pos++]\n\n            this.data[loc + this.locAlpha] = 0xff\n            this.data[loc + this.locBlue] = blue\n            this.data[loc + this.locGreen] = green\n            this.data[loc + this.locRed] = red\n        })\n    }\n\n    private bit32() {\n        this.scanImage(0, this.width, (x, line) => {\n            const loc = line * this.width * 4 + x * 4\n            const px = this.readUInt32LE()\n\n            this.data[loc + this.locAlpha] = this.shiftAlpha(px)\n            this.data[loc + this.locBlue] = this.shiftBlue(px)\n            this.data[loc + this.locGreen] = this.shiftGreen(px)\n            this.data[loc + this.locRed] = this.shiftRed(px)\n        })\n    }\n\n    private scanImage(\n        padding = 0,\n        width = this.width,\n        processPixel: IColorProcessor,\n    ) {\n        for (let y = this.height - 1; y >= 0; y--) {\n            const line = this.bottomUp ? y : this.height - 1 - y\n\n            for (let x = 0; x < width; x++) {\n                processPixel.call(this, x, line)\n            }\n\n            this.pos += padding\n        }\n    }\n\n    private readUInt32LE() {\n        const value = this.bufferView.getUint32(this.pos, true)\n        this.pos += 4\n        return value\n    }\n\n    private setPixelData(location: number, rgbIndex: number) {\n        const {blue, green, red} = this.palette[rgbIndex]\n\n        this.data[location + this.locAlpha] = 0xff\n        this.data[location + this.locBlue] = blue\n        this.data[location + this.locGreen] = green\n        this.data[location + this.locRed] = red\n\n        return location + 4\n    }\n}\n\nexport class AlphaBitmapDecoder {\n\n    static parse(buffer: Uint8Array, alphaIndex: number = null): ImageData {\n        const decoder = new BmpDecoder(buffer, {toRGBA: true})\n        const data = new Uint8ClampedArray(decoder.data)\n        if (alphaIndex || alphaIndex === 0) {\n            const alphaColor = decoder.palette?.[alphaIndex] // XXX fails for a102_bigtyre.bmp\n            for (let c = 0; c < decoder.data.length; c += 4) {\n                data[c + 3] = alphaColor?.red === data[c] && alphaColor?.green === data[c + 1] && alphaColor?.blue === data[c + 2] ? 0 : 255\n            }\n        }\n        return new ImageData(data, decoder.width, decoder.height)\n    }\n\n}\n","export function getFilename(url: string) {\n    if (!url) return url\n    let strUrl = url.toString().replace(/\\\\/g, '/')\n    if (strUrl.startsWith('/')) strUrl = strUrl.substring(1)\n    const lastInd = strUrl.lastIndexOf('/')\n    return strUrl.substring(lastInd + 1)\n}\n\nexport function iGet(obj, ...keys: string[]): any {\n    keys.forEach((keyname) => {\n        obj = Object.keys(obj)\n            .filter((key) => key.toLowerCase() === keyname.toLowerCase())\n            .map((key) => obj[key])\n        obj = obj ? obj[0] : obj\n    })\n    return obj\n}\n\nexport function decodeString(data) {\n    return new TextDecoder().decode(data).replace(/\\0/g, '')\n}\n\nexport function decodeFilepath(data) {\n    return decodeString(data).replace(/\\\\/g, '/')\n}\n\nexport function getRandomInclusive(min, max) {\n    min = Math.ceil(min)\n    max = Math.floor(max)\n    return Math.floor(Math.random() * (max - min + 1)) + min\n}\n\nexport function getRandom(max) {\n    return getRandomInclusive(0, max)\n}\n\nexport function getRandomSign() {\n    return -1 + getRandomInclusive(0, 1) * 2\n}\n\nexport function clearTimeoutSafe(timeout: NodeJS.Timeout) {\n    if (timeout) clearTimeout(timeout)\n    return null\n}\n\nexport function clearIntervalSafe(interval: NodeJS.Timeout) {\n    if (interval) clearInterval(interval)\n    return null\n}\n\ndeclare global {\n\n    interface Array<T> {\n        remove(element: T): void\n\n        last(): T\n\n        count(callback: (element: T) => boolean): number\n\n        partition(filter: (element: T) => boolean): [T[], T[]]\n    }\n\n    interface Map<K, V> {\n        getOrUpdate(key: K, updateCallback: () => V): V\n    }\n\n}\n\nArray.prototype.remove = function <T>(element: T): void {\n    const index = this.indexOf(element)\n    if (index !== -1) this.splice(index, 1)\n}\n\nArray.prototype.last = function <T>(): T {\n    return this.length > 0 ? this[this.length - 1] : undefined\n}\n\nArray.prototype.count = function <T>(callback: (element: T) => boolean): number {\n    let counter = 0\n    this.forEach((e) => callback(e) && counter++)\n    return counter\n}\n\nArray.prototype.partition = function <T>(filter: (element: T) => boolean): [T[], T[]] {\n    const left: T[] = [], right: T[] = []\n    this.forEach((a) => filter(a) ? left.push(a) : right.push(a))\n    return [left, right]\n}\n\n// noinspection JSUnusedGlobalSymbols\nMap.prototype.getOrUpdate = function <K, V>(key: K, updateCallback: () => V): V {\n    let value = this.get(key)\n    if (value === undefined) {\n        value = updateCallback()\n        this.set(key, value)\n    }\n    return value\n}\n","export class BaseConfig {\n\n    static setFromCfg(config: BaseConfig, cfgObj: any) {\n        Object.keys(cfgObj).forEach((cfgKey) => {\n            const lCfgKeyName = (cfgKey.startsWith('!') ? cfgKey.substring(1) : cfgKey)\n                .toLowerCase()\n                .replace(/_/g, '') // Activity_Stand\n                .replace(/-/g, '') // Geo-dome\n            const found = Object.keys(config).some((objKey) => {\n                return config.assignValue(objKey, lCfgKeyName, cfgObj[cfgKey])\n            })\n            if (!found) {\n                console.warn('cfg key: ' + cfgKey + ' does not exist in cfg: ' + config?.constructor?.name)\n            }\n        })\n        return config\n    }\n\n    assignValue(objKey, lCfgKeyName, cfgValue): boolean {\n        if (objKey.toLowerCase() === lCfgKeyName) {\n            const currentValue = this[objKey]\n            const currentIsArray = Array.isArray(currentValue)\n            let parsedValue = this.parseValue(lCfgKeyName, cfgValue)\n            const parsedIsArray = Array.isArray(parsedValue)\n            if (currentValue && currentIsArray !== parsedIsArray) {\n                if (currentIsArray) {\n                    parsedValue = [parsedValue]\n                    // } else {\n                    //     console.warn('Array overwrite conflict for key ' + objKey + ' with existing value (' + currentValue + ') and new value (' + parsedValue + ')')\n                }\n            }\n            this[objKey] = parsedValue\n            return true\n        }\n    }\n\n    parseValue(lCfgKeyName: string, cfgValue: any): any {\n        return cfgValue\n    }\n\n}\n","export class ConfigColor {\n\n    r: number\n    g: number\n    b: number\n\n    constructor(values: number[]) {\n        [this.r, this.g, this.b] = values\n    }\n\n}\n","export class ObjectiveImageCfg {\n\n    filename: string\n    x: number\n    y: number\n\n    constructor(cfgValue: any) {\n        [this.filename, this.x, this.y] = cfgValue\n    }\n\n}\n","import { iGet } from '../core/Util'\nimport { PriorityIdentifier } from '../game/model/job/PriorityIdentifier'\nimport { BaseConfig } from './BaseConfig'\nimport { ConfigColor } from './ConfigColor'\nimport { ObjectiveImageCfg } from './ObjectiveImageCfg'\n\nexport class LevelsCfg {\n\n    levelsByName: {} = []\n\n    constructor(cfgObj: any) {\n        Object.keys(cfgObj).forEach((levelKey) => {\n            if (!levelKey.startsWith('Tutorial') && !levelKey.startsWith('Level')) return // ignore incomplete test levels and duplicates\n            this.levelsByName[levelKey] = new LevelEntryCfg(cfgObj[levelKey])\n        })\n    }\n\n}\n\nexport class LevelEntryCfg extends BaseConfig {\n\n    fullName: string = ''\n    endGameAvi1: string = ''\n    endGameAvi2: string = ''\n    allowRename: boolean = false\n    recallOLObjects: boolean = false\n    generateSpiders: boolean = false\n    video: string = ''\n    disableEndTeleport: boolean = false\n    disableStartTeleport: boolean = false\n    emergeTimeOut: any = ''\n    boulderAnimation: any = ''\n    noMultiSelect: any = ''\n    noAutoEat: any = ''\n    disableToolTipSound: any = ''\n    blockSize: any = ''\n    digDepth: any = ''\n    roughLevel: any = ''\n    roofHeight: any = ''\n    useRoof: any = ''\n    selBoxHeight: any = ''\n    fpRotLightRGB: any = ''\n    fogColourRGB: any = ''\n    highFogColourRGB: any = ''\n    fogRate: number = 0\n    fallinMultiplier: number = 0\n    numberOfLandSlidesTillCaveIn: number = 0\n    noFallins: boolean = false\n    oxygenRate: number = 0 // 0 - 100\n    surfaceMap: string = ''\n    predugMap: string = ''\n    terrainMap: string = ''\n    emergeMap: string = ''\n    erodeMap: string = ''\n    fallinMap: string = ''\n    blockPointersMap: string = ''\n    cryOreMap: string = ''\n    pathMap: string = ''\n    noGather: boolean = false\n    textureSet: string = ''\n    rockFallStyle: any = ''\n    emergeCreature: any = ''\n    safeCaverns: any = ''\n    seeThroughWalls: any = ''\n    oListFile: any = ''\n    ptlFile: any = ''\n    nerpFile: any = ''\n    nerpMessageFile: any = ''\n    objectiveText: any = ''\n    objectiveImage640x480: ObjectiveImageCfg = null\n    erodeTriggerTime: number = 0\n    erodeErodeTime: number = 0\n    erodeLockTime: number = 0\n    nextLevel: any = ''\n    levelLinks: any = ''\n    frontEndX: number = 0\n    frontEndY: number = 0\n    frontEndOpen: boolean = false\n    priorities: LevelPrioritiesEntryConfig[] = [] // priority order matters!\n    reward: LevelRewardConfig = null\n    menuBMP: string[] = []\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n    parseValue(lCfgKeyName: string, cfgValue: any): any {\n        if (lCfgKeyName === 'fullName'.toLowerCase()) {\n            return cfgValue.replace(/_/g, ' ')\n        } else if (lCfgKeyName.endsWith('rgb')) {\n            return new ConfigColor(cfgValue)\n        } else if (lCfgKeyName === 'priorities') {\n            return Object.keys(cfgValue)\n                .filter(name => name.toLowerCase() !== 'AI_Priority_GetTool'.toLowerCase()) // not used in the game\n                .map(name => new LevelPrioritiesEntryConfig(name, cfgValue[name]))\n        } else if (lCfgKeyName === 'reward') {\n            return new LevelRewardConfig(cfgValue)\n        } else if (lCfgKeyName === 'objectiveimage640x480') {\n            return new ObjectiveImageCfg(cfgValue)\n        } else {\n            return super.parseValue(lCfgKeyName, cfgValue)\n        }\n    }\n\n}\n\nexport class LevelPrioritiesEntryConfig {\n\n    key: PriorityIdentifier\n    enabled: boolean\n\n    constructor(name: string, enabled: boolean) {\n        this.key = iGet(PriorityIdentifier, name.replace(/_/g, ''))\n        this.enabled = enabled\n    }\n\n}\n\nexport class LevelRewardConfig extends BaseConfig {\n\n    enable: boolean = true\n    modifier: number = null\n    importance: LevelRewardImportanceConfig = null\n    quota: LevelRewardQuotaConfig = null\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n    parseValue(lCfgKeyName: string, cfgValue: any): any {\n        if (lCfgKeyName === 'importance') {\n            return new LevelRewardImportanceConfig(cfgValue)\n        } else if (lCfgKeyName === 'quota') {\n            return new LevelRewardQuotaConfig(cfgValue)\n        } else {\n            return super.parseValue(lCfgKeyName, cfgValue)\n        }\n    }\n}\n\nexport class LevelRewardImportanceConfig extends BaseConfig {\n\n    crystals: number = 0\n    timer: number = 0\n    caverns: number = 0\n    constructions: number = 0\n    oxygen: number = 0\n    figures: number = 0\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n}\n\nexport class LevelRewardQuotaConfig extends BaseConfig {\n\n    crystals: number = null\n    timer: number = null\n    caverns: number = null\n    constructions: number = null\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n}\n","export class MenuCycleItemCfg {\n\n    actionName: string\n    x: number\n    y: number\n    width: number\n    height: number\n    description: string\n    two: number // usage unclear\n    labelOff: string\n    labelOn: string\n\n    constructor(cfgObj: any) {\n        [this.actionName, this.x, this.y, this.width, this.height, this.description, this.two, this.labelOff, this.labelOn] = cfgObj\n        this.description = this.description.replace(/_/g, ' ')\n    }\n\n}\n","export class MenuLabelItemCfg {\n\n    actionName: string\n    x: number\n    y: number\n    label: string\n    imgNormal: string\n    imgHover: string\n    imgPressed: string\n    tooltip: string\n    target: string\n    flag: string // usage unclear\n\n    constructor(cfgObj: any) {\n        if (cfgObj.length === 5 || cfgObj.length === 6) {\n            [this.actionName, this.x, this.y, this.label, this.target, this.flag] = cfgObj\n            this.label = Array.isArray(this.label) ? this.label.join(',') : this.label // TODO improve cfg handling, remove join\n            this.label = this.label.replace(/_/g, ' ')\n        } else if (cfgObj.length === 8) {\n            [this.actionName, this.x, this.y, this.imgNormal, this.imgHover, this.imgPressed, this.tooltip, this.target] = cfgObj\n        } else {\n            console.warn('Unexpected cfg object length: ' + cfgObj.length)\n            console.log(cfgObj)\n        }\n    }\n\n}\n","export class MenuSliderItemCfg {\n\n    actionName: string\n    x: number\n    y: number\n    width: number\n    height: number\n    description: string\n    min: number\n    max: number\n    imgOff: string\n    imgOn: string\n    imgLeft: string\n    imgRight: string\n    btnLeftNormal: string\n    btnRightNormal: string\n    btnLeftHover: string\n    btnRightHover: string\n\n    constructor(cfgObj: any) {\n        [this.actionName, this.x, this.y, this.width, this.height, this.description, this.min, this.max, this.imgOff, this.imgOn,\n            this.imgLeft, this.imgRight, this.btnRightNormal, this.btnLeftNormal, this.btnRightHover, this.btnLeftHover] = cfgObj\n    }\n\n}\n","import { BaseConfig } from './BaseConfig'\nimport { MenuCycleItemCfg } from './MenuCycleItemCfg'\nimport { MenuLabelItemCfg } from './MenuLabelItemCfg'\nimport { MenuSliderItemCfg } from './MenuSliderItemCfg'\n\nexport class MenuEntryCfg extends BaseConfig {\n\n    fullName: string = ''\n    title: string = ''\n    position: [number, number] = [0, 0]\n    menuFont: string = ''\n    loFont: string = ''\n    hiFont: string = ''\n    itemCount: number = 0\n    menuImage: string = ''\n    autoCenter: boolean = false\n    displayTitle: boolean = false\n    overlays: any[] = []\n    playRandom: boolean = false\n    itemsLabel: MenuLabelItemCfg[] = []\n    itemsSlider: MenuSliderItemCfg[] = []\n    itemsCycle: MenuCycleItemCfg[] = []\n    anchored: boolean = false\n    canScroll: boolean = false\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n    assignValue(objKey, lCfgKeyName, cfgValue): boolean {\n        if (lCfgKeyName.match(/item\\d+/i)) {\n            const lActionName = cfgValue[0].toLowerCase()\n            if (lActionName === 'next' || lActionName === 'trigger') {\n                this.itemsLabel.push(new MenuLabelItemCfg(cfgValue))\n            } else if (lActionName === 'slider') {\n                this.itemsSlider.push(new MenuSliderItemCfg(cfgValue))\n            } else if (lActionName === 'cycle') {\n                this.itemsCycle.push(new MenuCycleItemCfg(cfgValue))\n            } else {\n                console.warn('Unexpected item action name: ' + cfgValue[0])\n                return false\n            }\n            return true\n        } else if (lCfgKeyName.match(/overlay\\d+/i)) {\n            this.overlays.push(cfgValue)\n            return true\n        }\n        return super.assignValue(objKey, lCfgKeyName, cfgValue)\n    }\n\n    parseValue(lCfgKeyName: string, cfgValue: any): any {\n        if (lCfgKeyName === 'fullName'.toLowerCase() || lCfgKeyName === 'title') {\n            return cfgValue.replace(/_/g, ' ')\n        } else {\n            return super.parseValue(lCfgKeyName, cfgValue)\n        }\n    }\n\n}\n","import { BaseConfig } from './BaseConfig'\nimport { MenuEntryCfg } from './MenuEntryCfg'\n\nexport class MenuCfg extends BaseConfig {\n\n    menuCount: number = 0\n    menus: MenuEntryCfg[] = []\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n    assignValue(objKey, lCfgKeyName, cfgValue): boolean {\n        if (lCfgKeyName.match(/menu\\d+/i)) {\n            this.menus.push(new MenuEntryCfg(cfgValue))\n            return true\n        }\n        return super.assignValue(objKey, lCfgKeyName, cfgValue)\n    }\n\n}\n","import { BaseConfig } from './BaseConfig'\n\nexport class RewardCfg extends BaseConfig {\n\n    display: boolean = true\n    wallpaper: string = ''\n    images: RewardImageCfg[] = []\n    texts: RewardTextCfg[] = []\n    boxImages: RewardImageCfg[] = []\n    fonts: RewardFontsCfg = null\n    flics: { flhFilepath: string, x: number, y: number, w: number, h: number } = null\n    scrollSpeed: number = 0\n    centreText: boolean = false\n    vertSpacing: number = 0\n    backFont: string = ''\n    font: string = ''\n    titleFont: string = ''\n    timer: number = 0\n    saveButton: any = ''\n    advanceButton: any = ''\n    completeText: string = ''\n    failedText: string = ''\n    quitText: string = ''\n    textPos: [number, number] = [0, 0]\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n    assignValue(objKey, lCfgKeyName, cfgValue): boolean {\n        if (lCfgKeyName === 'images') {\n            Object.values(cfgValue).forEach((imgConf) => this.images.push(new RewardImageCfg(imgConf)))\n            return true\n        } else if (lCfgKeyName === 'text') {\n            Object.values(cfgValue).forEach((imgConf) => this.texts.push(new RewardTextCfg(imgConf)))\n            return true\n        } else if (lCfgKeyName === 'boximages') {\n            Object.values(cfgValue).forEach((imgConf) => this.boxImages.push(new RewardImageCfg(imgConf)))\n            return true\n        } else if (lCfgKeyName === 'fonts') {\n            this.fonts = new RewardFontsCfg(cfgValue)\n            return true\n        } else {\n            return super.assignValue(objKey, lCfgKeyName, cfgValue)\n        }\n    }\n\n}\n\nexport class RewardImageCfg {\n\n    filePath: string = ''\n    x: number = 0\n    y: number = 0\n\n    constructor(cfgObj: any) {\n        [this.filePath, this.x, this.y] = cfgObj\n    }\n\n}\n\nexport class RewardTextCfg {\n\n    text: string = ''\n    x: number = 0\n    y: number = 0\n\n    constructor(cfgObj: any) {\n        [this.text, this.x, this.y] = cfgObj\n    }\n\n}\n\nexport class RewardFontsCfg extends BaseConfig {\n\n    crystals: string = ''\n    ore: string = ''\n    diggable: string = ''\n    constructions: string = ''\n    caverns: string = ''\n    figures: string = ''\n    rockMonsters: string = ''\n    oxygen: string = ''\n    timer: string = ''\n    score: string = ''\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n}\n","export const encodeChar: number[] = []\n\nfor (let c = 0; c < 256; c++) {\n    encodeChar[c] = c\n}\nencodeChar[130] = 0x00E4 // ä\nencodeChar[142] = 0x00C4 // Ä\nencodeChar[162] = 0x00F6 // ö\nencodeChar[167] = 0x00DC // Ü\nencodeChar[171] = 0x00FC // ü\nencodeChar[195] = 0x00DF // ß\n","import { encodeChar } from './EncodingHelper'\n\nexport class CfgFileParser {\n\n    static parse(buffer): any {\n        const result = {}\n        const ancestry = []\n        let activeObject = result\n        let isComment = false\n        let keyVal = 0 // 0 = looking for key, 1 = inside key, 1 = looking for value, 2 = inside value\n        let key = ''\n        let value = ''\n        // debug output is a bad idea here, buffer size is about 232.611 characters and has 6781 lines\n        for (let seek = 0; seek < buffer.length; seek++) {\n            let charCode = buffer[seek]\n            if (charCode === 123 && key === 'FullName') { // dirty workaround but in the original file { (123) was used instead of Ä (142)\n                charCode = 142\n            }\n            let charStr = String.fromCharCode(encodeChar[charCode])\n            if (charStr === ';' || charStr === '/') { // someone used // as a marker for a comment\n                isComment = true\n            } else if (charCode === 10 || charCode === 13) {\n                isComment = false\n            }\n            if (!isComment) {\n                if (charCode > 32) { // not a whitespace\n                    if (keyVal === 0) { // looking for key\n                        if (charStr === '}') {\n                            activeObject = ancestry.pop()\n                        } else {\n                            keyVal++\n                            key = charStr\n                        }\n                    } else if (keyVal === 1) { // inside key\n                        key += charStr\n                    } else if (keyVal === 2) { // looking for value\n                        if (charStr === '{') { // start of a new object key is identifier\n                            ancestry.push(activeObject)\n                            activeObject = {}\n                            ancestry[ancestry.length - 1][key] = activeObject\n                            keyVal = 0 // start looking for a key again\n                        } else {\n                            keyVal++\n                            value = charStr\n                        }\n                    } else if (keyVal === 3) { // inside value\n                        value += charStr\n                    }\n                } else { // some whitespace\n                    if (keyVal === 1) {\n                        keyVal++\n                    } else if (keyVal === 3) {\n                        keyVal = 0\n                        const parsed = CfgFileParser.parseValue(value)\n                        if (activeObject.hasOwnProperty(key)) {\n                            activeObject[key].push(parsed)\n                        } else {\n                            activeObject[key] = [parsed]\n                        }\n                    }\n                }\n            }\n        }\n\n        const stack = [result]\n        while (stack.length > 0) {\n            const obj = stack.pop()\n            Object.keys(obj).forEach((key) => {\n                const val = obj[key]\n                if (Array.isArray(val)) {\n                    if (val.length === 1) {\n                        obj[key] = val[0]\n                    } else {\n                        val.forEach((sub) => stack.push(sub))\n                    }\n                } else if (Object.keys(val).length > 1) {\n                    stack.push(val)\n                }\n            })\n        }\n\n        // apply some patches here\n        Object.values(result['Lego*']['Levels']).forEach((levelConf) => {\n            if (levelConf['CryoreMap']) {\n                levelConf['CryOreMap'] = levelConf['CryoreMap']  // typos... typos everywhere\n                delete levelConf['CryoreMap']\n            }\n            if (levelConf['CryOreMap']) {\n                levelConf['CryOreMap'] = levelConf['CryOreMap'].replace('Cryo_', 'Cror_')\n            }\n            if (levelConf['PredugMap']) {\n                levelConf['PreDugMap'] = levelConf['PredugMap']\n                delete levelConf['PredugMap']\n            }\n            const textureSet = levelConf['TextureSet']\n            if (Array.isArray(textureSet) && Array.isArray(textureSet[1])) {\n                levelConf['TextureSet'] = textureSet[1]\n            }\n        })\n\n        return result['Lego*']\n    }\n\n    static parseValue(val) {\n        function splitShrink(sep) {\n            val = val.split(sep).filter(val => val !== '').map(val => CfgFileParser.parseValue(val))\n            if (val.length === 0) {\n                val = ''\n            } else if (val.length === 1) {\n                val = val[0]\n            }\n        }\n\n        const num = Number(val)\n        if (isNaN(num)) {\n            val = val.toString().replace(/\\\\/g, '/')\n            const lVal = val.toLowerCase()\n            if (lVal === 'true') return true\n            if (lVal === 'false') return false\n            if (lVal === 'null') return ''\n            if (val.includes(':')) {\n                splitShrink.call(this, ':')\n            } else if (val.includes(',')) { // TODO improve cfg handling: what about strings\n                splitShrink.call(this, ',')\n            } else if (val.includes('|')) {\n                splitShrink.call(this, '|')\n            }\n            return val\n        } else {\n            return num\n        }\n    }\n\n}\n","import { encodeChar } from './EncodingHelper'\n\nexport class ObjectiveTextParser {\n\n    parseObjectiveTextFile(txtFileContent: Uint8Array) {\n        const result = {}\n        let state = PARSING_STATE.DROP\n        let currentLevel: LevelObjectiveTextEntry = null\n        let value = ''\n        let line = ''\n        for (let c = 0; c < txtFileContent.length; c++) {\n            const code = encodeChar[txtFileContent[c]]\n            let char = String.fromCharCode(code)\n            if (state === PARSING_STATE.DROP) {\n                if (char === '[') {\n                    if (currentLevel) result[currentLevel.key] = currentLevel\n                    currentLevel = new LevelObjectiveTextEntry()\n                    state = PARSING_STATE.KEY\n                } else if (currentLevel && char === ':') {\n                    const lLine = line.toLowerCase()\n                    if (lLine === 'objective') {\n                        line = ''\n                        state = PARSING_STATE.OBJECTIVE\n                    } else if (lLine === 'failure') {\n                        line = ''\n                        state = PARSING_STATE.FAILURE\n                    } else if (lLine === 'completion') {\n                        line = ''\n                        state = PARSING_STATE.COMPLETION\n                    } else if (lLine === 'crystalfailure') {\n                        line = ''\n                        state = PARSING_STATE.CRYSTAL_FAILURE\n                    }\n                    for (; c < txtFileContent.length && txtFileContent[c + 1] === '\\t'.charCodeAt(0); c++) {\n                    }\n                } else if (char === '\\n' || char === '\\r') {\n                    line = ''\n                } else {\n                    line += char\n                }\n            } else if (state === PARSING_STATE.KEY) {\n                if (char === ']') {\n                    currentLevel.key = value\n                    value = ''\n                    state = PARSING_STATE.DROP\n                } else if (char === '\\n' || char === '\\r') {\n                    throw 'Malformed objective text file'\n                } else {\n                    value += char\n                }\n            } else if (state === PARSING_STATE.OBJECTIVE) {\n                if (char === '\\n' || char === '\\r') {\n                    currentLevel.objective = value\n                    value = ''\n                    state = PARSING_STATE.DROP\n                } else {\n                    value += char\n                }\n            } else if (state === PARSING_STATE.FAILURE) {\n                if (char === '\\n' || char === '\\r') {\n                    currentLevel.failure = value\n                    value = ''\n                    state = PARSING_STATE.DROP\n                } else {\n                    value += char\n                }\n            } else if (state === PARSING_STATE.COMPLETION) {\n                if (char === '\\n' || char === '\\r') {\n                    currentLevel.completion = value\n                    value = ''\n                    state = PARSING_STATE.DROP\n                } else {\n                    value += char\n                }\n            } else if (state === PARSING_STATE.CRYSTAL_FAILURE) {\n                if (char === '\\n' || char === '\\r') {\n                    currentLevel.crystalFailure = value\n                    value = ''\n                    state = PARSING_STATE.DROP\n                } else {\n                    value += char\n                }\n            }\n        }\n        if (currentLevel) result[currentLevel.key] = currentLevel\n        currentLevel = null\n        return result\n    }\n\n}\n\nenum PARSING_STATE {\n\n    DROP,\n    KEY,\n    OBJECTIVE,\n    FAILURE,\n    COMPLETION,\n    CRYSTAL_FAILURE,\n\n}\n\nexport class LevelObjectiveTextEntry {\n\n    key: string\n    objective: string\n    failure: string\n    completion: string\n    crystalFailure: string\n\n}\n","export enum WorkerMessageType {\n\n    MSG,\n    CFG,\n    CACHE_MISS,\n    SFX,\n    ASSET,\n    DONE,\n\n}\n","// The RockRaidersObjectNotation (RON) format is related to JSON\n\nexport class RonFile {\n\n    static parse(content: string) {\n        const lines: string[][] = content.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n') // normalize newlines\n            .replace(/\\t/g, ' ') // tabs to spaces\n            .split('\\n')\n            .map((l) => { // strip comments from each line\n                const indDoubleSlash = l.indexOf('//')\n                if (indDoubleSlash > -1) l = l.substring(0, indDoubleSlash)\n                const indComment = l.indexOf(';')\n                if (indComment > -1) l = l.substring(0, indComment)\n                return l\n            })\n            .map((l) => { // remove whitespace at start/end of lines\n                l = l.trim()\n                return l\n            })\n            .filter(l => l !== '') // filter empty lines\n            .map((v) => v.split(' ').filter(v => v !== ''))\n        const root = {}\n        RonFile.parseObj(root, lines, 0)\n        return root\n    }\n\n    static parseObj(obj: {}, lines: string[][], start): number {\n        for (let c = start; c < lines.length; c++) {\n            const [name, val] = lines[c]\n            const key = name.toLowerCase()\n            if (val === '{') {\n                obj[key] = {}\n                c = this.parseObj(obj[key], lines, c + 1)\n            } else if (key === '}') {\n                return c\n            } else {\n                // parse values\n                let value: any = val.split(':').filter(v => v !== '') // there is key::value\n                    .map(v => v.split(',').map(v => v.split('|').map(v => this.parseValue(v))))\n                while (value.length === 1) value = value[0] // replace arrays with only one value\n                obj[key] = value\n            }\n        }\n        return lines.length\n    }\n\n    static parseValue(value: string) {\n        const num = Number(value)\n        const lv = value.toLowerCase()\n        if (!isNaN(num)) {\n            return num\n        } else if (lv === 'false') {\n            return false\n        } else if (lv === 'true') {\n            return true\n        } else {\n            return value\n        }\n    }\n\n}\n","import { encodeChar } from './EncodingHelper'\n\n/**\n * Handles the extraction of single files from a bigger WAD data blob\n */\nexport class WadFile {\n\n    buffer: Int8Array = null\n    entryIndexByName: Map<string, number> = new Map()\n    fLength: number[] = []\n    fStart: number[] = []\n\n    /**\n     * Validate and parse the given data object as binary blob of a WAD file\n     * @param data binary blob\n     * @param debug enable/disable debug output while parsing\n     */\n    parseWadFile(data, debug = false) {\n        const dataView = new DataView(data)\n        this.buffer = new Int8Array(data)\n        let pos = 0\n        if (String.fromCharCode.apply(null, this.buffer.slice(pos, 4)) !== 'WWAD') {\n            throw 'Invalid WAD0 file provided'\n        }\n        if (debug) {\n            console.log('WAD0 file seems legit')\n        }\n        pos = 4\n        const numberOfEntries = dataView.getInt32(pos, true)\n        if (debug) {\n            console.log(numberOfEntries)\n        }\n        pos = 8\n\n        let bufferStart = pos\n        for (let i = 0; i < numberOfEntries; pos++) {\n            if (this.buffer[pos] === 0) {\n                this.entryIndexByName.set(String.fromCharCode.apply(null, this.buffer.slice(bufferStart, pos)).replace(/\\\\/g, '/').toLowerCase(), i)\n                bufferStart = pos + 1\n                i++\n            }\n        }\n\n        if (debug) {\n            console.log(this.entryIndexByName)\n        }\n\n        for (let i = 0; i < numberOfEntries; pos++) {\n            if (this.buffer[pos] === 0) {\n                bufferStart = pos + 1\n                i++\n            }\n        }\n\n        if (debug) {\n            console.log('Offset after absolute original names is ' + pos)\n        }\n\n        for (let i = 0; i < numberOfEntries; i++) {\n            this.fLength[i] = dataView.getInt32(pos + 8, true)\n            this.fStart[i] = dataView.getInt32(pos + 12, true)\n            pos += 16\n        }\n\n        if (debug) {\n            console.log(this.fLength)\n            console.log(this.fStart)\n        }\n    }\n\n    /**\n     * Returns the entries content extracted by name from the managed WAD file\n     * @param entryName Entry name to be extracted\n     * @returns {Uint8Array} Returns the content as Uint8Array\n     */\n    getEntryData(entryName): Uint8Array {\n        return new Uint8Array(this.getEntryBuffer(entryName))\n    }\n\n    /**\n     * Returns the entries content as text extracted by name from the managed WAD file\n     * @param entryName Entry name to be extracted\n     * @returns {string} Returns the content as String\n     */\n    getEntryText(entryName): string {\n        let result = ''\n        this.getEntryData(entryName).forEach((c) => result += String.fromCharCode(encodeChar[c]))\n        return result\n    }\n\n    /**\n     * Returns the entries content by name extracted from the managed WAD file\n     * @param entryName Entry name to be extracted\n     * @returns {Int8Array} Returns the content as buffer slice\n     */\n    getEntryBuffer(entryName): Int8Array {\n        const index = this.entryIndexByName.get(entryName.toLowerCase())\n        if (index === undefined || index === null) {\n            throw 'Entry \\'' + entryName + '\\' not found in WAD file'\n        }\n        return this.buffer.slice(this.fStart[index], this.fStart[index] + this.fLength[index])\n    }\n\n    filterEntryNames(regexStr) {\n        const regex = new RegExp(regexStr.toLowerCase())\n        const result = []\n        this.entryIndexByName.forEach((index, entry) => {\n            if (entry.match(regex)) result.push(entry)\n        })\n        return result\n    }\n\n}\n","export function getPath(url: string): string {\n    if (!url) return url\n    let strUrl = url.toString().replace(/\\\\/g, '/')\n    if (strUrl.startsWith('/')) strUrl = strUrl.substring(1)\n    const lastInd = strUrl.lastIndexOf('/')\n    strUrl = strUrl.substring(0, lastInd + 1)\n    if (strUrl.startsWith('/')) strUrl = strUrl.substring(1)\n    return strUrl\n}\n\nexport function getFilename(url: string): string {\n    if (!url) return url\n    let strUrl = url.toString().replace(/\\\\/g, '/')\n    if (strUrl.startsWith('/')) strUrl = strUrl.substring(1)\n    const lastInd = strUrl.lastIndexOf('/')\n    return strUrl.substring(lastInd + 1)\n}\n\nexport function iGet(obj, ...keys: string[]): any {\n    keys.forEach((keyname) => {\n        obj = Object.keys(obj)\n            .filter((key) => key.toLowerCase() === keyname.toLowerCase())\n            .map((key) => obj[key])\n        obj = obj ? obj[0] : obj\n    })\n    return obj\n}\n","import { LevelEntryCfg, LevelsCfg } from '../../cfg/LevelsCfg'\nimport { MenuCfg } from '../../cfg/MenuCfg'\nimport { RewardCfg } from '../../cfg/RewardCfg'\nimport { WAD_CACHE_DB_NAME } from '../../params'\nimport { AlphaBitmapDecoder } from './AlphaBitmapDecoder'\nimport { CfgFileParser } from './CfgFileParser'\nimport { ObjectiveTextParser } from './ObjectiveTextParser'\nimport { RonFile } from './RonFile'\nimport { WadFile } from './WadFile'\nimport { getFilename, getPath, iGet } from './WadUtil'\n\nexport class WadLoader {\n\n    wad0File: WadFile = null\n    wad1File: WadFile = null\n    startTime: Date\n    assetIndex: number = 0\n    totalResources: number = 0\n    assetsFromCfgByName: Map<string, { method: ((name: string, callback: (any) => void) => void), assetPath: string, optional: boolean }> = new Map()\n\n    onMessage: (msg: string) => any = (msg: string) => {\n        console.log(msg)\n    }\n    onInitialLoad: (totalResources: number, cfg: any) => any = () => {\n        console.log('Initial loading done.')\n    }\n    onAssetLoaded: (assetIndex: number, assetName: string, assetObj: any) => any = () => {\n    }\n    onLoadDone: (totalResources: number, loadingTimeSeconds: string) => any = (totalResources: number, loadingTimeSeconds: string) => {\n        console.log('Loading of about ' + totalResources + ' assets complete! Total load time: ' + loadingTimeSeconds + ' seconds.')\n    }\n\n    loadWadImageAsset(name: string, callback: (obj: ImageData) => any) {\n        const data = this.wad0File.getEntryData(name)\n        const imgData = AlphaBitmapDecoder.parse(data)\n        callback(imgData)\n    }\n\n    loadWadTexture(name: string, callback: (obj: ImageData) => any) {\n        const data = this.wad0File.getEntryData(name)\n        const alphaIndexMatch = getFilename(name).match(/^a(\\d+).+/i)\n        const alphaIndex = alphaIndexMatch ? parseInt(alphaIndexMatch[1]) : null\n        const imgData = AlphaBitmapDecoder.parse(data, alphaIndex)\n        if (name.toLowerCase().startsWith('miscanims/crystal')) { // XXX fix crystal lwo loading\n            callback(WadLoader.grayscaleToGreen(imgData))\n        } else {\n            callback(imgData)\n        }\n    }\n\n    private static grayscaleToGreen(imgData: ImageData): ImageData {\n        const arr = imgData.data\n        for (let c = 0; c < arr.length; c += 4) {\n            arr[c] = 0\n            arr[c + 2] = 0\n        }\n        return imgData\n    }\n\n    loadAlphaImageAsset(name: string, callback: (obj: ImageData) => any) {\n        const data = this.wad0File.getEntryData(name)\n        const imgData = AlphaBitmapDecoder.parse(data)\n        for (let n = 0; n < imgData.data.length; n += 4) {\n            if (imgData.data[n] <= 2 && imgData.data[n + 1] <= 2 && imgData.data[n + 2] <= 2) { // Interface/Reward/RSoxygen.bmp uses 2/2/2 as \"black\" alpha background\n                imgData.data[n + 3] = 0\n            }\n        }\n        callback(imgData)\n    }\n\n    loadFontImageAsset(name: string, callback: (obj: ImageData) => any) {\n        const data = this.wad0File.getEntryData(name)\n        const imgData = AlphaBitmapDecoder.parse(data)\n        callback(imgData)\n    }\n\n    loadNerpAsset(name: string, callback: (obj: string) => any) {\n        name = name.replace(/.npl$/, '.nrn')\n        const script = this.wad0File.getEntryText(name)\n        callback(script)\n    }\n\n    loadNerpMsg(name: string, callback: (obj: any) => any) {\n        const result = this.parseNerpMsgFile(this.wad0File, name)\n        const msg1 = this.parseNerpMsgFile(this.wad1File, name)\n        for (let c = 0; c < msg1.length; c++) {\n            result[c] = result[c] || {}\n            const m1 = msg1[c]\n            if (!m1) continue\n            if (m1.txt) {\n                result[c].txt = m1.txt\n            }\n            if (m1.snd) {\n                result[c].snd = m1.snd\n            }\n        }\n        callback(result)\n    }\n\n    parseNerpMsgFile(wadFile: WadFile, name: string) {\n        const result = []\n        const lines = wadFile.getEntryText(name).split(/[\\r\\n]/).map((l) => l?.trim()).filter((l) => !!l)\n        for (let c = 0; c < lines.length; c++) {\n            const line = lines[c]\n            if (line === '-') {\n                continue\n            }\n            // line formatting differs between wad0 and wad1 files!\n            const txt0Match = line.match(/\\\\\\[([^\\\\]+)\\\\](\\s*#([^#]+)#)?/)\n            const txt1Match = line.match(/^([^$][^#]+)(\\s*#([^#]+)#)?/)\n            const sndMatch = line.match(/\\$([^\\s]+)\\s*([^\\s]+)/)\n            if (wadFile === this.wad0File && txt0Match) {\n                const index = txt0Match[3] !== undefined ? this.numericNameToNumber(txt0Match[3]) : c // THIS IS MADNESS! #number# at the end of line is OPTIONAL\n                result[index] = result[index] || {}\n                result[index].txt = txt0Match[1]\n            } else if (wadFile === this.wad1File && txt1Match) {\n                const index = txt1Match[3] !== undefined ? this.numericNameToNumber(txt1Match[3]) : c // THIS IS MADNESS! #number# at the end of line is OPTIONAL\n                result[index] = result[index] || {}\n                result[index].txt = txt1Match[1].replace(/_/g, ' ').trim()\n            } else if (sndMatch && sndMatch.length === 3) {\n                const index = this.numericNameToNumber(sndMatch[1])\n                result[index] = result[index] || {}\n                result[index].snd = sndMatch[2].replace(/\\\\/g, '/')\n            } else {\n                throw 'Line in nerps message file did not match anything'\n            }\n        }\n        return result\n    }\n\n    numericNameToNumber(name: string) {\n        if (name === undefined) {\n            throw 'Numeric name must not be undefined'\n        }\n        const digits = {one: 1, two: 2, three: 3, four: 4, five: 5, six: 6, seven: 7, eight: 8, nine: 9}\n        const specials = {\n            ten: 10, eleven: 11, twelve: 12, thirteen: 13, fourteen: 14, fifteen: 15,\n            sixteen: 16, seventeen: 17, eighteen: 18, nineteen: 19,\n            eightteen: 18, // typo seen in the wild\n        }\n        const tens = {twenty: 20, thirty: 30, forty: 40}\n        let number = specials[name] || digits[name]\n        if (number === undefined) {\n            Object.keys(tens).forEach(ten => {\n                if (name.startsWith(ten)) {\n                    const digitName = name.replace(ten, '')\n                    number = tens[ten] + (digitName ? digits[digitName] : 0)\n                }\n            })\n        }\n        if (number === undefined) {\n            throw 'Found unexpected numeric name ' + name\n        }\n        return number\n    }\n\n    loadObjectiveTexts(name: string, callback: (obj: any) => any) {\n        const txtContent = this.wad1File.getEntryData(name)\n        const result = new ObjectiveTextParser().parseObjectiveTextFile(txtContent)\n        callback(result)\n    }\n\n    loadMapAsset(name: string, callback: (obj: any) => any) {\n        const buffer = this.wad0File.getEntryData(name)\n        if (buffer.length < 13 || String.fromCharCode.apply(String, buffer.slice(0, 3)) !== 'MAP') {\n            console.log('Invalid map data provided')\n            return\n        }\n        const map = {width: buffer[8], height: buffer[12], level: []}\n        let row = []\n        for (let seek = 16; seek < buffer.length; seek += 2) {\n            row.push(buffer[seek])\n            if (row.length >= map.width) {\n                map.level.push(row)\n                row = []\n            }\n        }\n        callback(map)\n    }\n\n    loadObjectListAsset(name: string, callback: (obj: any) => any) {\n        const lines = this.wad0File.getEntryText(name).split('\\n')\n        const objectList = []\n        let currentObject = null\n        for (let c = 0; c < lines.length; c++) {\n            const line = lines[c].trim()\n            const objectStartMatch = line.match(/(.+)\\s+{/)\n            const drivingMatch = line.match(/driving\\s+(.+)/)\n            if (line.length < 1 || line.startsWith(';') || line.startsWith('Lego*')) {\n                // ignore empty lines, comments and the root object\n            } else if (objectStartMatch) {\n                currentObject = {}\n                objectList[objectStartMatch[1]] = currentObject\n            } else if (line === '}') {\n                currentObject = null\n            } else if (drivingMatch) {\n                currentObject.driving = drivingMatch[1]\n            } else {\n                const split = line.split(/\\s+/)\n                if (split.length !== 2 || currentObject === null) {\n                    throw 'Unexpected key value entry: ' + line\n                }\n                const key = split[0]\n                let val: any = split[1]\n                if (key === 'xPos' || key === 'yPos' || key === 'heading') {\n                    val = parseFloat(val)\n                } else if (key !== 'type') {\n                    throw 'Unexpected key value entry: ' + line\n                }\n                currentObject[key] = val\n            }\n        }\n        callback(objectList)\n    }\n\n    /**\n     * Load a WAV file format sound asset from the WAD file.\n     * @param path Path inside the WAD file\n     * @param callback A callback that is triggered after the file has been loaded\n     * @param key Optional key to store the sound, should look like SND_pilotdrill\n     */\n    loadWavAsset(path, callback, key) {\n        console.error('wav asset loading not yet implemented') // TODO implement this\n        // const snd = document.createElement('audio');\n        // if (callback != null) {\n        //     snd.oncanplay = function () {\n        //         snd.oncanplay = null; // otherwise the callback is triggered multiple times\n        //         const keyPath = key || path;\n        //         // use array, because sounds have multiple variants sometimes\n        //         ResourceManager.sounds[keyPath] = ResourceManager.sounds[keyPath] || [];\n        //         ResourceManager.sounds[keyPath].push(snd);\n        //         callback();\n        //     };\n        // }\n        // // try (localized) wad1 file first, then use generic wad0 file\n        // try {\n        //     snd.src = this.wad1File.getEntryUrl(path);\n        // } catch (e) {\n        //     snd.src = this.wad0File.getEntryUrl(path);\n        // }\n    }\n\n    loadLWOFile(lwoFilepath: string, callback: (obj: any) => any) {\n        let lwoContent\n        try {\n            lwoContent = this.wad0File.getEntryBuffer(lwoFilepath)\n        } catch (e) {\n            try {\n                lwoContent = this.wad0File.getEntryBuffer('world/shared/' + getFilename(lwoFilepath))\n            } catch (e) {\n                console.error('Could not load LWO file ' + lwoFilepath + '; Error: ' + e)\n                return\n            }\n        }\n        callback(lwoContent.buffer)\n    }\n\n    registerAllAssets(mainConf: any) { // dynamically register all assets from config\n        // add fonts and cursors\n        this.addAssetFolder(this.loadFontImageAsset, 'Interface/Fonts/')\n        this.addAssetFolder(this.loadAlphaImageAsset, 'Interface/Pointers/')\n        // add menu assets\n        this.addMenuWithAssets(mainConf, 'MainMenuFull', false)\n        this.addMenuWithAssets(mainConf, 'PausedMenu')\n        this.addMenuWithAssets(mainConf, 'OptionsMenu')\n        this.addAsset(this.loadAlphaImageAsset, 'Interface/BriefingPanel/BriefingPanel.bmp')\n        this.addAsset(this.loadObjectiveTexts, 'Languages/ObjectiveText.txt')\n        // add in-game assets\n        this.addAlphaImageFolder('Interface/TopPanel/') // top panel\n        this.addAlphaImageFolder('Interface/RightPanel/') // crystal side bar\n        this.addAlphaImageFolder('Interface/RadarPanel/')\n        this.addAlphaImageFolder('Interface/MessagePanel/')\n        this.addAsset(this.loadWadImageAsset, 'Interface/Airmeter/msgpanel_air_juice.bmp')\n        this.addAlphaImageFolder('Interface/InfoPanel/')\n        this.addAlphaImageFolder('Interface/PriorityPanel/')\n        this.addAlphaImageFolder('Interface/Priorities')\n        this.addAlphaImageFolder('Interface/CameraControl/')\n        this.addAlphaImageFolder('Interface/MessageTabs/')\n        this.addAlphaImageFolder('Interface/IconPanel/')\n        this.addAlphaImageFolder('Interface/Icons/')\n        this.addAlphaImageFolder('Interface/Menus/')\n        this.addAlphaImageFolder('Interface/Buttons/')\n        this.addAlphaImageFolder('Interface/InfoImages/')\n        this.addAssetFolder(this.loadAlphaImageAsset, 'Interface/FrontEnd/Vol_')\n        this.addAssetFolder(this.loadWadImageAsset, 'Interface/FrontEnd/lp_')\n        this.addAsset(this.loadAlphaImageAsset, 'Interface/FrontEnd/LowerPanel.bmp')\n        // level files\n        this.addAsset(this.loadNerpAsset, 'Levels/nerpnrn.h')\n        const levelsCfg = new LevelsCfg(iGet(mainConf, 'Levels'))\n        this.onAssetLoaded(0, 'Levels', levelsCfg)\n        Object.values(levelsCfg.levelsByName).forEach((level: LevelEntryCfg) => {\n            level.menuBMP.forEach((bmpName) => {\n                this.addAsset(this.loadAlphaImageAsset, bmpName)\n            })\n            this.addAsset(this.loadMapAsset, level.surfaceMap)\n            this.addAsset(this.loadMapAsset, level.predugMap)\n            this.addAsset(this.loadMapAsset, level.terrainMap)\n            this.addAsset(this.loadMapAsset, level.blockPointersMap, true)\n            this.addAsset(this.loadMapAsset, level.cryOreMap)\n            this.addAsset(this.loadMapAsset, level.pathMap, true)\n            if (level.fallinMap) this.addAsset(this.loadMapAsset, level.fallinMap)\n            if (level.erodeMap) this.addAsset(this.loadMapAsset, level.erodeMap)\n            this.addAsset(this.loadObjectListAsset, level.oListFile)\n            this.addAsset(this.loadNerpAsset, level.nerpFile)\n            this.addAsset(this.loadNerpMsg, level.nerpMessageFile)\n        })\n        // load all shared textures\n        this.addTextureFolder('World/Shared/')\n        // load all building types\n        const buildingTypes = mainConf['BuildingTypes']\n        Object.values(buildingTypes).forEach((bType: string) => {\n            const bName = bType.split('/')[1]\n            const aeFile = bType + '/' + bName + '.ae'\n            this.addAnimatedEntity(aeFile)\n        })\n        this.addAnimatedEntity('mini-figures/pilot/pilot.ae')\n        // load monsters\n        this.addAnimatedEntity('Creatures/SpiderSB/SpiderSB.ae')\n        this.addAnimatedEntity('Creatures/bat/bat.ae')\n        // load misc objects\n        this.addAnimatedEntity(iGet(mainConf, 'MiscObjects', 'Dynamite') + '/Dynamite.ae')\n        this.addAnimatedEntity(iGet(mainConf, 'MiscObjects', 'Barrier') + '/Barrier.ae')\n        this.addAsset(this.loadLWOFile, 'World/Shared/Crystal.lwo') // highpoly version, but unused?\n        this.addAsset(this.loadLWOFile, iGet(mainConf, 'MiscObjects', 'Crystal') + '.lwo')\n        this.addTextureFolder('MiscAnims/Crystal/')\n        this.addAsset(this.loadLWOFile, iGet(mainConf, 'MiscObjects', 'Ore') + '.lwo')\n        this.addAsset(this.loadWadTexture, 'MiscAnims/Ore/Ore.bmp')\n        this.addAsset(this.loadLWOFile, 'World/Shared/Brick.lwo')\n        this.addAsset(this.loadLWOFile, iGet(mainConf, 'MiscObjects', 'ProcessedOre') + '.lwo')\n        this.addAsset(this.loadLWOFile, iGet(mainConf, 'MiscObjects', 'ElectricFence') + '.lwo')\n        this.addTextureFolder('Buildings/E-Fence/')\n        this.addAnimatedEntity(iGet(mainConf, 'MiscObjects', 'Barrier') + '/Barrier.ae')\n        this.addAnimatedEntity('MiscAnims/Dynamite/Dynamite.ae')\n        this.addLWSFile('MiscAnims/RockFall/Rock3Sides.lws')\n        this.addTextureFolder('MiscAnims/RockFall/')\n        // spaces\n        this.addTextureFolder('World/WorldTextures/IceSplit/Ice')\n        this.addTextureFolder('World/WorldTextures/LavaSplit/Lava')\n        this.addTextureFolder('World/WorldTextures/RockSplit/Rock')\n        // reward screen\n        const rewardCfg = new RewardCfg(iGet(mainConf, 'Reward'))\n        this.onAssetLoaded(0, 'Reward', rewardCfg)\n        this.addAsset(this.loadWadImageAsset, rewardCfg.wallpaper)\n        this.addAsset(this.loadFontImageAsset, rewardCfg.backFont)\n        Object.values(rewardCfg.fonts).forEach(imgPath => this.addAsset(this.loadFontImageAsset, imgPath))\n        rewardCfg.images.forEach(img => this.addAsset(this.loadAlphaImageAsset, img.filePath))\n        rewardCfg.boxImages.forEach(img => this.addAsset(this.loadWadImageAsset, img.filePath))\n        rewardCfg.saveButton.splice(0, 4).forEach(img => this.addAsset(this.loadWadImageAsset, img))\n        rewardCfg.advanceButton.splice(0, 4).forEach(img => this.addAsset(this.loadWadImageAsset, img))\n        // // sounds\n        // const samplesConf = mainConf['Samples'];\n        // Object.keys(samplesConf).forEach(sndKey => {\n        //     let sndPath = samplesConf[sndKey] + '.wav';\n        //     if (sndKey.startsWith('!')) { // TODO no clue what this means... loop? duplicate?!\n        //         sndKey = sndKey.slice(1);\n        //     }\n        //     if (sndPath.startsWith('*')) { // TODO no clue what this means... don't loop, see telportup\n        //         sndPath = sndPath.slice(1);\n        //     } else if (sndPath.startsWith('@')) {\n        //         // sndPath = sndPath.slice(1);\n        //         // console.warn('Sound ' + sndPath + ' must be loaded from program files folder. Not yet implemented!');\n        //         return;\n        //     }\n        //     sndPath.split(',').forEach(sndPath => {\n        //         this.addAsset(this.loadWavAsset, sndPath, false, sndKey);\n        //     });\n        // });\n    }\n\n    addAnimatedEntity(aeFile: string) {\n        const content = this.wad0File.getEntryText(aeFile)\n        const cfgRoot = iGet(RonFile.parse(content), 'Lego*')\n        this.onAssetLoaded(0, aeFile, cfgRoot)\n        const path = getPath(aeFile);\n        ['HighPoly', 'MediumPoly', 'LowPoly'].forEach((polyType) => { // TODO add 'FPPoly' (contains two cameras)\n            const cfgPoly = iGet(cfgRoot, polyType)\n            if (cfgPoly) {\n                Object.keys(cfgPoly).forEach((key) => {\n                    this.addAsset(this.loadLWOFile, path + cfgPoly[key] + '.lwo')\n                })\n            }\n        })\n        const activities = iGet(cfgRoot, 'Activities')\n        if (activities) {\n            Object.keys(activities).forEach((activity) => {\n                try {\n                    let keyname = iGet(activities, activity)\n                    const act = iGet(cfgRoot, keyname)\n                    const file = iGet(act, 'FILE')\n                    const isLws = iGet(act, 'LWSFILE') === true\n                    if (isLws) {\n                        this.addLWSFile(path + file + '.lws')\n                    } else {\n                        console.error('Found activity which is not an LWS file')\n                    }\n                } catch (e) {\n                    console.error(e)\n                    console.log(cfgRoot)\n                    console.log(activities)\n                    console.log(activity)\n                }\n            })\n        }\n        // load all textures for this type\n        this.addTextureFolder(getPath(aeFile))\n    }\n\n    addLWSFile(lwsFilepath: string) {\n        const content = this.wad0File.getEntryText(lwsFilepath)\n        this.onAssetLoaded(0, lwsFilepath, content)\n        const lwoFiles: string[] = this.extractLwoFiles(getPath(lwsFilepath), content)\n        lwoFiles.forEach((lwoFile) => this.addAsset(this.loadLWOFile, lwoFile))\n    }\n\n    extractLwoFiles(path: string, content: string): string[] {\n        const lines: string[] = content.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n') // normalize newlines\n            .replace(/\\t/g, ' ') // tabs to spaces\n            .split('\\n')\n            .map((l) => l.trim())\n\n        if (lines[0] !== 'LWSC') {\n            throw 'Invalid start of file! Expected \\'LWSC\\' in first line'\n        }\n\n        return lines.filter((line) => line.toLowerCase().startsWith('LoadObject '.toLowerCase()))\n            .map((objLine) => path + getFilename(objLine.substring('LoadObject '.length)).toLowerCase())\n    }\n\n    addAlphaImageFolder(folderPath: string) {\n        this.addAssetFolder(this.loadAlphaImageAsset, folderPath)\n    }\n\n    addTextureFolder(folderPath: string) {\n        this.addAssetFolder(this.loadWadTexture, folderPath)\n    }\n\n    addAssetFolder(callback: (name: string, callback: (obj: any) => any) => void, folderPath) {\n        this.wad0File.filterEntryNames(folderPath + '.+\\\\.bmp').forEach((assetPath) => {\n            this.addAsset(callback, assetPath)\n        })\n    }\n\n    addMenuWithAssets(mainConf, name: string, menuImageAlpha: boolean = true) {\n        const menuCfg = new MenuCfg(iGet(mainConf, 'Menu', name))\n        this.onAssetLoaded(0, name, menuCfg)\n        menuCfg.menus.forEach((menuCfg) => {\n            const method = menuImageAlpha ? this.loadAlphaImageAsset : this.loadWadImageAsset\n            const menuImage = Array.isArray(menuCfg.menuImage) ? menuCfg.menuImage[0] : menuCfg.menuImage\n            this.addAsset(method, menuImage)\n            this.addAsset(this.loadFontImageAsset, menuCfg.menuFont)\n            this.addAsset(this.loadFontImageAsset, menuCfg.loFont)\n            this.addAsset(this.loadFontImageAsset, menuCfg.hiFont)\n        })\n    }\n\n    addAsset(method: (name: string, callback: (obj: any) => any) => void, assetPath, optional = false) {\n        if (!assetPath || this.assetsFromCfgByName.hasOwnProperty(assetPath) || assetPath === 'NULL') {\n            return // do not load assets twice\n        }\n        this.assetsFromCfgByName.set(assetPath, {method: method.bind(this), assetPath: assetPath, optional: optional})\n    }\n\n    loadAssetsParallel() {\n        const promises = []\n        const that = this\n        this.assetsFromCfgByName.forEach((asset) => {\n            promises.push(new Promise<void>((resolve) => {\n                try {\n                    asset.method(asset.assetPath, (assetObj) => {\n                        this.assetIndex++\n                        that.onAssetLoaded(this.assetIndex, asset.assetPath, assetObj)\n                        resolve()\n                    })\n                } catch (e) {\n                    if (!asset.optional) throw e\n                    this.assetIndex++\n                    that.onAssetLoaded(this.assetIndex, asset.assetPath, null)\n                    resolve()\n                }\n            }))\n        })\n        Promise.all(promises).then(() => {\n            // indicate that loading has finished, and display the total loading time\n            const loadingTimeSeconds = ((new Date().getTime() - this.startTime.getTime()) / 1000).toFixed(3).toString()\n            this.onLoadDone(this.totalResources, loadingTimeSeconds)\n        })\n    }\n\n    startWithCachedFiles(onCacheMiss: () => any) {\n        this.startTime = new Date()\n        const _onerror = () => {\n            this.onMessage('WAD files not found in cache')\n            onCacheMiss()\n        }\n        this.onMessage('Loading WAD files from cache...')\n        const that = this\n        this.openLocalCache((objectStore) => {\n            const request1 = objectStore.get('wad0')\n            request1.onerror = _onerror\n            request1.onsuccess = function () {\n                if (request1.result === undefined) {\n                    _onerror()\n                    return\n                }\n                // console.log('First WAD file loaded from cache after ' + ((new Date().getTime() - that.startTime.getTime()) / 1000));\n                that.wad0File = new WadFile()\n                for (let prop in request1.result) { // class info are runtime info and not stored in cache => use copy constructor\n                    if (request1.result.hasOwnProperty(prop)) {\n                        that.wad0File[prop] = request1.result[prop]\n                    }\n                }\n                const request2 = objectStore.get('wad1')\n                request2.onerror = _onerror\n                request2.onsuccess = function () {\n                    if (request2.result === undefined) {\n                        _onerror()\n                        return\n                    }\n                    that.wad1File = new WadFile()\n                    for (let prop in request2.result) { // class info are runtime info and not stored in cache => use copy constructor\n                        if (request2.result.hasOwnProperty(prop)) {\n                            that.wad1File[prop] = request2.result[prop]\n                        }\n                    }\n                    console.log('WAD files loaded from cache after ' + ((new Date().getTime() - that.startTime.getTime()) / 1000))\n                    that.startLoadingProcess()\n                }\n            }\n        })\n    }\n\n    /**\n     * Private helper method, which combines file loading and waits for them to become ready before continuing\n     * @param wad0Url Url to parse the LegoRR0.wad file from\n     * @param wad1Url Url to parse the LegoRR1.wad file from\n     */\n    loadWadFiles(wad0Url: string, wad1Url: string) {\n        const that = this\n        Promise.all([this.loadWadFile(wad0Url), this.loadWadFile(wad1Url)]).then(wadFiles => {\n            that.wad0File = wadFiles[0] as WadFile\n            that.wad1File = wadFiles[1] as WadFile\n            this.openLocalCache((objectStore) => {\n                objectStore.put(that.wad0File, 'wad0')\n                objectStore.put(that.wad1File, 'wad1')\n            })\n            this.startLoadingProcess()\n        })\n    }\n\n    /**\n     * Read WAD file as binary blob from the given URL and parse it on success\n     * @param url the url to the WAD file, can be local file url (file://...) too\n     */\n    loadWadFile(url: string) {\n        return new Promise(resolve => {\n            console.log('Loading WAD file from ' + url)\n            fetch(url).then((response) => {\n                if (response.ok) {\n                    response.arrayBuffer().then((buffer) => {\n                        const wadFile = new WadFile()\n                        wadFile.parseWadFile(buffer)\n                        resolve(wadFile)\n                    })\n                }\n            }).catch((e) => console.error(e))\n        })\n    }\n\n    openLocalCache(onopen: (IDBObjectStore) => void) {\n        const request: IDBOpenDBRequest = indexedDB.open(WAD_CACHE_DB_NAME)\n        request.onupgradeneeded = function () {\n            const db = request.result\n            if (db.objectStoreNames.contains('wadfiles')) {\n                db.deleteObjectStore('wadfiles')\n            }\n            db.createObjectStore('wadfiles')\n        }\n        request.onsuccess = function () {\n            const db = request.result\n            const transaction = db.transaction(['wadfiles'], 'readwrite')\n            const objectStore = transaction.objectStore('wadfiles')\n            onopen(objectStore)\n        }\n    }\n\n    /**\n     * Load essential files, to begin the chain of asset loading\n     */\n    startLoadingProcess() {\n        this.startTime = new Date()\n        this.assetsFromCfgByName = new Map()\n        this.onMessage('Loading configuration...')\n        const cfg = CfgFileParser.parse(this.wad1File.getEntryData('Lego.cfg'))\n        this.registerAllAssets(cfg)\n        this.onMessage('Loading initial assets...')\n        Promise.all([\n            new Promise<void>((resolve) => {\n                const name = iGet(cfg, 'Main', 'LoadScreen') // loading screen image\n                this.loadWadImageAsset(name, (imgData) => {\n                    this.onAssetLoaded(0, name, imgData)\n                    resolve()\n                })\n            }),\n            new Promise<void>((resolve) => {\n                const name = iGet(cfg, 'Main', 'ProgressBar') // loading bar container image\n                this.loadWadImageAsset(name, (imgData) => {\n                    this.onAssetLoaded(0, name, imgData)\n                    resolve()\n                })\n            }),\n            new Promise<void>((resolve) => {\n                const name = iGet(cfg, 'Pointers', 'Pointer_Standard')\n                this.loadAlphaImageAsset(name, (imgData) => {\n                    this.onAssetLoaded(0, name, imgData)\n                    resolve()\n                })\n            }),\n            new Promise<void>((resolve) => {\n                const name = 'Interface/Fonts/Font5_Hi.bmp'\n                this.loadFontImageAsset(name, (imgData) => {\n                    this.onAssetLoaded(0, name, imgData)\n                    resolve()\n                })\n            }),\n        ]).then(() => {\n            this.onMessage('Start loading assets...')\n            this.totalResources = this.assetsFromCfgByName.size\n            this.onInitialLoad(this.totalResources, cfg)\n            this.assetIndex = 0\n            this.loadAssetsParallel()\n        })\n    }\n\n}\n","export const DEV_MODE = process.env.WEBPACK_MODE === 'development'\nexport const WAD_CACHE_DB_NAME = 'RockRaidersWeb'\nexport const JOB_SCHEDULE_INTERVAL = 1000 // milliseconds\nexport const CHECK_CLEARRUBBLE_INTERVAL = 5000 // milliseconds\nexport const JOB_ACTION_RANGE = 5\nexport const CHECK_SPANW_RAIDER_TIMER = 1000 // milliseconds\nexport const MAX_RAIDER_BASE = 12\nexport const MAX_RAIDER_REQUEST = 9\nexport const ADDITIONAL_RAIDER_PER_SUPPORT = 10\nexport const UPDATE_OXYGEN_TIMER = 5000 // milliseconds\nexport const PANEL_ANIMATION_MULTIPLIER = 3\nexport const HEIGHT_MULTIPLER = 0.1\nexport const SEQUENCE_TEXTURE_FRAMERATE = 5\n\n// native constants (do not change)\n\nexport const SPRITE_RESOLUTION_WIDTH = 640\nexport const SPRITE_RESOLUTION_HEIGHT = 480\nexport const TILESIZE = 40\nexport const NATIVE_FRAMERATE = 30\n","import { BaseConfig } from './BaseConfig'\n\nexport class BuildingEntityStats extends BaseConfig {\n\n    Levels: number = 0\n    SelfPowered: boolean = false\n    PowerBuilding: boolean = false\n    PickSphere: number = 0\n    TrainDynamite: boolean[] = null\n    CostOre: number = 0\n    CostCrystal: number = 0\n    OxygenCoef: number = 0\n\n}\n","import { BaseConfig } from './BaseConfig'\n\nexport class MovableEntityStats extends BaseConfig {\n\n    RouteSpeed: number[] = []\n    RubbleCoef: number = 1\n    PathCoef: number = 1\n\n}\n","// noinspection JSUnusedGlobalSymbols\n\nimport { BaseConfig } from './BaseConfig'\nimport { BuildingEntityStats } from './BuildingEntityStats'\nimport { MovableEntityStats } from './MovableEntityStats'\n\nexport class GameStatsCfg extends BaseConfig {\n\n    Pilot = new class PilotStats extends BaseConfig {\n        Levels: number = 4\n        RouteSpeed: number[] = [1.10, 1.10, 1.10, 1.10]\n        SoilDrillTime: number[] = [4.0, 4.0, 4.0, 4.0] // Time in seconds to drill through the rock.\n        LooseDrillTime: number[] = [4.0, 4.0, 4.0, 4.0]\n        MedDrillTime: number[] = [8.0, 8.0, 8.0, 8.0]\n        HardDrillTime: number[] = [0.0, 0.0, 0.0, 0.0] // Zero means the object cannot drill the rock type\n        SeamDrillTime: number[] = [10.0, 10.0, 10.0, 10.0] // Either or both ore or crystal.\n        UpgradeTime: number[] = [30.0, 45.0, 60.0, 60.0] // Last entry is ignored as it can never upgrade from that.\n        CollRadius: number = 5.0\n        CollHeight: number = 12.0\n        TrackDist: number = 40.0\n        SingleWidthDig: boolean[] = [true, true, true, true]\n        PickSphere: number = 10.0\n        RepairValue: number[] = [10.0, 15.0, 20.0, 25.0]\n        SurveyRadius: number[] = [3, 3, 3, 3]\n        Drillsound: string = 'SND_pilotdrill'\n        Drillfadesound: string = 'SND_pilotdrillfade'\n        RestPercent: number = 60.0\n        EnergyDecayRate: number = 0.25\n        CanClearRubble: boolean = true\n        NumOfToolsCanCarry: number[] = [2, 3, 4, 5]\n        CrossLand: boolean = true\n        RubbleCoef: number = 0.5\n        PathCoef: number = 2.0\n        RouteAvoidance: boolean = true\n        UseLegoManTeleporter: boolean = true\n        AwarenessRange: number = 10.0\n        OxygenCoef: number = -1.0\n        CanStrafe: boolean = true\n        EnterToolStore: boolean = true\n        ShowHealthBar: boolean = true\n    }\n\n    RockMonster = new class RockMonsterStats extends BaseConfig {\n        Levels: number = 1\n        RouteSpeed: number = 0.8\n        TrackDist: number = 50.0\n        CollRadius: number = 10.0\n        CollHeight: number = 22.0\n        AlertRadius: number = 60.0\n        HealthDecayRate: number = 0.6 // Reduce health by 'n' every second.\n        PickSphere: number = 22.0\n        RepairValue: number = -10.0\n        CanScare: boolean = true\n        RestPercent: number = 20.0\n        CarryMinHealth: number = 15.0\n        PainThreshold: number = 20.0\n        StampRadius: number = 80.0\n        AttackRadius: number = 160.0\n        CanSteal: boolean = true\n        CrossLand: boolean = true\n        RubbleCoef: number = 1.5\n        GrabMinifigure: boolean = true\n        RouteAvoidance: boolean = true\n        BumpDamage: boolean = true\n        AttackPaths: boolean = true\n        SplitOnZeroHealth: boolean = true\n        CanBeHitByFence: boolean = true\n        Capacity: number = 6 // How many crystals it can eat\n        PathCoef: number = 0.5\n        // Statistics about the weapons\n        CanBeShotAt: boolean = true // Can this monster be shot at by lego men\n        CanFreeze: boolean = true // Can this object be frozen\n        FreezerTime: number = 25.0 // Time this object is frozen for\n        FreezerDamage: number = 5.0 // Damage that freezing causes\n        CanLaser: boolean = true // Can this object be lasered\n        LaserDamage: number = 110.0 // Damage sustained by a laser\n        CanPush: boolean = true // Can this object be pusher'ed\n        PusherDist: number = 20.0 // Distance the object is pushed 40=1 block\n        PusherDamage: number = 2.0 // Damage that the pusher gun causes\n        WakeRadius: number = 25.0\n        ScaredByBigBangs: boolean = true\n        RemoveReinforcement: boolean = true\n        ShowHealthBar: boolean = true\n    }\n\n    SmallSpider = new class SmallSpiderStats extends MovableEntityStats {\n        Levels: number = 1\n        RouteSpeed: number[] = [2.0]\n        TrackDist: number = 10.0\n        CollRadius: number = 0.0\n        CollHeight: number = 0.0\n        PickSphere: number = 6.0\n        AlertRadius: number = 40.0\n        RandomMove: boolean = true\n        RandomEnterWall: boolean = true\n        CauseSlip: boolean = true\n        CrossLand: boolean = true\n        RubbleCoef: number = 0.2\n        DontShowDamage: boolean = true\n        DontShowOnRadar: boolean = true\n        ScaredByBigBangs: boolean = true\n    }\n\n    Bat = new class BatStats extends MovableEntityStats {\n        Levels: number = 1\n        RouteSpeed: number[] = [1.0]\n        TrackDist: number = 10.0\n        CollRadius: number = 10.0\n        AlertRadius: number = 10.0 // Alert radius (causes attack mode)\n        RandomMove: boolean = true // Random movement\n        randomMoveTime: number = 10\n        CanScare: boolean = true // Scare away the player\n        ScaredByBigBangs: boolean = true\n        // Flock parameters.\n        Flocks: boolean = true // Set this to create a flock for this object.\n        FlocksDebug: boolean = false // If this is set the actual lego objects animation is displayed at the \"lego\" position.\n        FlocksSmooth: boolean = true // Smooths out the orientation of the flocks elements.\n        FlocksSize: number = 8 // Number of the given item in the flock.  (Default 5)\n        FlocksTurn: number = 0.6 // Turning speed of the bat. (0.6 default)\n        FlocksSpeed: number = 1.5 // Velocity of the flock. (2.0 default)\n        FlocksTightness: number = 0.8 // Tightness of the flock. (2.0 default)\n        FlocksGoalUpdate: number = 2.0 // How often the flocks goal is updated (25 per second).  (2.0 default)\n        FlocksRandomness: number = 6.0 // Randomness of goals. (2.0 default)\n        FlocksHeight: number = 22.0 // Height above the ground of the flock elements.  (30.0 default)\n        CrossLand: boolean = true\n        CrossWater: boolean = true\n        CrossLava: boolean = true\n        DontShowDamage: boolean = true\n    }\n\n    TinyRM = new class TinyRMStats extends BaseConfig {\n        Levels: number = 1\n        RouteSpeed: number = 1.2\n        TrackDist: number = 10.0\n        CollRadius: number = 0.0\n        CollHeight: number = 5.0\n        PickSphere: number = 6.0\n        AlertRadius: number = 40.0\n        CrossLand: boolean = true\n        RubbleCoef: number = 1.5\n        DontShowDamage: boolean = true\n        DontShowOnRadar: boolean = true\n        ScaredByPlayer: boolean = true\n        ScaredByBigBangs: boolean = true\n    }\n\n    TinyIM = new class TinyIMStats extends BaseConfig {\n        Levels: number = 1\n        RouteSpeed: number = 1.2\n        TrackDist: number = 10.0\n        CollRadius: number = 0.0\n        CollHeight: number = 5.0\n        PickSphere: number = 6.0\n        AlertRadius: number = 40.0\n        CrossLand: boolean = true\n        RubbleCoef: number = 1.5\n        DontShowDamage: boolean = true\n        DontShowOnRadar: boolean = true\n        ScaredByPlayer: boolean = true\n        ScaredByBigBangs: boolean = true\n    }\n\n    Slug = new class SlugStats extends BaseConfig {\n        Levels: number = 1\n        RouteSpeed: number = 0.3\n        TrackDist: number = 10.0\n        CollRadius: number = 3.0\n        CollHeight: number = 7.0\n        PickSphere: number = 12.0\n        AlertRadius: number = 40.0\n        CrossLand: boolean = true\n        RubbleCoef: number = 0.3\n        UseHoles: boolean = true\n        DrainPower: boolean = true\n        AttackRadius: number = 280.0\n        PainThreshold: number = 50.0\n        CanBeShotAt: boolean = true\n        CanLaser: boolean = true\n        LaserDamage: number = 5.0\n        CanPush: boolean = true // Can this object be pusher'ed\n        PusherDist: number = 60.0 // Distance the object is pushed\n        PusherDamage: number = 5.0 // Damage that the pusher gun causes\n        ShowHealthBar: boolean = true\n        ScaredByBigBangs: boolean = true\n    }\n\n    LavaMonster = new class LavaMonsterStats extends BaseConfig {\n        Levels: number = 1\n        RouteSpeed: number = 0.8\n        TrackDist: number = 50.0\n        CollRadius: number = 10.0\n        CollHeight: number = 22.0\n        AlertRadius: number = 60.0\n        HealthDecayRate: number = 0.6 // Reduce health by 'n' every second.\n        PickSphere: number = 22.0\n        RepairValue: number = -10.0\n        CanScare: boolean = true\n        RestPercent: number = 20.0\n        CarryMinHealth: number = 15.0\n        PainThreshold: number = 20.0\n        StampRadius: number = 80.0\n        AttackRadius: number = 160.0\n        CanSteal: boolean = true\n        CrossLand: boolean = true\n        RubbleCoef: number = 1.5\n        GrabMinifigure: boolean = true\n        Capacity: number = 7 // How many crystals it can eat\n        RouteAvoidance: boolean = true\n        BumpDamage: boolean = true\n        AttackPaths: boolean = true\n        SplitOnZeroHealth: boolean = true\n        CanBeHitByFence: boolean = true\n        PathCoef: number = 0.5\n        CrossLava: boolean = true\n        // Statistics about the weapons\n        CanBeShotAt: boolean = true // Can this monster be shot at by lego men\n        CanFreeze: boolean = true // Can this object be frozen\n        FreezerTime: number = 75.0 // Time this object is frozen for\n        FreezerDamage: number = 40.0 // Damage that freezing causes\n        CanLaser: boolean = true // Can this object be lasered\n        LaserDamage: number = 1.0 // Damage sustained by a laser\n        CanPush: boolean = true // Can this object be pusher'ed\n        PusherDist: number = 60.0 // Distance the object is pushed\n        PusherDamage: number = 5.0 // Damage that the pusher gun causes\n        WakeRadius: number = 25.0\n        ScaredByBigBangs: boolean = true\n        RemoveReinforcement: boolean = true\n        ShowHealthBar: boolean = true\n    }\n\n    IceMonster = new class IceMonsterStats extends BaseConfig {\n        Levels: number = 1\n        RouteSpeed: number = 0.8\n        TrackDist: number = 50.0\n        CollRadius: number = 10.0\n        CollHeight: number = 22.0\n        AlertRadius: number = 60.0\n        HealthDecayRate: number = 0.6 // Reduce health by 'n' every second.\n        PickSphere: number = 22.0\n        RepairValue: number = -10.0\n        CanScare: boolean = true\n        RestPercent: number = 20.0\n        CarryMinHealth: number = 15.0\n        PainThreshold: number = 20.0\n        StampRadius: number = 80.0\n        AttackRadius: number = 120.0\n        CanSteal: boolean = true\n        CrossLand: boolean = true\n        RubbleCoef: number = 1.5\n        GrabMinifigure: boolean = true\n        Capacity: number = 5 // How many crystals it can eat\n        RouteAvoidance: boolean = true\n        BumpDamage: boolean = true\n        AttackPaths: boolean = true\n        SplitOnZeroHealth: boolean = true\n        CanBeHitByFence: boolean = true\n        PathCoef: number = 0.5\n        // Statistics about the weapons\n        CanBeShotAt: boolean = true // Can this monster be shot at by lego men\n        CanFreeze: boolean = false // Can this object be frozen\n        FreezerTime: number = 0.0 // Time this object is frozen for\n        FreezerDamage: number = 0.0 // Damage that freezing causes\n        CanLaser: boolean = true // Can this object be lasered\n        LaserDamage: number = 110.0 // Damage sustained by a laser\n        CanPush: boolean = true // Can this object be pusher'ed\n        PusherDist: number = 60.0 // Distance the object is pushed\n        PusherDamage: number = 2.0 // Damage that the pusher gun causes\n        WakeRadius: number = 25.0\n        ScaredByBigBangs: boolean = true\n        RemoveReinforcement: boolean = true\n        ShowHealthBar: boolean = true\n    }\n\n    Hoverboard = new class HoverboardStats extends BaseConfig { // [Carry][Scan][Speed][Drill]    (No drill or carry)\n        Levels: number = 8\n        RouteSpeed: number[] = [3.0, 3.0, 5.0, 5.0, 3.0, 3.0, 5.0, 5.0]\n        SurveyRadius: number[] = [0, 0, 0, 0, 4, 4, 4, 4]\n        TrackDist: number = 50.0\n        CollRadius: number = 8.0\n        CollHeight: number = 12.0\n        PickSphere: number = 16.0\n        CanBeDriven: boolean = true\n        CrossLand: boolean = true\n        UseSmallTeleporter: boolean = true\n        CanStrafe: boolean = true\n        CostCrystal: number = 1\n        UpgradeCostOre: number[] = [0, 5, 10, 0]\n        UpgradeCostStuds: number[] = [0, 1, 2, 0]\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_SmallEngine'\n    }\n\n    SmallHeli = new class SmallHeliStats extends BaseConfig {\n        Levels: number = 1\n        RouteSpeed: number = 2.50\n        TrackDist: number = 50.0\n        CollRadius: number = 10.0\n        CollHeight: number = 12.0\n        PickSphere: number = 20.0\n        CanBeDriven: boolean = true\n        CrossLand: boolean = true\n        CrossWater: boolean = true\n        CrossLava: boolean = true\n        UseSmallTeleporter: boolean = true\n        CanStrafe: boolean = true\n        CostCrystal: number = 3\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_HeliEngine'\n    }\n\n    Smallmlp = new class SmallmlpStats extends BaseConfig {\n        Levels: number = 4\n        RouteSpeed: number[] = [0.50, 0.50, 0.50, 0.50]\n        TrackDist: number = 50.0\n        CollRadius: number = 12.0\n        CollHeight: number = 22.0\n        PickSphere: number = 26.0\n        CanBeDriven: boolean = true\n        CrossLand: boolean = true\n        UseSmallTeleporter: boolean = true\n        Tracker: boolean = true\n        CanDoubleSelect: boolean = true\n        CostCrystal: number = 3\n        UpgradeCostOre: number[] = [0, 0, 0, 10]\n        UpgradeCostStuds: number[] = [0, 0, 0, 2]\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_MediumEngine'\n    }\n\n    SmallCat = new class SmallCatStats extends BaseConfig {\n        Levels: number = 3\n        RouteSpeed: number[] = [2.0, 3.0, 4.0]\n        TrackDist: number = 50.0\n        CollRadius: number = 12.0\n        CollHeight: number = 12.0\n        PickSphere: number = 26.0\n        CrossWater: boolean = true\n        CanBeDriven: boolean = true\n        UseWaterTeleporter: boolean = true\n        CostCrystal: number = 2\n        MaxCarry: number[] = [1, 1, 1]\n        GetInAtLand: boolean = true\n        GetOutAtLand: boolean = true\n        TakeCarryingDrivers: boolean = true\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_Catamaran'\n    }\n\n    SmallDigger = new class SmallDiggerStats extends BaseConfig {\n        Levels: number = 8\n        RouteSpeed: number[] = [2.0, 2.0, 4.0, 4.0, 2.0, 2.0, 4.0, 4.0]\n        SoilDrillTime: number[] = [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]\n        LooseDrillTime: number[] = [2.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0, 1.0]\n        MedDrillTime: number[] = [4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0]\n        HardDrillTime: number[] = [180.0, 150.0, 180.0, 150.0, 180.0, 150.0, 180.0, 150.0]\n        SeamDrillTime: number[] = [8.0, 4.0, 8.0, 4.0, 8.0, 4.0, 8.0, 4.0]\n        MaxCarry: number[] = [0, 0, 0, 0, 0, 0, 0, 0]\n        SurveyRadius: number[] = [0, 0, 0, 0, 4, 4, 4, 4]\n        TrackDist: number = 50.0\n        CollRadius: number = 10.0\n        CollHeight: number = 12.0\n        PickSphere: number = 20.0\n        CanBeDriven: boolean = true\n        CrossLand: boolean = true\n        RouteAvoidance: boolean = true\n        UseSmallTeleporter: boolean = true\n        VehicleCanBeCarried: boolean = true\n        CostCrystal: number = 1\n        UpgradeCostOre: number[] = [0, 5, 10, 10]\n        UpgradeCostStuds: number[] = [0, 1, 2, 2]\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_SmallEngine'\n    }\n\n    SmallTruck = new class SmallTruckStats extends BaseConfig { // [Carry][Scan][Speed][Drill]    (No drill)\n        Levels: number = 16\n        RouteSpeed: number[] = [2.0, 2.0, 3.0, 3.0, 2.0, 2.0, 3.0, 3.0, 2.0, 2.0, 3.0, 3.0, 2.0, 2.0, 3.0, 3.0]\n        MaxCarry: number[] = [3, 3, 3, 3, 3, 3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6]\n        CarryStart: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3]\n        SurveyRadius: number[] = [0, 0, 0, 0, 4, 4, 4, 4, 0, 0, 0, 0, 4, 4, 4, 4]\n        TrackDist: number = 50.0\n        CollRadius: number = 10.0\n        CollHeight: number = 12.0\n        PickSphere: number = 20.0\n        CanBeDriven: boolean = true\n        CrossLand: boolean = true\n        UseSmallTeleporter: boolean = true\n        VehicleCanBeCarried: boolean = true\n        CostCrystal: number = 2\n        EnterToolStore: boolean = true\n        UpgradeCostOre: number[] = [5, 5, 10, 0]\n        UpgradeCostStuds: number[] = [1, 1, 2, 0]\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_SmallEngine'\n    }\n\n    Bulldozer = new class BulldozerStats extends BaseConfig { // [Carry][Scan][Speed][Drill]    (No drill)\n        Levels: number = 16\n        RouteSpeed: number[] = [0.5, 0.5, 0.8, 0.8, 0.5, 0.5, 0.8, 0.8, 0.5, 0.5, 0.8, 0.8, 0.5, 0.5, 0.8, 0.8]\n        MaxCarry: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]\n        SurveyRadius: number[] = [0, 0, 0, 0, 5, 5, 5, 5, 0, 0, 0, 0, 5, 5, 5, 5]\n        TrackDist: number = 80.0\n        CollRadius: number = 18.0\n        CollHeight: number = 26.0\n        PickSphere: number = 40.0\n        CrossLand: boolean = true\n        CanClearRubble: boolean = true\n        UseBigTeleporter: boolean = true\n        CanBeDriven: boolean = true\n        CostCrystal: number = 4\n        InvisibleDriver: boolean = true\n        UpgradeCostOre: number[] = [5, 5, 20, 0]\n        UpgradeCostStuds: number[] = [1, 1, 4, 0]\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_MediumEngine'\n    }\n\n    WalkerDigger = new class WalkerDiggerStats extends BaseConfig { // [Carry][Scan][Speed][Drill]    (No carry)\n        Levels: number = 8\n        RouteSpeed: number[] = [0.50, 0.50, 0.80, 0.80, 0.50, 0.50, 0.80, 0.80]\n        SoilDrillTime: number[] = [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]\n        LooseDrillTime: number[] = [0.80, 0.40, 0.80, 0.40, 0.80, 0.40, 0.80, 0.40]\n        MedDrillTime: number[] = [2.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0, 1.0]\n        HardDrillTime: number[] = [180.0, 150.0, 180.0, 150.0, 180.0, 150.0, 180.0, 150.0]\n        SeamDrillTime: number[] = [4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0]\n        SurveyRadius: number[] = [0, 0, 0, 0, 5, 5, 5, 5]\n        TrackDist: number = 80.0\n        CollRadius: number = 15.0\n        CollHeight: number = 33.0\n        PickSphere: number = 35.0\n        CrossLand: boolean = true\n        UseBigTeleporter: boolean = true\n        CostCrystal: number = 3\n        CanBeDriven: boolean = true\n        InvisibleDriver: boolean = true\n        CanStrafe: boolean = true\n        DrillSound: string = 'DrillSFX_Grinder'\n        DrillFadeSound: string = 'DrillSFX_GrinderFade'\n        UpgradeCostOre: number[] = [0, 5, 20, 20]\n        UpgradeCostStuds: number[] = [0, 1, 4, 4]\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_MediumEngine'\n    }\n\n    LargeDigger = new class LargeDiggerStats extends BaseConfig { // [Carry][Scan][Speed][Drill]    (No carry or scan)\n        Levels: number = 4\n        RouteSpeed: number[] = [0.30, 0.30, 0.60, 0.60]\n        SoilDrillTime: number[] = [1.0, 1.0, 1.0, 1.0]\n        LooseDrillTime: number[] = [0.40, 0.20, 0.40, 0.20]\n        MedDrillTime: number[] = [0.80, 0.40, 0.80, 0.40]\n        HardDrillTime: number[] = [1.0, 0.50, 1.0, 0.50]\n        SeamDrillTime: number[] = [1.0, 0.50, 1.0, 0.50]\n        TrackDist: number = 80.0\n        CollRadius: number = 22.0\n        CollHeight: number = 30.0\n        PickSphere: number = 50.0\n        CrossLand: boolean = true\n        UseBigTeleporter: boolean = true\n        Tracker: boolean = true\n        CanDoubleSelect: boolean = true\n        CanBeDriven: boolean = true\n        CostCrystal: number = 5\n        InvisibleDriver: boolean = true\n        DrillSound: string = 'DrillSFX_Grinder'\n        DrillFadeSound: string = 'DrillSFX_GrinderFade'\n        UpgradeCostOre: number[] = [0, 0, 15, 20]\n        UpgradeCostStuds: number[] = [0, 0, 3, 4]\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_LargeEngine'\n    }\n\n    LargeCat = new class LargeCatStats extends BaseConfig { // [Carry][Scan][Speed][Drill] (No carry) (Drill???)\n        Levels: number = 1\n        RouteSpeed: number = 1.50\n        SurveyRadius: number = 0\n        TrackDist: number = 80.0\n        CollRadius: number = 22.0\n        CollHeight: number = 25.0\n        PickSphere: number = 50.0\n        CanBeDriven: boolean = true\n        CrossWater: boolean = true\n        UseWaterTeleporter: boolean = true\n        ClassAsLarge: boolean = true\n        CarryVehicles: boolean = true\n        CostCrystal: number = 4\n        EngineSound: string = 'SND_Catamaran'\n        ShowHealthBar: boolean = true\n    }\n\n    LargeHeli = new class LargeHeliStats extends BaseConfig {\n        Levels: number = 3\n        RouteSpeed: number[] = [0.30, 0.40, 0.50]\n        TrackDist: number = 80.0\n        CollRadius: number = 0.0\n        CollHeight: number = 0.0\n        PickSphere: number = 20.0\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_HeliEngine'\n    }\n\n    LargeMLP = new class LargeMLPStats extends BaseConfig { // [Carry][Scan][Speed][Drill]    (No carry or speed) (Doesn't have drills, just lasers)\n        Levels: number = 8\n        RouteSpeed: number[] = [0.40, 0.40, 0.40, 0.40, 0.40, 0.40, 0.40, 0.40]\n        SurveyRadius: number[] = [0, 0, 0, 0, 5, 5, 5, 5]\n        TrackDist: number = 80.0\n        CollRadius: number = 20.0\n        CollHeight: number = 24.0\n        PickSphere: number = 47.0\n        CrossLand: boolean = true\n        UseBigTeleporter: boolean = true\n        Tracker: boolean = true\n        CanDoubleSelect: boolean = true\n        CostCrystal: number = 4\n        CanBeDriven: boolean = true\n        InvisibleDriver: boolean = true\n        UpgradeCostOre: number[] = [0, 5, 0, 25]\n        UpgradeCostStuds: number[] = [0, 1, 0, 5]\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_LargeEngine'\n    }\n\n    Barracks = new class BarracksStats extends BuildingEntityStats {\n        Levels: number = 3\n        TrackDist: number = 50.0\n        CollHeight: number = 23.0\n        CollRadius: number = 15.0\n        PickSphere: number = 30.0\n        CostOre: number = 15\n        CostRefinedOre: number = 3\n        CostCrystal: number = 3\n        SnaxULike: boolean = true\n        TrainDriver: boolean[] = [true, true, true]\n        CrystalDrain: number[] = [1, 1, 1]\n        DamageCausesCallToArms: boolean = true\n        OxygenCoef: number = 10.0\n        EngineSound: string = 'SND_BuildingHum'\n        ShowHealthBar: boolean = true\n    }\n\n    Powerstation = new class PowerstationStats extends BuildingEntityStats {\n        Levels: number = 2\n        TrackDist: number = 80.0\n        ProcessCrystal: boolean = true\n        CollHeight: number = 31.0\n        CollRadius: number = 15.0\n        PickSphere: number = 32.0\n        CostOre: number = 12\n        CostRefinedOre: number = 3\n        CostCrystal: number = 2\n        PowerBuilding: boolean = true\n        DamageCausesCallToArms: boolean = true\n        EngineSound: string = 'SND_PowerBuildingHum'\n        ShowHealthBar: boolean = true\n    }\n\n    OreRefinery = new class OreRefineryStats extends BuildingEntityStats {\n        Levels: number = 4\n        TrackDist: number = 60.0\n        ProcessOre: boolean = true\n        CollHeight: number = 16.0\n        CollRadius: number = 15.0\n        PickSphere: number = 30.0\n        CostOre: number = 20\n        CostRefinedOre: number = 4\n        CostCrystal: number = 3\n        CrystalDrain: number[] = [1, 1, 1, 1]\n        DamageCausesCallToArms: boolean = true\n        MaxCarry: number[] = [5, 4, 3, 2]\n        EngineSound: string = 'SND_BuildingHum'\n        ShowHealthBar: boolean = true\n    }\n\n    TeleportPad = new class TeleportPadStats extends BuildingEntityStats {\n        Levels: number = 3\n        TrackDist: number = 60.0\n        SmallTeleporter: boolean = true\n        ManTeleporter: boolean = true\n        CollHeight: number = 20.0\n        CollRadius: number = 15.0\n        PickSphere: number = 30.0\n        CostOre: number = 8\n        CostRefinedOre: number = 2\n        CrystalDrain: number[] = [1, 1, 1]\n        DamageCausesCallToArms: boolean = true\n        TrainPilot: boolean[] = [true, true, true]\n        EngineSound: string = 'SND_BuildingHum'\n        ShowHealthBar: boolean = true\n    }\n\n    TeleportBIG = new class TeleportBIGStats extends BuildingEntityStats {\n        Levels: number = 2\n        TrackDist: number = 50.0\n        BigTeleporter: boolean = true\n        CollHeight: number = 17.0\n        CollRadius: number = 15.0\n        PickSphere: number = 30.0\n        CostOre: number = 20\n        CostRefinedOre: number = 4\n        CostCrystal: number = 2\n        CrystalDrain: number[] = [1, 1]\n        DamageCausesCallToArms: boolean = true\n        EngineSound: string = 'SND_BuildingHum'\n        ShowHealthBar: boolean = true\n    }\n\n    Docks = new class DocksStats extends BuildingEntityStats {\n        Levels: number = 1\n        TrackDist: number = 60.0\n        CollHeight: number = 20.0\n        CollRadius: number = 15.0\n        PickSphere: number = 30.0\n        CostOre: number = 8\n        CostRefinedOre: number = 2\n        CostCrystal: number = 1\n        WaterEntrances: number = 1\n        WaterTeleporter: boolean = true\n        CrystalDrain: number = 1\n        DamageCausesCallToArms: boolean = true\n        TrainSailor: boolean = true\n        EngineSound: string = 'SND_BuildingHum'\n        ShowHealthBar: boolean = true\n    }\n\n    Toolstation = new class ToolstationStats extends BuildingEntityStats {\n        Levels: number = 3\n        TrackDist: number = 50.0\n        ManTeleporter: boolean = true\n        CollHeight: number = 16.0\n        CollRadius: number = 15.0\n        PickSphere: number = 30.0\n        ToolStore: boolean = true\n        StoreObjects: boolean = true\n        SelfPowered: boolean = true\n        DamageCausesCallToArms: boolean = true\n        TrainDynamite: boolean[] = [false, false, true]\n        FunctionCoef: number[] = [1.0, 1.0, 1.0] // Function here is how long it takes to upgrade a minfigure\n        ShowHealthBar: boolean = true\n    }\n\n    GunStation = new class GunStationStats extends BuildingEntityStats {\n        Levels: number = 2\n        TrackDist: number = 60.0\n        CollHeight: number = 33.0\n        CollRadius: number = 15.0\n        PickSphere: number = 30.0\n        CostOre: number = 15\n        CostRefinedOre: number = 3\n        CostCrystal: number = 1\n        Tracker: boolean = true\n        CanDoubleSelect: boolean = true\n        CrystalDrain: number[] = [1, 1]\n        DamageCausesCallToArms: boolean = true\n        FunctionCoef: number[] = [1.0, 0.5] // How much of a crystal it drains every time it fires...\n        EngineSound: string = 'SND_BuildingHum'\n        ShowHealthBar: boolean = true\n    }\n\n    Geodome = new class GeodomeStats extends BuildingEntityStats {\n        Levels: number = 3\n        TrackDist: number = 50.0\n        CollHeight: number = 20.0\n        CollRadius: number = 15.0\n        PickSphere: number = 30.0\n        CostOre: number = 15\n        CostRefinedOre: number = 3\n        CostCrystal: number = 3\n        SurveyRadius: number[] = [6, 8, 12]\n        CrystalDrain: number[] = [1, 1, 1]\n        DamageCausesCallToArms: boolean = true\n        TrainScanner: boolean[] = [true, true, true]\n        EngineSound: string = 'SND_BuildingHum'\n        ShowHealthBar: boolean = true\n    }\n\n    Upgrade = new class UpgradeStats extends BuildingEntityStats {\n        Levels: number = 2\n        TrackDist: number = 80.0\n        CollHeight: number = 40.0\n        CollRadius: number = 15.0\n        PickSphere: number = 32.0\n        CostOre: number = 20\n        CostRefinedOre: number = 4\n        CostCrystal: number = 3\n        UpgradeBuilding: boolean = true\n        CrystalDrain: number[] = [1, 1]\n        DamageCausesCallToArms: boolean = true\n        FunctionCoef: number[] = [0.8, 1.6] // Function is speed of upgrade animation.\n        TrainRepair: boolean[] = [true, true]\n        EngineSound: string = 'SND_BuildingHum'\n        ShowHealthBar: boolean = true\n    }\n\n    PowerCrystal = new class PowerCrystalStats extends BaseConfig {\n        Levels: number = 1\n        TrackDist: number = 20.0\n        CollHeight: number = 2.0\n        PickSphere: number = 6.0\n    }\n\n    ProcessedOre = new class ProcessedOreStats extends BaseConfig {\n        Levels: number = 1\n        TrackDist: number = 20.0\n        CollHeight: number = 2.0\n        PickSphere: number = 8.0\n    }\n\n    Ore = new class OreStats extends BaseConfig {\n        Levels: number = 1\n        TrackDist: number = 20.0\n        CollHeight: number = 2.0\n        PickSphere: number = 6.0\n    }\n\n    Boulder = new class BoulderStats extends BaseConfig {\n        Levels: number = 1\n        CollRadius: number = 2.0\n    }\n\n    Pusher = new class PusherStats extends BaseConfig {\n        Levels: number = 1\n        CollRadius: number = 1.0\n    }\n\n    Freezer = new class FreezerStats extends BaseConfig {\n        Levels: number = 1\n        CollRadius: number = 1.0\n    }\n\n    LaserShot = new class LaserShotStats extends BaseConfig {\n        Levels: number = 1\n        ColRadius: number = 1.0\n    }\n\n    ElectricFence = new class ElectricFenceStats extends BaseConfig {\n        Levels: number = 1\n        TrackDist: number = 50.0\n        CollRadius: number = 5.0\n        CollHeight: number = 18.0\n        PickSphere: number = 20.0\n        DamageCausesCallToArms: boolean = true\n    }\n\n    Path = new class PathStats extends BaseConfig {\n        Levels: number = 1\n        CostOre: number = 2\n        CostRefinedOre: number = 1\n    }\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n    assignValue(objKey, lCfgKeyName, cfgValue): boolean {\n        if (objKey.toLowerCase() === lCfgKeyName) {\n            BaseConfig.setFromCfg(this[objKey], cfgValue)\n            return true\n        }\n    }\n\n}\n\n","import { GameStatsCfg } from '../../cfg/GameStatsCfg'\nimport { WorkerMessageType } from './WorkerMessageType'\n\nexport class WadWorkerMessage {\n\n    type: WorkerMessageType = null\n    text?: string\n    cfg?: any\n    stats?: any\n    totalResources?: number\n    assetName?: string\n    assetObj?: any\n    loadingTimeSeconds?: string\n\n    constructor(type: WorkerMessageType) {\n        this.type = type\n    }\n\n    static createTextMessage(msg: string): WadWorkerMessage {\n        return {type: WorkerMessageType.MSG, text: msg}\n    }\n\n    static createCfgLoaded(cfg: any, totalResources: number): WadWorkerMessage {\n        return {\n            type: WorkerMessageType.CFG,\n            cfg: cfg,\n            stats: new GameStatsCfg(cfg['Stats']),\n            totalResources: totalResources,\n        }\n    }\n\n    static createAssetLoaded(assetIndex: number, assetName: string, assetObj: any): WadWorkerMessage {\n        return {type: WorkerMessageType.ASSET, assetName: assetName, assetObj: assetObj}\n    }\n\n    static createLoadDone(totalResources: number, loadingTimeSeconds: string): WadWorkerMessage {\n        return {type: WorkerMessageType.DONE, totalResources: totalResources, loadingTimeSeconds: loadingTimeSeconds}\n    }\n\n}\n","import { InitLoadingMessage } from './InitLoadingMessage'\nimport { WadLoader } from './WadLoader'\nimport { WadWorkerMessage } from './WadWorkerMessage'\nimport { WorkerMessageType } from './WorkerMessageType'\n\nconst worker: Worker = self as any\n\nfunction postMessage(assetMessage: WadWorkerMessage) {\n    worker.postMessage(assetMessage)\n}\n\nworker.addEventListener('message', (event) => {\n    const wadLoader = new WadLoader()\n    // set callbacks on wadLoader\n    wadLoader.onMessage = (text: string) => postMessage(WadWorkerMessage.createTextMessage(text))\n    wadLoader.onInitialLoad = (totalResources: number, cfg: any) => postMessage(WadWorkerMessage.createCfgLoaded(cfg, totalResources))\n    wadLoader.onAssetLoaded = (assetIndex: number, assetName: string, assetObj: any) => {\n        postMessage(WadWorkerMessage.createAssetLoaded(assetIndex, assetName, assetObj))\n    }\n    wadLoader.onLoadDone = (totalResources: number, loadingTimeSeconds: string) => {\n        postMessage(WadWorkerMessage.createLoadDone(totalResources, loadingTimeSeconds))\n    }\n    // start loading\n    const msg = event.data as InitLoadingMessage\n    if (msg) {\n        wadLoader.loadWadFiles(msg.wad0FileUrl, msg.wad1FileUrl)\n    } else {\n        wadLoader.startWithCachedFiles(() => postMessage(new WadWorkerMessage(WorkerMessageType.CACHE_MISS)))\n    }\n})\n"],"sourceRoot":""}