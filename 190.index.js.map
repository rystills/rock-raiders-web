{"version":3,"sources":["webpack://rock-raiders-web/./src/game/model/job/PriorityIdentifier.ts","webpack://rock-raiders-web/./src/resource/wadworker/AlphaBitmapDecoder.ts","webpack://rock-raiders-web/./src/core/Util.ts","webpack://rock-raiders-web/./src/cfg/BaseConfig.ts","webpack://rock-raiders-web/./src/cfg/ConfigColor.ts","webpack://rock-raiders-web/./src/cfg/ObjectiveImageCfg.ts","webpack://rock-raiders-web/./src/cfg/LevelsCfg.ts","webpack://rock-raiders-web/./src/cfg/MenuCycleItemCfg.ts","webpack://rock-raiders-web/./src/cfg/MenuLabelItemCfg.ts","webpack://rock-raiders-web/./src/cfg/MenuSliderItemCfg.ts","webpack://rock-raiders-web/./src/cfg/MenuEntryCfg.ts","webpack://rock-raiders-web/./src/cfg/MenuCfg.ts","webpack://rock-raiders-web/./src/cfg/RewardCfg.ts","webpack://rock-raiders-web/./src/resource/wadworker/EncodingHelper.ts","webpack://rock-raiders-web/./src/resource/wadworker/CfgFileParser.ts","webpack://rock-raiders-web/./src/resource/wadworker/ObjectiveTextParser.ts","webpack://rock-raiders-web/./src/resource/wadworker/WorkerMessageType.ts","webpack://rock-raiders-web/./src/resource/wadworker/RonFile.ts","webpack://rock-raiders-web/./src/resource/wadworker/WadFile.ts","webpack://rock-raiders-web/./src/resource/wadworker/WadUtil.ts","webpack://rock-raiders-web/./src/resource/wadworker/WadLoader.ts","webpack://rock-raiders-web/./src/params.ts","webpack://rock-raiders-web/./src/cfg/BuildingEntityStats.ts","webpack://rock-raiders-web/./src/cfg/MovableEntityStats.ts","webpack://rock-raiders-web/./src/cfg/GameStatsCfg.ts","webpack://rock-raiders-web/./src/resource/wadworker/WadWorkerMessage.ts","webpack://rock-raiders-web/./src/resource/wadworker/WadWorker.ts"],"names":["PriorityIdentifier","HeaderTypes","Array","prototype","remove","element","index","this","indexOf","splice","count","callback","counter","forEach","e","Map","getOrUpdate","key","updateCallback","value","get","undefined","set","BaseConfig","config","cfgObj","Object","keys","cfgKey","lCfgKeyName","startsWith","substring","toLowerCase","replace","some","objKey","assignValue","console","warn","cfgValue","currentValue","currentIsArray","isArray","parsedValue","parseValue","parsedIsArray","ConfigColor","values","r","g","b","ObjectiveImageCfg","filename","x","y","LevelsCfg","levelsByName","levelKey","LevelEntryCfg","super","fullName","endGameAvi1","endGameAvi2","allowRename","recallOLObjects","generateSpiders","video","disableEndTeleport","disableStartTeleport","emergeTimeOut","boulderAnimation","noMultiSelect","noAutoEat","disableToolTipSound","blockSize","digDepth","roughLevel","roofHeight","useRoof","selBoxHeight","fpRotLightRGB","fogColourRGB","highFogColourRGB","fogRate","fallinMultiplier","numberOfLandSlidesTillCaveIn","noFallins","oxygenRate","surfaceMap","predugMap","terrainMap","emergeMap","erodeMap","fallinMap","blockPointersMap","cryOreMap","pathMap","noGather","textureSet","rockFallStyle","emergeCreature","safeCaverns","seeThroughWalls","oListFile","ptlFile","nerpFile","nerpMessageFile","objectiveText","objectiveImage640x480","erodeTriggerTime","erodeErodeTime","erodeLockTime","nextLevel","levelLinks","frontEndX","frontEndY","frontEndOpen","priorities","reward","menuBMP","setFromCfg","endsWith","filter","name","map","LevelPrioritiesEntryConfig","LevelRewardConfig","enabled","obj","keyname","iGet","enable","modifier","importance","quota","LevelRewardImportanceConfig","LevelRewardQuotaConfig","crystals","timer","caverns","constructions","oxygen","figures","MenuCycleItemCfg","actionName","width","height","description","two","labelOff","labelOn","MenuLabelItemCfg","length","label","target","flag","join","imgNormal","imgHover","imgPressed","tooltip","log","MenuSliderItemCfg","min","max","imgOff","imgOn","imgLeft","imgRight","btnRightNormal","btnLeftNormal","btnRightHover","btnLeftHover","MenuEntryCfg","title","position","menuFont","loFont","hiFont","itemCount","menuImage","autoCenter","displayTitle","overlays","playRandom","itemsLabel","itemsSlider","itemsCycle","anchored","canScroll","match","lActionName","push","MenuCfg","menuCount","menus","RewardCfg","display","wallpaper","images","texts","boxImages","fonts","flics","scrollSpeed","centreText","vertSpacing","backFont","font","titleFont","saveButton","advanceButton","completeText","failedText","quitText","textPos","imgConf","RewardImageCfg","RewardTextCfg","RewardFontsCfg","filePath","text","ore","diggable","rockMonsters","score","BmpDecoder","buffer","toRGBA","bufferView","DataView","byteOffset","byteLength","bottomUp","String","fromCharCode","pos","Error","locRed","locGreen","locBlue","locAlpha","parseHeader","parseRGBA","fileSize","readUInt32LE","reserved1","getUint16","reserved2","offset","headerSize","planes","bitPP","compression","rawSize","hr","vr","colors","importantColors","maskAlpha","maskRed","maskGreen","maskBlue","BITMAP_INFO_HEADER","BITMAP_V2_INFO_HEADER","BITMAP_V3_INFO_HEADER","BITMAP_V4_HEADER","BITMAP_V5_HEADER","len","palette","i","blue","green","red","quad","coloShift","maskRedR","maskGreenR","maskBlueR","maskAlphaR","shiftedMaskRedL","shiftedMaskGreenL","shiftedMaskBlueL","shiftedMaskAlphaL","shiftRed","shiftGreen","shiftBlue","shiftAlpha","maskColor","data","Uint8Array","bit1","bit4","bit8","bit16","bit24","bit32","xLen","Math","ceil","mode","padding","lastLine","scanImage","line","location","rgb","fill","lowNibble","lines","a","c","setPixelData","first4","last4","loc","px","processPixel","call","getUint32","rgbIndex","AlphaBitmapDecoder","alphaIndex","decoder","Uint8ClampedArray","alphaColor","ImageData","encodeChar","CfgFileParser","result","ancestry","activeObject","isComment","keyVal","seek","charCode","charStr","pop","parsed","hasOwnProperty","stack","val","sub","levelConf","splitShrink","sep","split","num","Number","isNaN","lVal","toString","includes","ObjectiveTextParser","txtFileContent","state","PARSING_STATE","DROP","currentLevel","code","char","LevelObjectiveTextEntry","KEY","lLine","OBJECTIVE","FAILURE","COMPLETION","CRYSTAL_FAILURE","charCodeAt","objective","failure","completion","crystalFailure","WorkerMessageType","RonFile","content","l","indDoubleSlash","indComment","trim","v","root","parseObj","start","lv","WadFile","entryIndexByName","fLength","fStart","debug","dataView","Int8Array","apply","slice","numberOfEntries","getInt32","bufferStart","entryName","getEntryBuffer","getEntryData","regexStr","regex","RegExp","entry","getPath","url","strUrl","lastInd","lastIndexOf","WadLoader","wad0File","wad1File","assetIndex","totalResources","assetsFromCfgByName","onMessage","msg","onInitialLoad","onAssetLoaded","onLoadDone","loadingTimeSeconds","parse","alphaIndexMatch","parseInt","imgData","grayscaleToGreen","arr","n","getEntryText","parseNerpMsgFile","msg1","m1","txt","snd","wadFile","txt0Match","txt1Match","sndMatch","numericNameToNumber","digits","one","three","four","five","six","seven","eight","nine","tens","twenty","thirty","forty","number","ten","eleven","twelve","thirteen","fourteen","fifteen","sixteen","seventeen","eighteen","nineteen","digitName","txtContent","parseObjectiveTextFile","level","row","objectList","currentObject","objectStartMatch","drivingMatch","driving","parseFloat","path","error","lwoFilepath","lwoContent","mainConf","addAssetFolder","loadFontImageAsset","loadAlphaImageAsset","addMenuWithAssets","addAsset","loadObjectiveTexts","addAlphaImageFolder","loadWadImageAsset","loadNerpAsset","levelsCfg","bmpName","loadMapAsset","loadObjectListAsset","loadNerpMsg","addTextureFolder","buildingTypes","bType","bName","aeFile","addAnimatedEntity","loadLWOFile","loadWadTexture","addLWSFile","rewardCfg","imgPath","img","cfgRoot","polyType","cfgPoly","activities","activity","act","file","lwsFilepath","extractLwoFiles","lwoFile","objLine","folderPath","filterEntryNames","assetPath","menuImageAlpha","menuCfg","method","optional","bind","promises","that","asset","Promise","resolve","assetObj","all","then","Date","getTime","startTime","toFixed","onCacheMiss","_onerror","openLocalCache","objectStore","request1","onerror","onsuccess","prop","request2","startLoadingProcess","wad0Url","wad1Url","loadWadFile","wadFiles","put","fetch","response","ok","arrayBuffer","parseWadFile","catch","onopen","request","indexedDB","open","onupgradeneeded","db","objectStoreNames","contains","deleteObjectStore","createObjectStore","transaction","cfg","registerAllAssets","size","loadAssetsParallel","BuildingEntityStats","Levels","SelfPowered","PowerBuilding","PickSphere","TrainDynamite","CostOre","CostCrystal","OxygenCoef","MovableEntityStats","RouteSpeed","RubbleCoef","PathCoef","GameStatsCfg","Pilot","SoilDrillTime","LooseDrillTime","MedDrillTime","HardDrillTime","SeamDrillTime","UpgradeTime","CollRadius","CollHeight","TrackDist","SingleWidthDig","RepairValue","SurveyRadius","Drillsound","Drillfadesound","RestPercent","EnergyDecayRate","CanClearRubble","NumOfToolsCanCarry","CrossLand","RouteAvoidance","UseLegoManTeleporter","AwarenessRange","CanStrafe","EnterToolStore","ShowHealthBar","RockMonster","AlertRadius","HealthDecayRate","CanScare","CarryMinHealth","PainThreshold","StampRadius","AttackRadius","CanSteal","GrabMinifigure","BumpDamage","AttackPaths","SplitOnZeroHealth","CanBeHitByFence","Capacity","CanBeShotAt","CanFreeze","FreezerTime","FreezerDamage","CanLaser","LaserDamage","CanPush","PusherDist","PusherDamage","WakeRadius","ScaredByBigBangs","RemoveReinforcement","SmallSpider","RandomMove","RandomEnterWall","CauseSlip","DontShowDamage","DontShowOnRadar","Bat","randomMoveTime","Flocks","FlocksDebug","FlocksSmooth","FlocksSize","FlocksTurn","FlocksSpeed","FlocksTightness","FlocksGoalUpdate","FlocksRandomness","FlocksHeight","CrossWater","CrossLava","TinyRM","ScaredByPlayer","TinyIM","Slug","UseHoles","DrainPower","LavaMonster","IceMonster","Hoverboard","CanBeDriven","UseSmallTeleporter","UpgradeCostOre","UpgradeCostStuds","EngineSound","SmallHeli","Smallmlp","Tracker","CanDoubleSelect","SmallCat","UseWaterTeleporter","MaxCarry","GetInAtLand","GetOutAtLand","TakeCarryingDrivers","SmallDigger","VehicleCanBeCarried","SmallTruck","CarryStart","Bulldozer","UseBigTeleporter","InvisibleDriver","WalkerDigger","DrillSound","DrillFadeSound","LargeDigger","LargeCat","ClassAsLarge","CarryVehicles","LargeHeli","LargeMLP","Barracks","CostRefinedOre","SnaxULike","TrainDriver","CrystalDrain","DamageCausesCallToArms","Powerstation","ProcessCrystal","OreRefinery","ProcessOre","TeleportPad","SmallTeleporter","ManTeleporter","TrainPilot","TeleportBIG","BigTeleporter","Docks","WaterEntrances","WaterTeleporter","TrainSailor","Toolstation","ToolStore","StoreObjects","FunctionCoef","GunStation","Geodome","TrainScanner","Upgrade","UpgradeBuilding","TrainRepair","PowerCrystal","ProcessedOre","Ore","Boulder","Pusher","Freezer","LaserShot","ColRadius","ElectricFence","Path","WadWorkerMessage","type","MSG","CFG","stats","assetName","ASSET","DONE","worker","self","postMessage","assetMessage","addEventListener","event","wadLoader","createTextMessage","createCfgLoaded","createAssetLoaded","createLoadDone","loadWadFiles","wad0FileUrl","wad1FileUrl","startWithCachedFiles","CACHE_MISS"],"mappings":"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","file":"190.index.js","sourcesContent":["export enum PriorityIdentifier {\n\n    aiPriorityTrain,\n    aiPriorityGetIn,\n    aiPriorityCrystal,\n    aiPriorityOre,\n    aiPriorityRepair,\n    aiPriorityClearing,\n    aiPriorityDestruction,\n    aiPriorityConstruction,\n    aiPriorityReinforce,\n    aiPriorityRecharge,\n\n}\n","/**\n * Source: https://github.com/wokwi/bmp-ts\n */\n\nenum HeaderTypes {\n    BITMAP_INFO_HEADER = 40,\n    BITMAP_V2_INFO_HEADER = 52,\n    BITMAP_V3_INFO_HEADER = 56,\n    BITMAP_V4_HEADER = 108,\n    BITMAP_V5_HEADER = 124\n}\n\n// We have these:\n//\n// const sample = 0101 0101 0101 0101\n// const mask   = 0111 1100 0000 0000\n// 256        === 0000 0001 0000 0000\n//\n// We want to take the sample and turn it into an 8-bit value.\n//\n// 1. We extract the last bit of the mask:\n//\n// 0000 0100 0000 0000\n//       ^\n//\n// Like so:\n//\n// const a = ~mask =    1000 0011 1111 1111\n// const b = a + 1 =    1000 0100 0000 0000\n// const c = b & mask = 0000 0100 0000 0000\n//\n// 2. We shift it to the right and extract the bit before the first:\n//\n// 0000 0000 0010 0000\n//             ^\n//\n// Like so:\n//\n// const d = mask / c = 0000 0000 0001 1111\n// const e = mask + 1 = 0000 0000 0010 0000\n//\n// 3. We apply the mask and the two values above to a sample:\n//\n// const f = sample & mask = 0101 0100 0000 0000\n// const g = f / c =         0000 0000 0001 0101\n// const h = 256 / e =       0000 0000 0000 0100\n// const i = g * h =         0000 0000 1010 1000\n//                                     ^^^^ ^\n//\n// Voila, we have extracted a sample and \"stretched\" it to 8 bits. For samples\n// which are already 8-bit, h === 1 and g === i.\n\nfunction maskColor(\n    maskRed: number,\n    maskGreen: number,\n    maskBlue: number,\n    maskAlpha: number,\n) {\n    const maskRedR = (~maskRed + 1) & maskRed\n    const maskGreenR = (~maskGreen + 1) & maskGreen\n    const maskBlueR = (~maskBlue + 1) & maskBlue\n    const maskAlphaR = (~maskAlpha + 1) & maskAlpha\n\n    const shiftedMaskRedL = maskRed / maskRedR + 1\n    const shiftedMaskGreenL = maskGreen / maskGreenR + 1\n    const shiftedMaskBlueL = maskBlue / maskBlueR + 1\n    const shiftedMaskAlphaL = maskAlpha / maskAlphaR + 1\n\n    return {\n        shiftRed: (x: number) =>\n            (((x & maskRed) / maskRedR) * 0x100) / shiftedMaskRedL,\n        shiftGreen: (x: number) =>\n            (((x & maskGreen) / maskGreenR) * 0x100) / shiftedMaskGreenL,\n        shiftBlue: (x: number) =>\n            (((x & maskBlue) / maskBlueR) * 0x100) / shiftedMaskBlueL,\n        shiftAlpha:\n            maskAlpha !== 0\n                ? (x: number) =>\n                (((x & maskAlpha) / maskAlphaR) * 0x100) / shiftedMaskAlphaL\n                : () => 255,\n    }\n}\n\nconst enum Compression {\n    NONE = 0,\n    BI_RLE8 = 1,\n    BI_RLE4 = 2,\n    BI_BIT_FIELDS = 3,\n    BI_ALPHA_BIT_FIELDS = 6\n}\n\ntype BitsPerPixel = 1 | 4 | 8 | 16 | 24 | 32;\n\ninterface IColor {\n    red: number;\n    green: number;\n    blue: number;\n    quad: number;\n}\n\ninterface IDecoderOptions {\n    toRGBA?: boolean;\n}\n\ninterface IImage {\n    width: number;\n    height: number;\n    bitPP: BitsPerPixel;\n    data: Uint8Array;\n    reserved1?: number;\n    reserved2?: number;\n    hr?: number;\n    vr?: number;\n    colors?: number;\n    importantColors?: number;\n    palette?: IColor[];\n}\n\ninterface IBitmapImage extends IImage {\n    flag: string;\n    fileSize: number;\n    offset: number;\n    headerSize: number;\n    planes?: number;\n    compression?: Compression;\n    rawSize: number;\n}\n\ntype IColorProcessor = (x: number, line: number) => void;\n\nclass BmpDecoder implements IBitmapImage {\n    // Header\n    public flag: string\n    public fileSize!: number\n    public reserved1!: number\n    public reserved2!: number\n    public offset!: number\n    public headerSize!: number\n    public width!: number\n    public height!: number\n    public planes!: number\n    public bitPP!: BitsPerPixel\n    public compression?: Compression\n    public rawSize!: number\n    public hr!: number\n    public vr!: number\n    public colors!: number\n    public importantColors!: number\n    public palette!: IColor[]\n    public data!: Uint8Array\n\n    private maskRed!: number\n    private maskGreen!: number\n    private maskBlue!: number\n    private maskAlpha!: number\n\n    private readonly toRGBA: boolean\n\n    private pos: number\n    private bottomUp: boolean\n    private readonly buffer: Uint8Array\n    private readonly bufferView: DataView\n\n    private readonly locRed: number\n    private readonly locGreen: number\n    private readonly locBlue: number\n    private readonly locAlpha: number\n\n    private shiftRed!: (x: number) => number\n    private shiftGreen!: (x: number) => number\n    private shiftBlue!: (x: number) => number\n    private shiftAlpha!: (x: number) => number\n\n    constructor(\n        buffer: Uint8Array,\n        {toRGBA}: IDecoderOptions = {toRGBA: false},\n    ) {\n        this.buffer = buffer\n        this.bufferView = new DataView(\n            buffer.buffer,\n            buffer.byteOffset,\n            buffer.byteLength,\n        )\n        this.toRGBA = !!toRGBA\n        this.bottomUp = true\n        this.flag = String.fromCharCode(this.buffer[0]) + String.fromCharCode(this.buffer[1])\n        this.pos = 2\n\n        if (this.flag !== 'BM') {\n            throw new Error('Invalid BMP File')\n        }\n\n        this.locRed = this.toRGBA ? 0 : 3\n        this.locGreen = this.toRGBA ? 1 : 2\n        this.locBlue = this.toRGBA ? 2 : 1\n        this.locAlpha = this.toRGBA ? 3 : 0\n\n        this.parseHeader()\n        this.parseRGBA()\n    }\n\n    private parseHeader() {\n        this.fileSize = this.readUInt32LE()\n\n        this.reserved1 = this.bufferView.getUint16(this.pos, true)\n        this.pos += 2\n        this.reserved2 = this.bufferView.getUint16(this.pos, true)\n        this.pos += 2\n\n        this.offset = this.readUInt32LE()\n\n        // End of BITMAP_FILE_HEADER\n        this.headerSize = this.readUInt32LE()\n\n        if (!(this.headerSize in HeaderTypes)) {\n            throw new Error(`Unsupported BMP header size ${this.headerSize}`)\n        }\n\n        this.width = this.readUInt32LE()\n        this.height = this.readUInt32LE()\n\n        this.planes = this.bufferView.getUint16(this.pos, true)\n        this.pos += 2\n        this.bitPP = this.bufferView.getUint16(this.pos, true) as BitsPerPixel\n        this.pos += 2\n\n        this.compression = this.readUInt32LE()\n        this.rawSize = this.readUInt32LE()\n        this.hr = this.readUInt32LE()\n        this.vr = this.readUInt32LE()\n        this.colors = this.readUInt32LE()\n        this.importantColors = this.readUInt32LE()\n\n        // De facto defaults\n\n        if (this.bitPP === 32) {\n            this.maskAlpha = 0\n            this.maskRed = 0x00ff0000\n            this.maskGreen = 0x0000ff00\n            this.maskBlue = 0x000000ff\n        } else if (this.bitPP === 16) {\n            this.maskAlpha = 0\n            this.maskRed = 0x7c00\n            this.maskGreen = 0x03e0\n            this.maskBlue = 0x001f\n        }\n\n        // End of BITMAP_INFO_HEADER\n\n        if (\n            this.headerSize > HeaderTypes.BITMAP_INFO_HEADER ||\n            this.compression === Compression.BI_BIT_FIELDS ||\n            this.compression === Compression.BI_ALPHA_BIT_FIELDS\n        ) {\n            this.maskRed = this.readUInt32LE()\n            this.maskGreen = this.readUInt32LE()\n            this.maskBlue = this.readUInt32LE()\n        }\n\n        // End of BITMAP_V2_INFO_HEADER\n\n        if (\n            this.headerSize > HeaderTypes.BITMAP_V2_INFO_HEADER ||\n            this.compression === Compression.BI_ALPHA_BIT_FIELDS\n        ) {\n            this.maskAlpha = this.readUInt32LE()\n        }\n\n        // End of BITMAP_V3_INFO_HEADER\n\n        if (this.headerSize > HeaderTypes.BITMAP_V3_INFO_HEADER) {\n            this.pos +=\n                HeaderTypes.BITMAP_V4_HEADER - HeaderTypes.BITMAP_V3_INFO_HEADER\n        }\n\n        // End of BITMAP_V4_HEADER\n\n        if (this.headerSize > HeaderTypes.BITMAP_V4_HEADER) {\n            this.pos += HeaderTypes.BITMAP_V5_HEADER - HeaderTypes.BITMAP_V4_HEADER\n        }\n\n        // End of BITMAP_V5_HEADER\n\n        if (this.bitPP <= 8 || this.colors > 0) {\n            const len = this.colors === 0 ? 1 << this.bitPP : this.colors\n            this.palette = new Array(len)\n\n            for (let i = 0; i < len; i++) {\n                const blue = this.buffer[this.pos++]\n                const green = this.buffer[this.pos++]\n                const red = this.buffer[this.pos++]\n                const quad = this.buffer[this.pos++]\n\n                this.palette[i] = {\n                    red,\n                    green,\n                    blue,\n                    quad,\n                }\n            }\n        }\n\n        // End of color table\n\n        // Can the height ever be negative?\n        if (this.height < 0) {\n            this.height *= -1\n            this.bottomUp = false\n        }\n\n        const coloShift = maskColor(\n            this.maskRed,\n            this.maskGreen,\n            this.maskBlue,\n            this.maskAlpha,\n        )\n\n        this.shiftRed = coloShift.shiftRed\n        this.shiftGreen = coloShift.shiftGreen\n        this.shiftBlue = coloShift.shiftBlue\n        this.shiftAlpha = coloShift.shiftAlpha\n    }\n\n    private parseRGBA() {\n        this.data = new Uint8Array(this.width * this.height * 4)\n\n        switch (this.bitPP) {\n            case 1:\n                this.bit1()\n                break\n            case 4:\n                this.bit4()\n                break\n            case 8:\n                this.bit8()\n                break\n            case 16:\n                this.bit16()\n                break\n            case 24:\n                this.bit24()\n                break\n            default:\n                this.bit32()\n        }\n    }\n\n    private bit1() {\n        const xLen = Math.ceil(this.width / 8)\n        const mode = xLen % 4\n        const padding = mode !== 0 ? 4 - mode : 0\n\n        let lastLine: number | undefined\n\n        this.scanImage(padding, xLen, (x, line) => {\n            if (line !== lastLine) {\n                lastLine = line\n            }\n\n            const b = this.buffer[this.pos++]\n            const location = line * this.width * 4 + x * 8 * 4\n\n            for (let i = 0; i < 8; i++) {\n                if (x * 8 + i < this.width) {\n                    const rgb = this.palette[(b >> (7 - i)) & 0x1]\n\n                    this.data[location + i * 4 + this.locAlpha] = 0xff\n                    this.data[location + i * 4 + this.locBlue] = rgb.blue\n                    this.data[location + i * 4 + this.locGreen] = rgb.green\n                    this.data[location + i * 4 + this.locRed] = rgb.red\n                } else {\n                    break\n                }\n            }\n        })\n    }\n\n    private bit4() {\n        if (this.compression === Compression.BI_RLE4) {\n            this.data.fill(0)\n\n            let lowNibble = false //for all count of pixel\n            let lines = this.bottomUp ? this.height - 1 : 0\n            let location = 0\n\n            while (location < this.data.length) {\n                const a = this.buffer[this.pos++]\n                const b = this.buffer[this.pos++]\n\n                //absolute mode\n                if (a === 0) {\n                    if (b === 0) {\n                        //line end\n                        lines += this.bottomUp ? -1 : 1\n                        location = lines * this.width * 4\n                        lowNibble = false\n\n                        continue\n                    }\n\n                    if (b === 1) {\n                        // image end\n                        break\n                    }\n\n                    if (b === 2) {\n                        // offset x, y\n                        const x = this.buffer[this.pos++]\n                        const y = this.buffer[this.pos++]\n\n                        lines += this.bottomUp ? -y : y\n                        location += y * this.width * 4 + x * 4\n                    } else {\n                        let c = this.buffer[this.pos++]\n\n                        for (let i = 0; i < b; i++) {\n                            location = this.setPixelData(\n                                location,\n                                lowNibble ? c & 0x0f : (c & 0xf0) >> 4,\n                            )\n\n                            if (i & 1 && i + 1 < b) {\n                                c = this.buffer[this.pos++]\n                            }\n\n                            lowNibble = !lowNibble\n                        }\n\n                        if ((((b + 1) >> 1) & 1) === 1) {\n                            this.pos++\n                        }\n                    }\n                } else {\n                    //encoded mode\n                    for (let i = 0; i < a; i++) {\n                        location = this.setPixelData(\n                            location,\n                            lowNibble ? b & 0x0f : (b & 0xf0) >> 4,\n                        )\n                        lowNibble = !lowNibble\n                    }\n                }\n            }\n        } else {\n            const xLen = Math.ceil(this.width / 2)\n            const mode = xLen % 4\n            const padding = mode !== 0 ? 4 - mode : 0\n\n            this.scanImage(padding, xLen, (x, line) => {\n                const b = this.buffer[this.pos++]\n                const location = line * this.width * 4 + x * 2 * 4\n\n                const first4 = b >> 4\n                let rgb = this.palette[first4]\n\n                this.data[location + this.locAlpha] = 0xff\n                this.data[location + this.locBlue] = rgb.blue\n                this.data[location + this.locGreen] = rgb.green\n                this.data[location + this.locRed] = rgb.red\n\n                if (x * 2 + 1 >= this.width) {\n                    // throw new Error('Something');\n                    return false\n                }\n\n                const last4 = b & 0x0f\n                rgb = this.palette[last4]\n\n                this.data[location + 4 + this.locAlpha] = 0xff\n                this.data[location + 4 + this.locBlue] = rgb.blue\n                this.data[location + 4 + this.locGreen] = rgb.green\n                this.data[location + 4 + this.locRed] = rgb.red\n            })\n        }\n    }\n\n    private bit8() {\n        if (this.compression === Compression.BI_RLE8) {\n            this.data.fill(0)\n\n            let lines = this.bottomUp ? this.height - 1 : 0\n            let location = 0\n\n            while (location < this.data.length) {\n                const a = this.buffer[this.pos++]\n                const b = this.buffer[this.pos++]\n\n                //absolute mode\n                if (a === 0) {\n                    if (b === 0) {\n                        //line end\n                        lines += this.bottomUp ? -1 : 1\n                        location = lines * this.width * 4\n                        continue\n                    }\n\n                    if (b === 1) {\n                        //image end\n                        break\n                    }\n\n                    if (b === 2) {\n                        //offset x,y\n                        const x = this.buffer[this.pos++]\n                        const y = this.buffer[this.pos++]\n\n                        lines += this.bottomUp ? -y : y\n                        location += y * this.width * 4 + x * 4\n                    } else {\n                        for (let i = 0; i < b; i++) {\n                            const c = this.buffer[this.pos++]\n                            location = this.setPixelData(location, c)\n                        }\n\n                        // @ts-ignore\n                        const shouldIncrement = b & (1 === 1)\n                        if (shouldIncrement) {\n                            this.pos++\n                        }\n                    }\n                } else {\n                    //encoded mode\n                    for (let i = 0; i < a; i++) {\n                        location = this.setPixelData(location, b)\n                    }\n                }\n            }\n        } else {\n            const mode = this.width % 4\n            const padding = mode !== 0 ? 4 - mode : 0\n\n            this.scanImage(padding, this.width, (x, line) => {\n                const b = this.buffer[this.pos++]\n                const location = line * this.width * 4 + x * 4\n\n                if (b < this.palette.length) {\n                    const rgb = this.palette[b]\n\n                    this.data[location + this.locAlpha] = 0xff\n                    this.data[location + this.locBlue] = rgb.blue\n                    this.data[location + this.locGreen] = rgb.green\n                    this.data[location + this.locRed] = rgb.red\n                }\n            })\n        }\n    }\n\n    private bit16() {\n        const padding = (this.width % 2) * 2\n\n        this.scanImage(padding, this.width, (x, line) => {\n            const loc = line * this.width * 4 + x * 4\n            const px = this.bufferView.getUint16(this.pos, true)\n            this.pos += 2\n\n            this.data[loc + this.locRed] = this.shiftRed(px)\n            this.data[loc + this.locGreen] = this.shiftGreen(px)\n            this.data[loc + this.locBlue] = this.shiftBlue(px)\n            this.data[loc + this.locAlpha] = this.shiftAlpha(px)\n        })\n    }\n\n    private bit24() {\n        const padding = this.width % 4\n\n        this.scanImage(padding, this.width, (x, line) => {\n            const loc = line * this.width * 4 + x * 4\n            const blue = this.buffer[this.pos++]\n            const green = this.buffer[this.pos++]\n            const red = this.buffer[this.pos++]\n\n            this.data[loc + this.locAlpha] = 0xff\n            this.data[loc + this.locBlue] = blue\n            this.data[loc + this.locGreen] = green\n            this.data[loc + this.locRed] = red\n        })\n    }\n\n    private bit32() {\n        this.scanImage(0, this.width, (x, line) => {\n            const loc = line * this.width * 4 + x * 4\n            const px = this.readUInt32LE()\n\n            this.data[loc + this.locAlpha] = this.shiftAlpha(px)\n            this.data[loc + this.locBlue] = this.shiftBlue(px)\n            this.data[loc + this.locGreen] = this.shiftGreen(px)\n            this.data[loc + this.locRed] = this.shiftRed(px)\n        })\n    }\n\n    private scanImage(\n        padding = 0,\n        width = this.width,\n        processPixel: IColorProcessor,\n    ) {\n        for (let y = this.height - 1; y >= 0; y--) {\n            const line = this.bottomUp ? y : this.height - 1 - y\n\n            for (let x = 0; x < width; x++) {\n                processPixel.call(this, x, line)\n            }\n\n            this.pos += padding\n        }\n    }\n\n    private readUInt32LE() {\n        const value = this.bufferView.getUint32(this.pos, true)\n        this.pos += 4\n        return value\n    }\n\n    private setPixelData(location: number, rgbIndex: number) {\n        const {blue, green, red} = this.palette[rgbIndex]\n\n        this.data[location + this.locAlpha] = 0xff\n        this.data[location + this.locBlue] = blue\n        this.data[location + this.locGreen] = green\n        this.data[location + this.locRed] = red\n\n        return location + 4\n    }\n}\n\nexport class AlphaBitmapDecoder {\n\n    static parse(buffer: Uint8Array, alphaIndex: number = null): ImageData {\n        const decoder = new BmpDecoder(buffer, {toRGBA: true})\n        const data = new Uint8ClampedArray(decoder.data)\n        if (alphaIndex || alphaIndex === 0) {\n            const alphaColor = decoder.palette?.[alphaIndex] // XXX fails for a102_bigtyre.bmp\n            for (let c = 0; c < decoder.data.length; c += 4) {\n                data[c + 3] = alphaColor?.red === data[c] && alphaColor?.green === data[c + 1] && alphaColor?.blue === data[c + 2] ? 0 : 255\n            }\n        }\n        return new ImageData(data, decoder.width, decoder.height)\n    }\n\n}\n","export function getFilename(url: string) {\n    if (!url) return url\n    let strUrl = url.toString().replace(/\\\\/g, '/')\n    if (strUrl.startsWith('/')) strUrl = strUrl.substring(1)\n    const lastInd = strUrl.lastIndexOf('/')\n    return strUrl.substring(lastInd + 1)\n}\n\nexport function iGet(obj, ...keys: string[]): any {\n    keys.forEach((keyname) => {\n        obj = Object.keys(obj)\n            .filter((key) => key.toLowerCase() === keyname.toLowerCase())\n            .map((key) => obj[key])\n        obj = obj ? obj[0] : obj\n    })\n    return obj\n}\n\nexport function decodeString(data) {\n    return new TextDecoder().decode(data).replace(/\\0/g, '')\n}\n\nexport function decodeFilepath(data) {\n    return decodeString(data).replace(/\\\\/g, '/')\n}\n\nexport function getRandomInclusive(min, max) {\n    min = Math.ceil(min)\n    max = Math.floor(max)\n    return Math.floor(Math.random() * (max - min + 1)) + min\n}\n\nexport function getRandom(max) {\n    return getRandomInclusive(0, max)\n}\n\nexport function getRandomSign() {\n    return -1 + getRandomInclusive(0, 1) * 2\n}\n\nexport function clearTimeoutSafe(timeout: NodeJS.Timeout) {\n    if (timeout) clearTimeout(timeout)\n    return null\n}\n\nexport function clearIntervalSafe(interval: NodeJS.Timeout) {\n    if (interval) clearInterval(interval)\n    return null\n}\n\ndeclare global {\n\n    interface Array<T> {\n        remove(element: T): void\n\n        count(callback: (element: T) => boolean): number\n    }\n\n    interface Map<K, V> {\n        getOrUpdate(key: K, updateCallback: () => V): V\n    }\n\n}\n\nArray.prototype.remove = function <T>(element: T): void {\n    const index = this.indexOf(element)\n    if (index !== -1) this.splice(index, 1)\n}\n\nArray.prototype.count = function <T>(callback: (element: T) => boolean): number {\n    let counter = 0\n    this.forEach((e) => callback(e) && counter++)\n    return counter\n}\n\n// noinspection JSUnusedGlobalSymbols\nMap.prototype.getOrUpdate = function <K, V>(key: K, updateCallback: () => V): V {\n    let value = this.get(key)\n    if (value === undefined) {\n        value = updateCallback()\n        this.set(key, value)\n    }\n    return value\n}\n","export class BaseConfig {\n\n    static setFromCfg(config: BaseConfig, cfgObj: any) {\n        Object.keys(cfgObj).forEach((cfgKey) => {\n            const lCfgKeyName = (cfgKey.startsWith('!') ? cfgKey.substring(1) : cfgKey)\n                .toLowerCase()\n                .replace(/_/g, '') // Activity_Stand\n                .replace(/-/g, '') // Geo-dome\n            const found = Object.keys(config).some((objKey) => {\n                return config.assignValue(objKey, lCfgKeyName, cfgObj[cfgKey])\n            })\n            if (!found) {\n                console.warn('cfg key does not exist: ' + cfgKey)\n            }\n        })\n        return config\n    }\n\n    assignValue(objKey, lCfgKeyName, cfgValue): boolean {\n        if (objKey.toLowerCase() === lCfgKeyName) {\n            const currentValue = this[objKey]\n            const currentIsArray = Array.isArray(currentValue)\n            let parsedValue = this.parseValue(lCfgKeyName, cfgValue)\n            const parsedIsArray = Array.isArray(parsedValue)\n            if (currentValue && currentIsArray !== parsedIsArray) {\n                if (currentIsArray) {\n                    parsedValue = [parsedValue]\n                    // } else {\n                    //     console.warn('Array overwrite conflict for key ' + objKey + ' with existing value (' + currentValue + ') and new value (' + parsedValue + ')')\n                }\n            }\n            this[objKey] = parsedValue\n            return true\n        }\n    }\n\n    parseValue(lCfgKeyName: string, cfgValue: any): any {\n        return cfgValue\n    }\n\n}\n","export class ConfigColor {\n\n    r: number\n    g: number\n    b: number\n\n    constructor(values: number[]) {\n        [this.r, this.g, this.b] = values\n    }\n\n}\n","export class ObjectiveImageCfg {\n\n    filename: string\n    x: number\n    y: number\n\n    constructor(cfgValue: any) {\n        [this.filename, this.x, this.y] = cfgValue\n    }\n\n}\n","import { iGet } from '../core/Util'\nimport { PriorityIdentifier } from '../game/model/job/PriorityIdentifier'\nimport { BaseConfig } from './BaseConfig'\nimport { ConfigColor } from './ConfigColor'\nimport { ObjectiveImageCfg } from './ObjectiveImageCfg'\n\nexport class LevelsCfg {\n\n    levelsByName: {} = []\n\n    constructor(cfgObj: any) {\n        Object.keys(cfgObj).forEach((levelKey) => {\n            if (!levelKey.startsWith('Tutorial') && !levelKey.startsWith('Level')) return // ignore incomplete test levels and duplicates\n            this.levelsByName[levelKey] = new LevelEntryCfg(cfgObj[levelKey])\n        })\n    }\n\n}\n\nexport class LevelEntryCfg extends BaseConfig {\n\n    fullName: string = ''\n    endGameAvi1: string = ''\n    endGameAvi2: string = ''\n    allowRename: boolean = false\n    recallOLObjects: boolean = false\n    generateSpiders: boolean = false\n    video: string = ''\n    disableEndTeleport: boolean = false\n    disableStartTeleport: boolean = false\n    emergeTimeOut: any = ''\n    boulderAnimation: any = ''\n    noMultiSelect: any = ''\n    noAutoEat: any = ''\n    disableToolTipSound: any = ''\n    blockSize: any = ''\n    digDepth: any = ''\n    roughLevel: any = ''\n    roofHeight: any = ''\n    useRoof: any = ''\n    selBoxHeight: any = ''\n    fpRotLightRGB: any = ''\n    fogColourRGB: any = ''\n    highFogColourRGB: any = ''\n    fogRate: number = 0\n    fallinMultiplier: number = 0\n    numberOfLandSlidesTillCaveIn: number = 0\n    noFallins: boolean = false\n    oxygenRate: number = 0 // 0 - 100\n    surfaceMap: string = ''\n    predugMap: string = ''\n    terrainMap: string = ''\n    emergeMap: string = ''\n    erodeMap: string = ''\n    fallinMap: string = ''\n    blockPointersMap: string = ''\n    cryOreMap: string = ''\n    pathMap: string = ''\n    noGather: boolean = false\n    textureSet: string = ''\n    rockFallStyle: any = ''\n    emergeCreature: any = ''\n    safeCaverns: any = ''\n    seeThroughWalls: any = ''\n    oListFile: any = ''\n    ptlFile: any = ''\n    nerpFile: any = ''\n    nerpMessageFile: any = ''\n    objectiveText: any = ''\n    objectiveImage640x480: ObjectiveImageCfg = null\n    erodeTriggerTime: number = 0\n    erodeErodeTime: number = 0\n    erodeLockTime: number = 0\n    nextLevel: any = ''\n    levelLinks: any = ''\n    frontEndX: number = 0\n    frontEndY: number = 0\n    frontEndOpen: boolean = false\n    priorities: LevelPrioritiesEntryConfig[] = [] // priority order matters!\n    reward: LevelRewardConfig = null\n    menuBMP: string[] = []\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n    parseValue(lCfgKeyName: string, cfgValue: any): any {\n        if (lCfgKeyName === 'fullName'.toLowerCase()) {\n            return cfgValue.replace(/_/g, ' ')\n        } else if (lCfgKeyName.endsWith('rgb')) {\n            return new ConfigColor(cfgValue)\n        } else if (lCfgKeyName === 'priorities') {\n            return Object.keys(cfgValue)\n                .filter(name => name.toLowerCase() !== 'AI_Priority_GetTool'.toLowerCase()) // not used in the game\n                .map(name => new LevelPrioritiesEntryConfig(name, cfgValue[name]))\n        } else if (lCfgKeyName === 'reward') {\n            return new LevelRewardConfig(cfgValue)\n        } else if (lCfgKeyName === 'objectiveimage640x480') {\n            return new ObjectiveImageCfg(cfgValue)\n        } else {\n            return super.parseValue(lCfgKeyName, cfgValue)\n        }\n    }\n\n}\n\nexport class LevelPrioritiesEntryConfig {\n\n    key: PriorityIdentifier\n    enabled: boolean\n\n    constructor(name: string, enabled: boolean) {\n        this.key = iGet(PriorityIdentifier, name.replace(/_/g, ''))\n        this.enabled = enabled\n    }\n\n}\n\nexport class LevelRewardConfig extends BaseConfig {\n\n    enable: boolean = true\n    modifier: number = null\n    importance: LevelRewardImportanceConfig = null\n    quota: LevelRewardQuotaConfig = null\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n    parseValue(lCfgKeyName: string, cfgValue: any): any {\n        if (lCfgKeyName === 'importance') {\n            return new LevelRewardImportanceConfig(cfgValue)\n        } else if (lCfgKeyName === 'quota') {\n            return new LevelRewardQuotaConfig(cfgValue)\n        } else {\n            return super.parseValue(lCfgKeyName, cfgValue)\n        }\n    }\n}\n\nexport class LevelRewardImportanceConfig extends BaseConfig {\n\n    crystals: number = 0\n    timer: number = 0\n    caverns: number = 0\n    constructions: number = 0\n    oxygen: number = 0\n    figures: number = 0\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n}\n\nexport class LevelRewardQuotaConfig extends BaseConfig {\n\n    crystals: number = null\n    timer: number = null\n    caverns: number = null\n    constructions: number = null\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n}\n","export class MenuCycleItemCfg {\n\n    actionName: string\n    x: number\n    y: number\n    width: number\n    height: number\n    description: string\n    two: number // usage unclear\n    labelOff: string\n    labelOn: string\n\n    constructor(cfgObj: any) {\n        [this.actionName, this.x, this.y, this.width, this.height, this.description, this.two, this.labelOff, this.labelOn] = cfgObj\n        this.description = this.description.replace(/_/g, ' ')\n    }\n\n}\n","export class MenuLabelItemCfg {\n\n    actionName: string\n    x: number\n    y: number\n    label: string\n    imgNormal: string\n    imgHover: string\n    imgPressed: string\n    tooltip: string\n    target: string\n    flag: string // usage unclear\n\n    constructor(cfgObj: any) {\n        if (cfgObj.length === 5 || cfgObj.length === 6) {\n            [this.actionName, this.x, this.y, this.label, this.target, this.flag] = cfgObj\n            this.label = Array.isArray(this.label) ? this.label.join(',') : this.label // TODO improve cfg handling, remove join\n            this.label = this.label.replace(/_/g, ' ')\n        } else if (cfgObj.length === 8) {\n            [this.actionName, this.x, this.y, this.imgNormal, this.imgHover, this.imgPressed, this.tooltip, this.target] = cfgObj\n        } else {\n            console.warn('Unexpected cfg object length: ' + cfgObj.length)\n            console.log(cfgObj)\n        }\n    }\n\n}\n","export class MenuSliderItemCfg {\n\n    actionName: string\n    x: number\n    y: number\n    width: number\n    height: number\n    description: string\n    min: number\n    max: number\n    imgOff: string\n    imgOn: string\n    imgLeft: string\n    imgRight: string\n    btnLeftNormal: string\n    btnRightNormal: string\n    btnLeftHover: string\n    btnRightHover: string\n\n    constructor(cfgObj: any) {\n        [this.actionName, this.x, this.y, this.width, this.height, this.description, this.min, this.max, this.imgOff, this.imgOn,\n            this.imgLeft, this.imgRight, this.btnRightNormal, this.btnLeftNormal, this.btnRightHover, this.btnLeftHover] = cfgObj\n    }\n\n}\n","import { BaseConfig } from './BaseConfig'\nimport { MenuCycleItemCfg } from './MenuCycleItemCfg'\nimport { MenuLabelItemCfg } from './MenuLabelItemCfg'\nimport { MenuSliderItemCfg } from './MenuSliderItemCfg'\n\nexport class MenuEntryCfg extends BaseConfig {\n\n    fullName: string = ''\n    title: string = ''\n    position: [number, number] = [0, 0]\n    menuFont: string = ''\n    loFont: string = ''\n    hiFont: string = ''\n    itemCount: number = 0\n    menuImage: string = ''\n    autoCenter: boolean = false\n    displayTitle: boolean = false\n    overlays: any[] = []\n    playRandom: boolean = false\n    itemsLabel: MenuLabelItemCfg[] = []\n    itemsSlider: MenuSliderItemCfg[] = []\n    itemsCycle: MenuCycleItemCfg[] = []\n    anchored: boolean = false\n    canScroll: boolean = false\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n    assignValue(objKey, lCfgKeyName, cfgValue): boolean {\n        if (lCfgKeyName.match(/item\\d+/i)) {\n            const lActionName = cfgValue[0].toLowerCase()\n            if (lActionName === 'next' || lActionName === 'trigger') {\n                this.itemsLabel.push(new MenuLabelItemCfg(cfgValue))\n            } else if (lActionName === 'slider') {\n                this.itemsSlider.push(new MenuSliderItemCfg(cfgValue))\n            } else if (lActionName === 'cycle') {\n                this.itemsCycle.push(new MenuCycleItemCfg(cfgValue))\n            } else {\n                console.warn('Unexpected item action name: ' + cfgValue[0])\n                return false\n            }\n            return true\n        } else if (lCfgKeyName.match(/overlay\\d+/i)) {\n            this.overlays.push(cfgValue)\n            return true\n        }\n        return super.assignValue(objKey, lCfgKeyName, cfgValue)\n    }\n\n    parseValue(lCfgKeyName: string, cfgValue: any): any {\n        if (lCfgKeyName === 'fullName'.toLowerCase() || lCfgKeyName === 'title') {\n            return cfgValue.replace(/_/g, ' ')\n        } else {\n            return super.parseValue(lCfgKeyName, cfgValue)\n        }\n    }\n\n}\n","import { BaseConfig } from './BaseConfig'\nimport { MenuEntryCfg } from './MenuEntryCfg'\n\nexport class MenuCfg extends BaseConfig {\n\n    menuCount: number = 0\n    menus: MenuEntryCfg[] = []\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n    assignValue(objKey, lCfgKeyName, cfgValue): boolean {\n        if (lCfgKeyName.match(/menu\\d+/i)) {\n            this.menus.push(new MenuEntryCfg(cfgValue))\n            return true\n        }\n        return super.assignValue(objKey, lCfgKeyName, cfgValue)\n    }\n\n}\n","import { BaseConfig } from './BaseConfig'\n\nexport class RewardCfg extends BaseConfig {\n\n    display: boolean = true\n    wallpaper: string = ''\n    images: RewardImageCfg[] = []\n    texts: RewardTextCfg[] = []\n    boxImages: RewardImageCfg[] = []\n    fonts: RewardFontsCfg = null\n    flics: { flhFilepath: string, x: number, y: number, w: number, h: number } = null\n    scrollSpeed: number = 0\n    centreText: boolean = false\n    vertSpacing: number = 0\n    backFont: string = ''\n    font: string = ''\n    titleFont: string = ''\n    timer: number = 0\n    saveButton: any = ''\n    advanceButton: any = ''\n    completeText: string = ''\n    failedText: string = ''\n    quitText: string = ''\n    textPos: [number, number] = [0, 0]\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n    assignValue(objKey, lCfgKeyName, cfgValue): boolean {\n        if (lCfgKeyName === 'images') {\n            Object.values(cfgValue).forEach((imgConf) => this.images.push(new RewardImageCfg(imgConf)))\n            return true\n        } else if (lCfgKeyName === 'text') {\n            Object.values(cfgValue).forEach((imgConf) => this.texts.push(new RewardTextCfg(imgConf)))\n            return true\n        } else if (lCfgKeyName === 'boximages') {\n            Object.values(cfgValue).forEach((imgConf) => this.boxImages.push(new RewardImageCfg(imgConf)))\n            return true\n        } else if (lCfgKeyName === 'fonts') {\n            this.fonts = new RewardFontsCfg(cfgValue)\n            return true\n        } else {\n            return super.assignValue(objKey, lCfgKeyName, cfgValue)\n        }\n    }\n\n}\n\nexport class RewardImageCfg {\n\n    filePath: string = ''\n    x: number = 0\n    y: number = 0\n\n    constructor(cfgObj: any) {\n        [this.filePath, this.x, this.y] = cfgObj\n    }\n\n}\n\nexport class RewardTextCfg {\n\n    text: string = ''\n    x: number = 0\n    y: number = 0\n\n    constructor(cfgObj: any) {\n        [this.text, this.x, this.y] = cfgObj\n    }\n\n}\n\nexport class RewardFontsCfg extends BaseConfig {\n\n    crystals: string = ''\n    ore: string = ''\n    diggable: string = ''\n    constructions: string = ''\n    caverns: string = ''\n    figures: string = ''\n    rockMonsters: string = ''\n    oxygen: string = ''\n    timer: string = ''\n    score: string = ''\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n}\n","export const encodeChar: number[] = []\n\nfor (let c = 0; c < 256; c++) {\n    encodeChar[c] = c\n}\nencodeChar[130] = 0x00E4 // ä\nencodeChar[142] = 0x00C4 // Ä\nencodeChar[162] = 0x00F6 // ö\nencodeChar[167] = 0x00DC // Ü\nencodeChar[171] = 0x00FC // ü\nencodeChar[195] = 0x00DF // ß\n","import { encodeChar } from './EncodingHelper'\n\nexport class CfgFileParser {\n\n    static parse(buffer): any {\n        const result = {}\n        const ancestry = []\n        let activeObject = result\n        let isComment = false\n        let keyVal = 0 // 0 = looking for key, 1 = inside key, 1 = looking for value, 2 = inside value\n        let key = ''\n        let value = ''\n        // debug output is a bad idea here, buffer size is about 232.611 characters and has 6781 lines\n        for (let seek = 0; seek < buffer.length; seek++) {\n            let charCode = buffer[seek]\n            if (charCode === 123 && key === 'FullName') { // dirty workaround but in the original file { (123) was used instead of Ä (142)\n                charCode = 142\n            }\n            let charStr = String.fromCharCode(encodeChar[charCode])\n            if (charStr === ';' || charStr === '/') { // someone used // as a marker for a comment\n                isComment = true\n            } else if (charCode === 10 || charCode === 13) {\n                isComment = false\n            }\n            if (!isComment) {\n                if (charCode > 32) { // not a whitespace\n                    if (keyVal === 0) { // looking for key\n                        if (charStr === '}') {\n                            activeObject = ancestry.pop()\n                        } else {\n                            keyVal++\n                            key = charStr\n                        }\n                    } else if (keyVal === 1) { // inside key\n                        key += charStr\n                    } else if (keyVal === 2) { // looking for value\n                        if (charStr === '{') { // start of a new object key is identifier\n                            ancestry.push(activeObject)\n                            activeObject = {}\n                            ancestry[ancestry.length - 1][key] = activeObject\n                            keyVal = 0 // start looking for a key again\n                        } else {\n                            keyVal++\n                            value = charStr\n                        }\n                    } else if (keyVal === 3) { // inside value\n                        value += charStr\n                    }\n                } else { // some whitespace\n                    if (keyVal === 1) {\n                        keyVal++\n                    } else if (keyVal === 3) {\n                        keyVal = 0\n                        const parsed = CfgFileParser.parseValue(value)\n                        if (activeObject.hasOwnProperty(key)) {\n                            activeObject[key].push(parsed)\n                        } else {\n                            activeObject[key] = [parsed]\n                        }\n                    }\n                }\n            }\n        }\n\n        const stack = [result]\n        while (stack.length > 0) {\n            const obj = stack.pop()\n            Object.keys(obj).forEach((key) => {\n                const val = obj[key]\n                if (Array.isArray(val)) {\n                    if (val.length === 1) {\n                        obj[key] = val[0]\n                    } else {\n                        val.forEach((sub) => stack.push(sub))\n                    }\n                } else if (Object.keys(val).length > 1) {\n                    stack.push(val)\n                }\n            })\n        }\n\n        // apply some patches here\n        Object.values(result['Lego*']['Levels']).forEach((levelConf) => {\n            if (levelConf['CryoreMap']) {\n                levelConf['CryOreMap'] = levelConf['CryoreMap']  // typos... typos everywhere\n                delete levelConf['CryoreMap']\n            }\n            if (levelConf['CryOreMap']) {\n                levelConf['CryOreMap'] = levelConf['CryOreMap'].replace('Cryo_', 'Cror_')\n            }\n            if (levelConf['PredugMap']) {\n                levelConf['PreDugMap'] = levelConf['PredugMap']\n                delete levelConf['PredugMap']\n            }\n            const textureSet = levelConf['TextureSet']\n            if (Array.isArray(textureSet) && Array.isArray(textureSet[1])) {\n                levelConf['TextureSet'] = textureSet[1]\n            }\n        })\n\n        return result['Lego*']\n    }\n\n    static parseValue(val) {\n        function splitShrink(sep) {\n            val = val.split(sep).filter(val => val !== '').map(val => CfgFileParser.parseValue(val))\n            if (val.length === 0) {\n                val = ''\n            } else if (val.length === 1) {\n                val = val[0]\n            }\n        }\n\n        const num = Number(val)\n        if (isNaN(num)) {\n            val = val.toString().replace(/\\\\/g, '/')\n            const lVal = val.toLowerCase()\n            if (lVal === 'true') return true\n            if (lVal === 'false') return false\n            if (lVal === 'null') return ''\n            if (val.includes(':')) {\n                splitShrink.call(this, ':')\n            } else if (val.includes(',')) { // TODO improve cfg handling: what about strings\n                splitShrink.call(this, ',')\n            } else if (val.includes('|')) {\n                splitShrink.call(this, '|')\n            }\n            return val\n        } else {\n            return num\n        }\n    }\n\n}\n","import { encodeChar } from './EncodingHelper'\n\nexport class ObjectiveTextParser {\n\n    parseObjectiveTextFile(txtFileContent: Uint8Array) {\n        const result = {}\n        let state = PARSING_STATE.DROP\n        let currentLevel: LevelObjectiveTextEntry = null\n        let value = ''\n        let line = ''\n        for (let c = 0; c < txtFileContent.length; c++) {\n            const code = encodeChar[txtFileContent[c]]\n            let char = String.fromCharCode(code)\n            if (state === PARSING_STATE.DROP) {\n                if (char === '[') {\n                    if (currentLevel) result[currentLevel.key] = currentLevel\n                    currentLevel = new LevelObjectiveTextEntry()\n                    state = PARSING_STATE.KEY\n                } else if (currentLevel && char === ':') {\n                    const lLine = line.toLowerCase()\n                    if (lLine === 'objective') {\n                        line = ''\n                        state = PARSING_STATE.OBJECTIVE\n                    } else if (lLine === 'failure') {\n                        line = ''\n                        state = PARSING_STATE.FAILURE\n                    } else if (lLine === 'completion') {\n                        line = ''\n                        state = PARSING_STATE.COMPLETION\n                    } else if (lLine === 'crystalfailure') {\n                        line = ''\n                        state = PARSING_STATE.CRYSTAL_FAILURE\n                    }\n                    for (; c < txtFileContent.length && txtFileContent[c + 1] === '\\t'.charCodeAt(0); c++) {\n                    }\n                } else if (char === '\\n' || char === '\\r') {\n                    line = ''\n                } else {\n                    line += char\n                }\n            } else if (state === PARSING_STATE.KEY) {\n                if (char === ']') {\n                    currentLevel.key = value\n                    value = ''\n                    state = PARSING_STATE.DROP\n                } else if (char === '\\n' || char === '\\r') {\n                    throw 'Malformed objective text file'\n                } else {\n                    value += char\n                }\n            } else if (state === PARSING_STATE.OBJECTIVE) {\n                if (char === '\\n' || char === '\\r') {\n                    currentLevel.objective = value\n                    value = ''\n                    state = PARSING_STATE.DROP\n                } else {\n                    value += char\n                }\n            } else if (state === PARSING_STATE.FAILURE) {\n                if (char === '\\n' || char === '\\r') {\n                    currentLevel.failure = value\n                    value = ''\n                    state = PARSING_STATE.DROP\n                } else {\n                    value += char\n                }\n            } else if (state === PARSING_STATE.COMPLETION) {\n                if (char === '\\n' || char === '\\r') {\n                    currentLevel.completion = value\n                    value = ''\n                    state = PARSING_STATE.DROP\n                } else {\n                    value += char\n                }\n            } else if (state === PARSING_STATE.CRYSTAL_FAILURE) {\n                if (char === '\\n' || char === '\\r') {\n                    currentLevel.crystalFailure = value\n                    value = ''\n                    state = PARSING_STATE.DROP\n                } else {\n                    value += char\n                }\n            }\n        }\n        if (currentLevel) result[currentLevel.key] = currentLevel\n        currentLevel = null\n        return result\n    }\n\n}\n\nenum PARSING_STATE {\n\n    DROP,\n    KEY,\n    OBJECTIVE,\n    FAILURE,\n    COMPLETION,\n    CRYSTAL_FAILURE,\n\n}\n\nexport class LevelObjectiveTextEntry {\n\n    key: string\n    objective: string\n    failure: string\n    completion: string\n    crystalFailure: string\n\n}\n","export enum WorkerMessageType {\n\n    MSG,\n    CFG,\n    CACHE_MISS,\n    SFX,\n    ASSET,\n    DONE,\n\n}\n","// The RockRaidersObjectNotation (RON) format is related to JSON\n\nexport class RonFile {\n\n    static parse(content: string) {\n        const lines: string[][] = content.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n') // normalize newlines\n            .replace(/\\t/g, ' ') // tabs to spaces\n            .split('\\n')\n            .map((l) => { // strip comments from each line\n                const indDoubleSlash = l.indexOf('//')\n                if (indDoubleSlash > -1) l = l.substring(0, indDoubleSlash)\n                const indComment = l.indexOf(';')\n                if (indComment > -1) l = l.substring(0, indComment)\n                return l\n            })\n            .map((l) => { // remove whitespace at start/end of lines\n                l = l.trim()\n                return l\n            })\n            .filter(l => l !== '') // filter empty lines\n            .map((v) => v.split(' ').filter(v => v !== ''))\n        const root = {}\n        RonFile.parseObj(root, lines, 0)\n        return root\n    }\n\n    static parseObj(obj: {}, lines: string[][], start): number {\n        for (let c = start; c < lines.length; c++) {\n            const [name, val] = lines[c]\n            const key = name.toLowerCase()\n            if (val === '{') {\n                obj[key] = {}\n                c = this.parseObj(obj[key], lines, c + 1)\n            } else if (key === '}') {\n                return c\n            } else {\n                // parse values\n                let value: any = val.split(':').filter(v => v !== '') // there is key::value\n                    .map(v => v.split(',').map(v => v.split('|').map(v => this.parseValue(v))))\n                while (value.length === 1) value = value[0] // replace arrays with only one value\n                obj[key] = value\n            }\n        }\n        return lines.length\n    }\n\n    static parseValue(value: string) {\n        const num = Number(value)\n        const lv = value.toLowerCase()\n        if (!isNaN(num)) {\n            return num\n        } else if (lv === 'false') {\n            return false\n        } else if (lv === 'true') {\n            return true\n        } else {\n            return value\n        }\n    }\n\n}\n","import { encodeChar } from './EncodingHelper'\n\n/**\n * Handles the extraction of single files from a bigger WAD data blob\n */\nexport class WadFile {\n\n    buffer: Int8Array = null\n    entryIndexByName: Map<string, number> = new Map()\n    fLength: number[] = []\n    fStart: number[] = []\n\n    /**\n     * Validate and parse the given data object as binary blob of a WAD file\n     * @param data binary blob\n     * @param debug enable/disable debug output while parsing\n     */\n    parseWadFile(data, debug = false) {\n        const dataView = new DataView(data)\n        this.buffer = new Int8Array(data)\n        let pos = 0\n        if (String.fromCharCode.apply(null, this.buffer.slice(pos, 4)) !== 'WWAD') {\n            throw 'Invalid WAD0 file provided'\n        }\n        if (debug) {\n            console.log('WAD0 file seems legit')\n        }\n        pos = 4\n        const numberOfEntries = dataView.getInt32(pos, true)\n        if (debug) {\n            console.log(numberOfEntries)\n        }\n        pos = 8\n\n        let bufferStart = pos\n        for (let i = 0; i < numberOfEntries; pos++) {\n            if (this.buffer[pos] === 0) {\n                this.entryIndexByName.set(String.fromCharCode.apply(null, this.buffer.slice(bufferStart, pos)).replace(/\\\\/g, '/').toLowerCase(), i)\n                bufferStart = pos + 1\n                i++\n            }\n        }\n\n        if (debug) {\n            console.log(this.entryIndexByName)\n        }\n\n        for (let i = 0; i < numberOfEntries; pos++) {\n            if (this.buffer[pos] === 0) {\n                bufferStart = pos + 1\n                i++\n            }\n        }\n\n        if (debug) {\n            console.log('Offset after absolute original names is ' + pos)\n        }\n\n        for (let i = 0; i < numberOfEntries; i++) {\n            this.fLength[i] = dataView.getInt32(pos + 8, true)\n            this.fStart[i] = dataView.getInt32(pos + 12, true)\n            pos += 16\n        }\n\n        if (debug) {\n            console.log(this.fLength)\n            console.log(this.fStart)\n        }\n    }\n\n    /**\n     * Returns the entries content extracted by name from the managed WAD file\n     * @param entryName Entry name to be extracted\n     * @returns {Uint8Array} Returns the content as Uint8Array\n     */\n    getEntryData(entryName): Uint8Array {\n        return new Uint8Array(this.getEntryBuffer(entryName))\n    }\n\n    /**\n     * Returns the entries content as text extracted by name from the managed WAD file\n     * @param entryName Entry name to be extracted\n     * @returns {string} Returns the content as String\n     */\n    getEntryText(entryName): string {\n        let result = ''\n        this.getEntryData(entryName).forEach((c) => result += String.fromCharCode(encodeChar[c]))\n        return result\n    }\n\n    /**\n     * Returns the entries content by name extracted from the managed WAD file\n     * @param entryName Entry name to be extracted\n     * @returns {Int8Array} Returns the content as buffer slice\n     */\n    getEntryBuffer(entryName): Int8Array {\n        const index = this.entryIndexByName.get(entryName.toLowerCase())\n        if (index === undefined || index === null) {\n            throw 'Entry \\'' + entryName + '\\' not found in WAD file'\n        }\n        return this.buffer.slice(this.fStart[index], this.fStart[index] + this.fLength[index])\n    }\n\n    filterEntryNames(regexStr) {\n        const regex = new RegExp(regexStr.toLowerCase())\n        const result = []\n        this.entryIndexByName.forEach((index, entry) => {\n            if (entry.match(regex)) result.push(entry)\n        })\n        return result\n    }\n\n}\n","export function getPath(url: string): string {\n    if (!url) return url\n    let strUrl = url.toString().replace(/\\\\/g, '/')\n    if (strUrl.startsWith('/')) strUrl = strUrl.substring(1)\n    const lastInd = strUrl.lastIndexOf('/')\n    strUrl = strUrl.substring(0, lastInd + 1)\n    if (strUrl.startsWith('/')) strUrl = strUrl.substring(1)\n    return strUrl\n}\n\nexport function getFilename(url: string): string {\n    if (!url) return url\n    let strUrl = url.toString().replace(/\\\\/g, '/')\n    if (strUrl.startsWith('/')) strUrl = strUrl.substring(1)\n    const lastInd = strUrl.lastIndexOf('/')\n    return strUrl.substring(lastInd + 1)\n}\n\nexport function iGet(obj, ...keys: string[]): any {\n    keys.forEach((keyname) => {\n        obj = Object.keys(obj)\n            .filter((key) => key.toLowerCase() === keyname.toLowerCase())\n            .map((key) => obj[key])\n        obj = obj ? obj[0] : obj\n    })\n    return obj\n}\n","import { LevelEntryCfg, LevelsCfg } from '../../cfg/LevelsCfg'\nimport { MenuCfg } from '../../cfg/MenuCfg'\nimport { RewardCfg } from '../../cfg/RewardCfg'\nimport { WAD_CACHE_DB_NAME } from '../../params'\nimport { AlphaBitmapDecoder } from './AlphaBitmapDecoder'\nimport { CfgFileParser } from './CfgFileParser'\nimport { ObjectiveTextParser } from './ObjectiveTextParser'\nimport { RonFile } from './RonFile'\nimport { WadFile } from './WadFile'\nimport { getFilename, getPath, iGet } from './WadUtil'\n\nexport class WadLoader {\n\n    wad0File: WadFile = null\n    wad1File: WadFile = null\n    startTime: Date\n    assetIndex: number = 0\n    totalResources: number = 0\n    assetsFromCfgByName: Map<string, { method: ((name: string, callback: (any) => void) => void), assetPath: string, optional: boolean }> = new Map()\n\n    onMessage: (msg: string) => any = (msg: string) => {\n        console.log(msg)\n    }\n    onInitialLoad: (totalResources: number, cfg: any) => any = () => {\n        console.log('Initial loading done.')\n    }\n    onAssetLoaded: (assetIndex: number, assetName: string, assetObj: any) => any = () => {\n    }\n    onLoadDone: (totalResources: number, loadingTimeSeconds: string) => any = (totalResources: number, loadingTimeSeconds: string) => {\n        console.log('Loading of about ' + totalResources + ' assets complete! Total load time: ' + loadingTimeSeconds + ' seconds.')\n    }\n\n    loadWadImageAsset(name: string, callback: (obj: ImageData) => any) {\n        const data = this.wad0File.getEntryData(name)\n        const imgData = AlphaBitmapDecoder.parse(data)\n        callback(imgData)\n    }\n\n    loadWadTexture(name: string, callback: (obj: ImageData) => any) {\n        const data = this.wad0File.getEntryData(name)\n        const alphaIndexMatch = getFilename(name).match(/^a(\\d+).+/i)\n        const alphaIndex = alphaIndexMatch ? parseInt(alphaIndexMatch[1]) : null\n        const imgData = AlphaBitmapDecoder.parse(data, alphaIndex)\n        if (name.toLowerCase().startsWith('miscanims/crystal')) { // XXX fix crystal lwo loading\n            callback(WadLoader.grayscaleToGreen(imgData))\n        } else {\n            callback(imgData)\n        }\n    }\n\n    private static grayscaleToGreen(imgData: ImageData): ImageData {\n        const arr = imgData.data\n        for (let c = 0; c < arr.length; c += 4) {\n            arr[c] = 0\n            arr[c + 2] = 0\n        }\n        return imgData\n    }\n\n    loadAlphaImageAsset(name: string, callback: (obj: ImageData) => any) {\n        const data = this.wad0File.getEntryData(name)\n        const imgData = AlphaBitmapDecoder.parse(data)\n        for (let n = 0; n < imgData.data.length; n += 4) {\n            if (imgData.data[n] <= 2 && imgData.data[n + 1] <= 2 && imgData.data[n + 2] <= 2) { // Interface/Reward/RSoxygen.bmp uses 2/2/2 as \"black\" alpha background\n                imgData.data[n + 3] = 0\n            }\n        }\n        callback(imgData)\n    }\n\n    loadFontImageAsset(name: string, callback: (obj: ImageData) => any) {\n        const data = this.wad0File.getEntryData(name)\n        const imgData = AlphaBitmapDecoder.parse(data)\n        callback(imgData)\n    }\n\n    loadNerpAsset(name: string, callback: (obj: string) => any) {\n        name = name.replace(/.npl$/, '.nrn')\n        const script = this.wad0File.getEntryText(name)\n        callback(script)\n    }\n\n    loadNerpMsg(name: string, callback: (obj: any) => any) {\n        const result = this.parseNerpMsgFile(this.wad0File, name)\n        const msg1 = this.parseNerpMsgFile(this.wad1File, name)\n        for (let c = 0; c < msg1.length; c++) {\n            const m1 = msg1[c]\n            if (!m1) continue\n            if (m1.txt) {\n                result[c].txt = m1.txt\n            }\n            if (m1.snd) {\n                result[c].snd = m1.snd\n            }\n        }\n        callback(result)\n    }\n\n    parseNerpMsgFile(wadFile: WadFile, name: string) {\n        const result = []\n        const lines = wadFile.getEntryText(name).split(/[\\r\\n]/).map((l) => l?.trim()).filter((l) => !!l)\n        for (let c = 0; c < lines.length; c++) {\n            const line = lines[c]\n            if (line === '-') {\n                continue\n            }\n            // line formatting differs between wad0 and wad1 files!\n            const txt0Match = line.match(/\\\\\\[([^\\\\]+)\\\\](\\s*#([^#]+)#)?/)\n            const txt1Match = line.match(/^([^$][^#]+)(\\s*#([^#]+)#)?/)\n            const sndMatch = line.match(/\\$([^\\s]+)\\s*([^\\s]+)/)\n            if (wadFile === this.wad0File && txt0Match) {\n                const index = txt0Match[3] !== undefined ? this.numericNameToNumber(txt0Match[3]) : c // THIS IS MADNESS! #number# at the end of line is OPTIONAL\n                result[index] = result[index] || {}\n                result[index].txt = txt0Match[1]\n            } else if (wadFile === this.wad1File && txt1Match) {\n                const index = txt1Match[3] !== undefined ? this.numericNameToNumber(txt1Match[3]) : c // THIS IS MADNESS! #number# at the end of line is OPTIONAL\n                result[index] = result[index] || {}\n                result[index].txt = txt1Match[1].replace(/_/g, ' ').trim()\n            } else if (sndMatch && sndMatch.length === 3) {\n                const index = this.numericNameToNumber(sndMatch[1])\n                result[index] = result[index] || {}\n                result[index].snd = sndMatch[2].replace(/\\\\/g, '/')\n            } else {\n                throw 'Line in nerps message file did not match anything'\n            }\n        }\n        return result\n    }\n\n    numericNameToNumber(name: string) {\n        if (name === undefined) {\n            throw 'Numeric name must not be undefined'\n        }\n        const digits = {one: 1, two: 2, three: 3, four: 4, five: 5, six: 6, seven: 7, eight: 8, nine: 9}\n        const specials = {\n            ten: 10, eleven: 11, twelve: 12, thirteen: 13, fourteen: 14, fifteen: 15,\n            sixteen: 16, seventeen: 17, eighteen: 18, nineteen: 19,\n        }\n        const tens = {twenty: 20, thirty: 30, forty: 40}\n        let number = specials[name] || digits[name]\n        if (number === undefined) {\n            Object.keys(tens).forEach(ten => {\n                if (name.startsWith(ten)) {\n                    const digitName = name.replace(ten, '')\n                    number = tens[ten] + (digitName ? digits[digitName] : 0)\n                }\n            })\n        }\n        if (number === undefined) {\n            throw 'Found unexpected numeric name ' + name\n        }\n        return number\n    }\n\n    loadObjectiveTexts(name: string, callback: (obj: any) => any) {\n        const txtContent = this.wad1File.getEntryData(name)\n        const result = new ObjectiveTextParser().parseObjectiveTextFile(txtContent)\n        callback(result)\n    }\n\n    loadMapAsset(name: string, callback: (obj: any) => any) {\n        const buffer = this.wad0File.getEntryData(name)\n        if (buffer.length < 13 || String.fromCharCode.apply(String, buffer.slice(0, 3)) !== 'MAP') {\n            console.log('Invalid map data provided')\n            return\n        }\n        const map = {width: buffer[8], height: buffer[12], level: []}\n        let row = []\n        for (let seek = 16; seek < buffer.length; seek += 2) {\n            row.push(buffer[seek])\n            if (row.length >= map.width) {\n                map.level.push(row)\n                row = []\n            }\n        }\n        callback(map)\n    }\n\n    loadObjectListAsset(name: string, callback: (obj: any) => any) {\n        const lines = this.wad0File.getEntryText(name).split('\\n')\n        const objectList = []\n        let currentObject = null\n        for (let c = 0; c < lines.length; c++) {\n            const line = lines[c].trim()\n            const objectStartMatch = line.match(/(.+)\\s+{/)\n            const drivingMatch = line.match(/driving\\s+(.+)/)\n            if (line.length < 1 || line.startsWith(';') || line.startsWith('Lego*')) {\n                // ignore empty lines, comments and the root object\n            } else if (objectStartMatch) {\n                currentObject = {}\n                objectList[objectStartMatch[1]] = currentObject\n            } else if (line === '}') {\n                currentObject = null\n            } else if (drivingMatch) {\n                currentObject.driving = drivingMatch[1]\n            } else {\n                const split = line.split(/\\s+/)\n                if (split.length !== 2 || currentObject === null) {\n                    throw 'Unexpected key value entry: ' + line\n                }\n                const key = split[0]\n                let val: any = split[1]\n                if (key === 'xPos' || key === 'yPos' || key === 'heading') {\n                    val = parseFloat(val)\n                } else if (key !== 'type') {\n                    throw 'Unexpected key value entry: ' + line\n                }\n                currentObject[key] = val\n            }\n        }\n        callback(objectList)\n    }\n\n    /**\n     * Load a WAV file format sound asset from the WAD file.\n     * @param path Path inside the WAD file\n     * @param callback A callback that is triggered after the file has been loaded\n     * @param key Optional key to store the sound, should look like SND_pilotdrill\n     */\n    loadWavAsset(path, callback, key) {\n        console.error('wav asset loading not yet implemented') // TODO implement this\n        // const snd = document.createElement('audio');\n        // if (callback != null) {\n        //     snd.oncanplay = function () {\n        //         snd.oncanplay = null; // otherwise the callback is triggered multiple times\n        //         const keyPath = key || path;\n        //         // use array, because sounds have multiple variants sometimes\n        //         ResourceManager.sounds[keyPath] = ResourceManager.sounds[keyPath] || [];\n        //         ResourceManager.sounds[keyPath].push(snd);\n        //         callback();\n        //     };\n        // }\n        // // try (localized) wad1 file first, then use generic wad0 file\n        // try {\n        //     snd.src = this.wad1File.getEntryUrl(path);\n        // } catch (e) {\n        //     snd.src = this.wad0File.getEntryUrl(path);\n        // }\n    }\n\n    loadLWOFile(lwoFilepath: string, callback: (obj: any) => any) {\n        let lwoContent\n        try {\n            lwoContent = this.wad0File.getEntryBuffer(lwoFilepath)\n        } catch (e) {\n            try {\n                lwoContent = this.wad0File.getEntryBuffer('world/shared/' + getFilename(lwoFilepath))\n            } catch (e) {\n                console.error('Could not load LWO file ' + lwoFilepath + '; Error: ' + e)\n                return\n            }\n        }\n        callback(lwoContent.buffer)\n    }\n\n    registerAllAssets(mainConf: any) { // dynamically register all assets from config\n        // add fonts and cursors\n        this.addAssetFolder(this.loadFontImageAsset, 'Interface/Fonts/')\n        this.addAssetFolder(this.loadAlphaImageAsset, 'Interface/Pointers/')\n        // add menu assets\n        this.addMenuWithAssets(mainConf, 'MainMenuFull', false)\n        this.addMenuWithAssets(mainConf, 'PausedMenu')\n        this.addMenuWithAssets(mainConf, 'OptionsMenu')\n        this.addAsset(this.loadAlphaImageAsset, 'Interface/BriefingPanel/BriefingPanel.bmp')\n        this.addAsset(this.loadObjectiveTexts, 'Languages/ObjectiveText.txt')\n        // add in-game assets\n        this.addAlphaImageFolder('Interface/TopPanel/') // top panel\n        this.addAlphaImageFolder('Interface/RightPanel/') // crystal side bar\n        this.addAlphaImageFolder('Interface/RadarPanel/')\n        this.addAlphaImageFolder('Interface/MessagePanel/')\n        this.addAsset(this.loadWadImageAsset, 'Interface/Airmeter/msgpanel_air_juice.bmp')\n        this.addAlphaImageFolder('Interface/InfoPanel/')\n        this.addAlphaImageFolder('Interface/PriorityPanel/')\n        this.addAlphaImageFolder('Interface/Priorities')\n        this.addAlphaImageFolder('Interface/CameraControl/')\n        this.addAlphaImageFolder('Interface/MessageTabs/')\n        this.addAlphaImageFolder('Interface/IconPanel/')\n        this.addAlphaImageFolder('Interface/Icons/')\n        this.addAlphaImageFolder('Interface/Menus/')\n        this.addAlphaImageFolder('Interface/Buttons/')\n        this.addAlphaImageFolder('Interface/InfoImages/')\n        this.addAssetFolder(this.loadAlphaImageAsset, 'Interface/FrontEnd/Vol_')\n        this.addAssetFolder(this.loadWadImageAsset, 'Interface/FrontEnd/lp_')\n        this.addAsset(this.loadAlphaImageAsset, 'Interface/FrontEnd/LowerPanel.bmp')\n        // level files\n        this.addAsset(this.loadNerpAsset, 'Levels/nerpnrn.h')\n        const levelsCfg = new LevelsCfg(iGet(mainConf, 'Levels'))\n        this.onAssetLoaded(0, 'Levels', levelsCfg)\n        Object.values(levelsCfg.levelsByName).forEach((level: LevelEntryCfg) => {\n            level.menuBMP.forEach((bmpName) => {\n                this.addAsset(this.loadAlphaImageAsset, bmpName)\n            })\n            this.addAsset(this.loadMapAsset, level.surfaceMap)\n            this.addAsset(this.loadMapAsset, level.predugMap)\n            this.addAsset(this.loadMapAsset, level.terrainMap)\n            this.addAsset(this.loadMapAsset, level.blockPointersMap, true)\n            this.addAsset(this.loadMapAsset, level.cryOreMap)\n            this.addAsset(this.loadMapAsset, level.pathMap, true)\n            if (level.fallinMap) this.addAsset(this.loadMapAsset, level.fallinMap)\n            if (level.erodeMap) this.addAsset(this.loadMapAsset, level.erodeMap)\n            this.addAsset(this.loadObjectListAsset, level.oListFile)\n            this.addAsset(this.loadNerpAsset, level.nerpFile)\n            this.addAsset(this.loadNerpMsg, level.nerpMessageFile)\n        })\n        // load all shared textures\n        this.addTextureFolder('World/Shared/')\n        // load all building types\n        const buildingTypes = mainConf['BuildingTypes']\n        Object.values(buildingTypes).forEach((bType: string) => {\n            const bName = bType.split('/')[1]\n            const aeFile = bType + '/' + bName + '.ae'\n            this.addAnimatedEntity(aeFile)\n        })\n        this.addAnimatedEntity('mini-figures/pilot/pilot.ae')\n        // load monsters\n        this.addAnimatedEntity('Creatures/SpiderSB/SpiderSB.ae')\n        this.addAnimatedEntity('Creatures/bat/bat.ae')\n        // load misc objects\n        this.addAnimatedEntity(iGet(mainConf, 'MiscObjects', 'Dynamite') + '/Dynamite.ae')\n        this.addAnimatedEntity(iGet(mainConf, 'MiscObjects', 'Barrier') + '/Barrier.ae')\n        this.addAsset(this.loadLWOFile, 'World/Shared/Crystal.lwo') // highpoly version, but unused?\n        this.addAsset(this.loadLWOFile, iGet(mainConf, 'MiscObjects', 'Crystal') + '.lwo')\n        this.addTextureFolder('MiscAnims/Crystal/')\n        this.addAsset(this.loadLWOFile, iGet(mainConf, 'MiscObjects', 'Ore') + '.lwo')\n        this.addAsset(this.loadWadTexture, 'MiscAnims/Ore/Ore.bmp')\n        this.addAsset(this.loadLWOFile, 'World/Shared/Brick.lwo')\n        this.addAsset(this.loadLWOFile, iGet(mainConf, 'MiscObjects', 'ProcessedOre') + '.lwo')\n        this.addAsset(this.loadLWOFile, iGet(mainConf, 'MiscObjects', 'ElectricFence') + '.lwo')\n        this.addTextureFolder('Buildings/E-Fence/')\n        this.addAnimatedEntity(iGet(mainConf, 'MiscObjects', 'Barrier') + '/Barrier.ae')\n        this.addAnimatedEntity('MiscAnims/Dynamite/Dynamite.ae')\n        this.addLWSFile('MiscAnims/RockFall/Rock3Sides.lws')\n        this.addTextureFolder('MiscAnims/RockFall/')\n        // spaces\n        this.addTextureFolder('World/WorldTextures/IceSplit/Ice')\n        this.addTextureFolder('World/WorldTextures/LavaSplit/Lava')\n        this.addTextureFolder('World/WorldTextures/RockSplit/Rock')\n        // reward screen\n        const rewardCfg = new RewardCfg(iGet(mainConf, 'Reward'))\n        this.onAssetLoaded(0, 'Reward', rewardCfg)\n        this.addAsset(this.loadWadImageAsset, rewardCfg.wallpaper)\n        this.addAsset(this.loadFontImageAsset, rewardCfg.backFont)\n        Object.values(rewardCfg.fonts).forEach(imgPath => this.addAsset(this.loadFontImageAsset, imgPath))\n        rewardCfg.images.forEach(img => this.addAsset(this.loadAlphaImageAsset, img.filePath))\n        rewardCfg.boxImages.forEach(img => this.addAsset(this.loadWadImageAsset, img.filePath))\n        rewardCfg.saveButton.splice(0, 4).forEach(img => this.addAsset(this.loadWadImageAsset, img))\n        rewardCfg.advanceButton.splice(0, 4).forEach(img => this.addAsset(this.loadWadImageAsset, img))\n        // // sounds\n        // const samplesConf = mainConf['Samples'];\n        // Object.keys(samplesConf).forEach(sndKey => {\n        //     let sndPath = samplesConf[sndKey] + '.wav';\n        //     if (sndKey.startsWith('!')) { // TODO no clue what this means... loop? duplicate?!\n        //         sndKey = sndKey.slice(1);\n        //     }\n        //     if (sndPath.startsWith('*')) { // TODO no clue what this means... don't loop, see telportup\n        //         sndPath = sndPath.slice(1);\n        //     } else if (sndPath.startsWith('@')) {\n        //         // sndPath = sndPath.slice(1);\n        //         // console.warn('Sound ' + sndPath + ' must be loaded from program files folder. Not yet implemented!');\n        //         return;\n        //     }\n        //     sndPath.split(',').forEach(sndPath => {\n        //         this.addAsset(this.loadWavAsset, sndPath, false, sndKey);\n        //     });\n        // });\n    }\n\n    addAnimatedEntity(aeFile: string) {\n        const content = this.wad0File.getEntryText(aeFile)\n        const cfgRoot = iGet(RonFile.parse(content), 'Lego*')\n        this.onAssetLoaded(0, aeFile, cfgRoot)\n        const path = getPath(aeFile);\n        ['HighPoly', 'MediumPoly', 'LowPoly'].forEach((polyType) => { // TODO add 'FPPoly' (contains two cameras)\n            const cfgPoly = iGet(cfgRoot, polyType)\n            if (cfgPoly) {\n                Object.keys(cfgPoly).forEach((key) => {\n                    this.addAsset(this.loadLWOFile, path + cfgPoly[key] + '.lwo')\n                })\n            }\n        })\n        const activities = iGet(cfgRoot, 'Activities')\n        if (activities) {\n            Object.keys(activities).forEach((activity) => {\n                try {\n                    let keyname = iGet(activities, activity)\n                    const act = iGet(cfgRoot, keyname)\n                    const file = iGet(act, 'FILE')\n                    const isLws = iGet(act, 'LWSFILE') === true\n                    if (isLws) {\n                        this.addLWSFile(path + file + '.lws')\n                    } else {\n                        console.error('Found activity which is not an LWS file')\n                    }\n                } catch (e) {\n                    console.error(e)\n                    console.log(cfgRoot)\n                    console.log(activities)\n                    console.log(activity)\n                }\n            })\n        }\n        // load all textures for this type\n        this.addTextureFolder(getPath(aeFile))\n    }\n\n    addLWSFile(lwsFilepath: string) {\n        const content = this.wad0File.getEntryText(lwsFilepath)\n        this.onAssetLoaded(0, lwsFilepath, content)\n        const lwoFiles: string[] = this.extractLwoFiles(getPath(lwsFilepath), content)\n        lwoFiles.forEach((lwoFile) => this.addAsset(this.loadLWOFile, lwoFile))\n    }\n\n    extractLwoFiles(path: string, content: string): string[] {\n        const lines: string[] = content.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n') // normalize newlines\n            .replace(/\\t/g, ' ') // tabs to spaces\n            .split('\\n')\n            .map((l) => l.trim())\n\n        if (lines[0] !== 'LWSC') {\n            throw 'Invalid start of file! Expected \\'LWSC\\' in first line'\n        }\n\n        return lines.filter((line) => line.toLowerCase().startsWith('LoadObject '.toLowerCase()))\n            .map((objLine) => path + getFilename(objLine.substring('LoadObject '.length)).toLowerCase())\n    }\n\n    addAlphaImageFolder(folderPath: string) {\n        this.addAssetFolder(this.loadAlphaImageAsset, folderPath)\n    }\n\n    addTextureFolder(folderPath: string) {\n        this.addAssetFolder(this.loadWadTexture, folderPath)\n    }\n\n    addAssetFolder(callback: (name: string, callback: (obj: any) => any) => void, folderPath) {\n        this.wad0File.filterEntryNames(folderPath + '.+\\\\.bmp').forEach((assetPath) => {\n            this.addAsset(callback, assetPath)\n        })\n    }\n\n    addMenuWithAssets(mainConf, name: string, menuImageAlpha: boolean = true) {\n        const menuCfg = new MenuCfg(iGet(mainConf, 'Menu', name))\n        this.onAssetLoaded(0, name, menuCfg)\n        menuCfg.menus.forEach((menuCfg) => {\n            const method = menuImageAlpha ? this.loadAlphaImageAsset : this.loadWadImageAsset\n            const menuImage = Array.isArray(menuCfg.menuImage) ? menuCfg.menuImage[0] : menuCfg.menuImage\n            this.addAsset(method, menuImage)\n            this.addAsset(this.loadFontImageAsset, menuCfg.menuFont)\n            this.addAsset(this.loadFontImageAsset, menuCfg.loFont)\n            this.addAsset(this.loadFontImageAsset, menuCfg.hiFont)\n        })\n    }\n\n    addAsset(method: (name: string, callback: (obj: any) => any) => void, assetPath, optional = false) {\n        if (!assetPath || this.assetsFromCfgByName.hasOwnProperty(assetPath) || assetPath === 'NULL') {\n            return // do not load assets twice\n        }\n        this.assetsFromCfgByName.set(assetPath, {method: method.bind(this), assetPath: assetPath, optional: optional})\n    }\n\n    loadAssetsParallel() {\n        const promises = []\n        const that = this\n        this.assetsFromCfgByName.forEach((asset) => {\n            promises.push(new Promise<void>((resolve) => {\n                try {\n                    asset.method(asset.assetPath, (assetObj) => {\n                        this.assetIndex++\n                        that.onAssetLoaded(this.assetIndex, asset.assetPath, assetObj)\n                        resolve()\n                    })\n                } catch (e) {\n                    if (!asset.optional) throw e\n                    this.assetIndex++\n                    that.onAssetLoaded(this.assetIndex, asset.assetPath, null)\n                    resolve()\n                }\n            }))\n        })\n        Promise.all(promises).then(() => {\n            // indicate that loading has finished, and display the total loading time\n            const loadingTimeSeconds = ((new Date().getTime() - this.startTime.getTime()) / 1000).toFixed(3).toString()\n            this.onLoadDone(this.totalResources, loadingTimeSeconds)\n        })\n    }\n\n    startWithCachedFiles(onCacheMiss: () => any) {\n        this.startTime = new Date()\n        const _onerror = () => {\n            this.onMessage('WAD files not found in cache')\n            onCacheMiss()\n        }\n        this.onMessage('Loading WAD files from cache...')\n        const that = this\n        this.openLocalCache((objectStore) => {\n            const request1 = objectStore.get('wad0')\n            request1.onerror = _onerror\n            request1.onsuccess = function () {\n                if (request1.result === undefined) {\n                    _onerror()\n                    return\n                }\n                // console.log('First WAD file loaded from cache after ' + ((new Date().getTime() - that.startTime.getTime()) / 1000));\n                that.wad0File = new WadFile()\n                for (let prop in request1.result) { // class info are runtime info and not stored in cache => use copy constructor\n                    if (request1.result.hasOwnProperty(prop)) {\n                        that.wad0File[prop] = request1.result[prop]\n                    }\n                }\n                const request2 = objectStore.get('wad1')\n                request2.onerror = _onerror\n                request2.onsuccess = function () {\n                    if (request2.result === undefined) {\n                        _onerror()\n                        return\n                    }\n                    that.wad1File = new WadFile()\n                    for (let prop in request2.result) { // class info are runtime info and not stored in cache => use copy constructor\n                        if (request2.result.hasOwnProperty(prop)) {\n                            that.wad1File[prop] = request2.result[prop]\n                        }\n                    }\n                    console.log('WAD files loaded from cache after ' + ((new Date().getTime() - that.startTime.getTime()) / 1000))\n                    that.startLoadingProcess()\n                }\n            }\n        })\n    }\n\n    /**\n     * Private helper method, which combines file loading and waits for them to become ready before continuing\n     * @param wad0Url Url to parse the LegoRR0.wad file from\n     * @param wad1Url Url to parse the LegoRR1.wad file from\n     */\n    loadWadFiles(wad0Url: string, wad1Url: string) {\n        const that = this\n        Promise.all([this.loadWadFile(wad0Url), this.loadWadFile(wad1Url)]).then(wadFiles => {\n            that.wad0File = wadFiles[0] as WadFile\n            that.wad1File = wadFiles[1] as WadFile\n            this.openLocalCache((objectStore) => {\n                objectStore.put(that.wad0File, 'wad0')\n                objectStore.put(that.wad1File, 'wad1')\n            })\n            this.startLoadingProcess()\n        })\n    }\n\n    /**\n     * Read WAD file as binary blob from the given URL and parse it on success\n     * @param url the url to the WAD file, can be local file url (file://...) too\n     */\n    loadWadFile(url: string) {\n        return new Promise(resolve => {\n            console.log('Loading WAD file from ' + url)\n            fetch(url).then((response) => {\n                if (response.ok) {\n                    response.arrayBuffer().then((buffer) => {\n                        const wadFile = new WadFile()\n                        wadFile.parseWadFile(buffer)\n                        resolve(wadFile)\n                    })\n                }\n            }).catch((e) => console.error(e))\n        })\n    }\n\n    openLocalCache(onopen: (IDBObjectStore) => void) {\n        const request: IDBOpenDBRequest = indexedDB.open(WAD_CACHE_DB_NAME)\n        request.onupgradeneeded = function () {\n            const db = request.result\n            if (db.objectStoreNames.contains('wadfiles')) {\n                db.deleteObjectStore('wadfiles')\n            }\n            db.createObjectStore('wadfiles')\n        }\n        request.onsuccess = function () {\n            const db = request.result\n            const transaction = db.transaction(['wadfiles'], 'readwrite')\n            const objectStore = transaction.objectStore('wadfiles')\n            onopen(objectStore)\n        }\n    }\n\n    /**\n     * Load essential files, to begin the chain of asset loading\n     */\n    startLoadingProcess() {\n        this.startTime = new Date()\n        this.assetsFromCfgByName = new Map()\n        this.onMessage('Loading configuration...')\n        const cfg = CfgFileParser.parse(this.wad1File.getEntryData('Lego.cfg'))\n        this.registerAllAssets(cfg)\n        this.onMessage('Loading initial assets...')\n        Promise.all([\n            new Promise<void>((resolve) => {\n                const name = iGet(cfg, 'Main', 'LoadScreen') // loading screen image\n                this.loadWadImageAsset(name, (imgData) => {\n                    this.onAssetLoaded(0, name, imgData)\n                    resolve()\n                })\n            }),\n            new Promise<void>((resolve) => {\n                const name = iGet(cfg, 'Main', 'ProgressBar') // loading bar container image\n                this.loadWadImageAsset(name, (imgData) => {\n                    this.onAssetLoaded(0, name, imgData)\n                    resolve()\n                })\n            }),\n            new Promise<void>((resolve) => {\n                const name = iGet(cfg, 'Pointers', 'Pointer_Standard')\n                this.loadAlphaImageAsset(name, (imgData) => {\n                    this.onAssetLoaded(0, name, imgData)\n                    resolve()\n                })\n            }),\n            new Promise<void>((resolve) => {\n                const name = 'Interface/Fonts/Font5_Hi.bmp'\n                this.loadFontImageAsset(name, (imgData) => {\n                    this.onAssetLoaded(0, name, imgData)\n                    resolve()\n                })\n            }),\n        ]).then(() => {\n            this.onMessage('Start loading assets...')\n            this.totalResources = this.assetsFromCfgByName.size\n            this.onInitialLoad(this.totalResources, cfg)\n            this.assetIndex = 0\n            this.loadAssetsParallel()\n        })\n    }\n\n}\n","export const DEV_MODE = process.env.WEBPACK_MODE === 'development'\nexport const WAD_CACHE_DB_NAME = 'RockRaidersWeb'\nexport const JOB_SCHEDULE_INTERVAL = 1000 // milliseconds\nexport const CHECK_CLEARRUBBLE_INTERVAL = 5000 // milliseconds\nexport const JOB_ACTION_RANGE = 5\nexport const CHECK_SPANW_RAIDER_TIMER = 1000 // milliseconds\nexport const MAX_RAIDER_BASE = 12\nexport const MAX_RAIDER_REQUEST = 9\nexport const ADDITIONAL_RAIDER_PER_SUPPORT = 10\nexport const UPDATE_OXYGEN_TIMER = 5000 // milliseconds\nexport const PANEL_ANIMATION_MULTIPLIER = 3\nexport const HEIGHT_MULTIPLER = 0.1\nexport const SEQUENCE_TEXTURE_FRAMERATE = 5\n\n// native constants (do not change)\n\nexport const SPRITE_RESOLUTION_WIDTH = 640\nexport const SPRITE_RESOLUTION_HEIGHT = 480\nexport const TILESIZE = 40\nexport const NATIVE_FRAMERATE = 30\n","import { BaseConfig } from './BaseConfig'\n\nexport class BuildingEntityStats extends BaseConfig {\n\n    Levels: number = 0\n    SelfPowered: boolean = false\n    PowerBuilding: boolean = false\n    PickSphere: number = 0\n    TrainDynamite: boolean[] = null\n    CostOre: number = 0\n    CostCrystal: number = 0\n    OxygenCoef: number = 0\n\n}\n","import { BaseConfig } from './BaseConfig'\n\nexport class MovableEntityStats extends BaseConfig {\n\n    RouteSpeed: number[] = []\n    RubbleCoef: number = 1\n    PathCoef: number = 1\n\n}\n","// noinspection JSUnusedGlobalSymbols\n\nimport { BaseConfig } from './BaseConfig'\nimport { BuildingEntityStats } from './BuildingEntityStats'\nimport { MovableEntityStats } from './MovableEntityStats'\n\nexport class GameStatsCfg extends BaseConfig {\n\n    Pilot = new class PilotStats extends BaseConfig {\n        Levels: number = 4\n        RouteSpeed: number[] = [1.10, 1.10, 1.10, 1.10]\n        SoilDrillTime: number[] = [4.0, 4.0, 4.0, 4.0] // Time in seconds to drill through the rock.\n        LooseDrillTime: number[] = [4.0, 4.0, 4.0, 4.0]\n        MedDrillTime: number[] = [8.0, 8.0, 8.0, 8.0]\n        HardDrillTime: number[] = [0.0, 0.0, 0.0, 0.0] // Zero means the object cannot drill the rock type\n        SeamDrillTime: number[] = [10.0, 10.0, 10.0, 10.0] // Either or both ore or crystal.\n        UpgradeTime: number[] = [30.0, 45.0, 60.0, 60.0] // Last entry is ignored as it can never upgrade from that.\n        CollRadius: number = 5.0\n        CollHeight: number = 12.0\n        TrackDist: number = 40.0\n        SingleWidthDig: boolean[] = [true, true, true, true]\n        PickSphere: number = 10.0\n        RepairValue: number[] = [10.0, 15.0, 20.0, 25.0]\n        SurveyRadius: number[] = [3, 3, 3, 3]\n        Drillsound: string = 'SND_pilotdrill'\n        Drillfadesound: string = 'SND_pilotdrillfade'\n        RestPercent: number = 60.0\n        EnergyDecayRate: number = 0.25\n        CanClearRubble: boolean = true\n        NumOfToolsCanCarry: number[] = [2, 3, 4, 5]\n        CrossLand: boolean = true\n        RubbleCoef: number = 0.5\n        PathCoef: number = 2.0\n        RouteAvoidance: boolean = true\n        UseLegoManTeleporter: boolean = true\n        AwarenessRange: number = 10.0\n        OxygenCoef: number = -1.0\n        CanStrafe: boolean = true\n        EnterToolStore: boolean = true\n        ShowHealthBar: boolean = true\n    }\n\n    RockMonster = new class RockMonsterStats extends BaseConfig {\n        Levels: number = 1\n        RouteSpeed: number = 0.8\n        TrackDist: number = 50.0\n        CollRadius: number = 10.0\n        CollHeight: number = 22.0\n        AlertRadius: number = 60.0\n        HealthDecayRate: number = 0.6 // Reduce health by 'n' every second.\n        PickSphere: number = 22.0\n        RepairValue: number = -10.0\n        CanScare: boolean = true\n        RestPercent: number = 20.0\n        CarryMinHealth: number = 15.0\n        PainThreshold: number = 20.0\n        StampRadius: number = 80.0\n        AttackRadius: number = 160.0\n        CanSteal: boolean = true\n        CrossLand: boolean = true\n        RubbleCoef: number = 1.5\n        GrabMinifigure: boolean = true\n        RouteAvoidance: boolean = true\n        BumpDamage: boolean = true\n        AttackPaths: boolean = true\n        SplitOnZeroHealth: boolean = true\n        CanBeHitByFence: boolean = true\n        Capacity: number = 6 // How many crystals it can eat\n        PathCoef: number = 0.5\n        // Statistics about the weapons\n        CanBeShotAt: boolean = true // Can this monster be shot at by lego men\n        CanFreeze: boolean = true // Can this object be frozen\n        FreezerTime: number = 25.0 // Time this object is frozen for\n        FreezerDamage: number = 5.0 // Damage that freezing causes\n        CanLaser: boolean = true // Can this object be lasered\n        LaserDamage: number = 110.0 // Damage sustained by a laser\n        CanPush: boolean = true // Can this object be pusher'ed\n        PusherDist: number = 20.0 // Distance the object is pushed 40=1 block\n        PusherDamage: number = 2.0 // Damage that the pusher gun causes\n        WakeRadius: number = 25.0\n        ScaredByBigBangs: boolean = true\n        RemoveReinforcement: boolean = true\n        ShowHealthBar: boolean = true\n    }\n\n    SmallSpider = new class SmallSpiderStats extends MovableEntityStats {\n        Levels: number = 1\n        RouteSpeed: number[] = [2.0]\n        TrackDist: number = 10.0\n        CollRadius: number = 0.0\n        CollHeight: number = 0.0\n        PickSphere: number = 6.0\n        AlertRadius: number = 40.0\n        RandomMove: boolean = true\n        RandomEnterWall: boolean = true\n        CauseSlip: boolean = true\n        CrossLand: boolean = true\n        RubbleCoef: number = 0.2\n        DontShowDamage: boolean = true\n        DontShowOnRadar: boolean = true\n        ScaredByBigBangs: boolean = true\n    }\n\n    Bat = new class BatStats extends MovableEntityStats {\n        Levels: number = 1\n        RouteSpeed: number[] = [1.0]\n        TrackDist: number = 10.0\n        CollRadius: number = 10.0\n        AlertRadius: number = 10.0 // Alert radius (causes attack mode)\n        RandomMove: boolean = true // Random movement\n        randomMoveTime: number = 10\n        CanScare: boolean = true // Scare away the player\n        ScaredByBigBangs: boolean = true\n        // Flock parameters.\n        Flocks: boolean = true // Set this to create a flock for this object.\n        FlocksDebug: boolean = false // If this is set the actual lego objects animation is displayed at the \"lego\" position.\n        FlocksSmooth: boolean = true // Smooths out the orientation of the flocks elements.\n        FlocksSize: number = 8 // Number of the given item in the flock.  (Default 5)\n        FlocksTurn: number = 0.6 // Turning speed of the bat. (0.6 default)\n        FlocksSpeed: number = 1.5 // Velocity of the flock. (2.0 default)\n        FlocksTightness: number = 0.8 // Tightness of the flock. (2.0 default)\n        FlocksGoalUpdate: number = 2.0 // How often the flocks goal is updated (25 per second).  (2.0 default)\n        FlocksRandomness: number = 6.0 // Randomness of goals. (2.0 default)\n        FlocksHeight: number = 22.0 // Height above the ground of the flock elements.  (30.0 default)\n        CrossLand: boolean = true\n        CrossWater: boolean = true\n        CrossLava: boolean = true\n        DontShowDamage: boolean = true\n    }\n\n    TinyRM = new class TinyRMStats extends BaseConfig {\n        Levels: number = 1\n        RouteSpeed: number = 1.2\n        TrackDist: number = 10.0\n        CollRadius: number = 0.0\n        CollHeight: number = 5.0\n        PickSphere: number = 6.0\n        AlertRadius: number = 40.0\n        CrossLand: boolean = true\n        RubbleCoef: number = 1.5\n        DontShowDamage: boolean = true\n        DontShowOnRadar: boolean = true\n        ScaredByPlayer: boolean = true\n        ScaredByBigBangs: boolean = true\n    }\n\n    TinyIM = new class TinyIMStats extends BaseConfig {\n        Levels: number = 1\n        RouteSpeed: number = 1.2\n        TrackDist: number = 10.0\n        CollRadius: number = 0.0\n        CollHeight: number = 5.0\n        PickSphere: number = 6.0\n        AlertRadius: number = 40.0\n        CrossLand: boolean = true\n        RubbleCoef: number = 1.5\n        DontShowDamage: boolean = true\n        DontShowOnRadar: boolean = true\n        ScaredByPlayer: boolean = true\n        ScaredByBigBangs: boolean = true\n    }\n\n    Slug = new class SlugStats extends BaseConfig {\n        Levels: number = 1\n        RouteSpeed: number = 0.3\n        TrackDist: number = 10.0\n        CollRadius: number = 3.0\n        CollHeight: number = 7.0\n        PickSphere: number = 12.0\n        AlertRadius: number = 40.0\n        CrossLand: boolean = true\n        RubbleCoef: number = 0.3\n        UseHoles: boolean = true\n        DrainPower: boolean = true\n        AttackRadius: number = 280.0\n        PainThreshold: number = 50.0\n        CanBeShotAt: boolean = true\n        CanLaser: boolean = true\n        LaserDamage: number = 5.0\n        CanPush: boolean = true // Can this object be pusher'ed\n        PusherDist: number = 60.0 // Distance the object is pushed\n        PusherDamage: number = 5.0 // Damage that the pusher gun causes\n        ShowHealthBar: boolean = true\n        ScaredByBigBangs: boolean = true\n    }\n\n    LavaMonster = new class LavaMonsterStats extends BaseConfig {\n        Levels: number = 1\n        RouteSpeed: number = 0.8\n        TrackDist: number = 50.0\n        CollRadius: number = 10.0\n        CollHeight: number = 22.0\n        AlertRadius: number = 60.0\n        HealthDecayRate: number = 0.6 // Reduce health by 'n' every second.\n        PickSphere: number = 22.0\n        RepairValue: number = -10.0\n        CanScare: boolean = true\n        RestPercent: number = 20.0\n        CarryMinHealth: number = 15.0\n        PainThreshold: number = 20.0\n        StampRadius: number = 80.0\n        AttackRadius: number = 160.0\n        CanSteal: boolean = true\n        CrossLand: boolean = true\n        RubbleCoef: number = 1.5\n        GrabMinifigure: boolean = true\n        Capacity: number = 7 // How many crystals it can eat\n        RouteAvoidance: boolean = true\n        BumpDamage: boolean = true\n        AttackPaths: boolean = true\n        SplitOnZeroHealth: boolean = true\n        CanBeHitByFence: boolean = true\n        PathCoef: number = 0.5\n        CrossLava: boolean = true\n        // Statistics about the weapons\n        CanBeShotAt: boolean = true // Can this monster be shot at by lego men\n        CanFreeze: boolean = true // Can this object be frozen\n        FreezerTime: number = 75.0 // Time this object is frozen for\n        FreezerDamage: number = 40.0 // Damage that freezing causes\n        CanLaser: boolean = true // Can this object be lasered\n        LaserDamage: number = 1.0 // Damage sustained by a laser\n        CanPush: boolean = true // Can this object be pusher'ed\n        PusherDist: number = 60.0 // Distance the object is pushed\n        PusherDamage: number = 5.0 // Damage that the pusher gun causes\n        WakeRadius: number = 25.0\n        ScaredByBigBangs: boolean = true\n        RemoveReinforcement: boolean = true\n        ShowHealthBar: boolean = true\n    }\n\n    IceMonster = new class IceMonsterStats extends BaseConfig {\n        Levels: number = 1\n        RouteSpeed: number = 0.8\n        TrackDist: number = 50.0\n        CollRadius: number = 10.0\n        CollHeight: number = 22.0\n        AlertRadius: number = 60.0\n        HealthDecayRate: number = 0.6 // Reduce health by 'n' every second.\n        PickSphere: number = 22.0\n        RepairValue: number = -10.0\n        CanScare: boolean = true\n        RestPercent: number = 20.0\n        CarryMinHealth: number = 15.0\n        PainThreshold: number = 20.0\n        StampRadius: number = 80.0\n        AttackRadius: number = 120.0\n        CanSteal: boolean = true\n        CrossLand: boolean = true\n        RubbleCoef: number = 1.5\n        GrabMinifigure: boolean = true\n        Capacity: number = 5 // How many crystals it can eat\n        RouteAvoidance: boolean = true\n        BumpDamage: boolean = true\n        AttackPaths: boolean = true\n        SplitOnZeroHealth: boolean = true\n        CanBeHitByFence: boolean = true\n        PathCoef: number = 0.5\n        // Statistics about the weapons\n        CanBeShotAt: boolean = true // Can this monster be shot at by lego men\n        CanFreeze: boolean = false // Can this object be frozen\n        FreezerTime: number = 0.0 // Time this object is frozen for\n        FreezerDamage: number = 0.0 // Damage that freezing causes\n        CanLaser: boolean = true // Can this object be lasered\n        LaserDamage: number = 110.0 // Damage sustained by a laser\n        CanPush: boolean = true // Can this object be pusher'ed\n        PusherDist: number = 60.0 // Distance the object is pushed\n        PusherDamage: number = 2.0 // Damage that the pusher gun causes\n        WakeRadius: number = 25.0\n        ScaredByBigBangs: boolean = true\n        RemoveReinforcement: boolean = true\n        ShowHealthBar: boolean = true\n    }\n\n    Hoverboard = new class HoverboardStats extends BaseConfig { // [Carry][Scan][Speed][Drill]    (No drill or carry)\n        Levels: number = 8\n        RouteSpeed: number[] = [3.0, 3.0, 5.0, 5.0, 3.0, 3.0, 5.0, 5.0]\n        SurveyRadius: number[] = [0, 0, 0, 0, 4, 4, 4, 4]\n        TrackDist: number = 50.0\n        CollRadius: number = 8.0\n        CollHeight: number = 12.0\n        PickSphere: number = 16.0\n        CanBeDriven: boolean = true\n        CrossLand: boolean = true\n        UseSmallTeleporter: boolean = true\n        CanStrafe: boolean = true\n        CostCrystal: number = 1\n        UpgradeCostOre: number[] = [0, 5, 10, 0]\n        UpgradeCostStuds: number[] = [0, 1, 2, 0]\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_SmallEngine'\n    }\n\n    SmallHeli = new class SmallHeliStats extends BaseConfig {\n        Levels: number = 1\n        RouteSpeed: number = 2.50\n        TrackDist: number = 50.0\n        CollRadius: number = 10.0\n        CollHeight: number = 12.0\n        PickSphere: number = 20.0\n        CanBeDriven: boolean = true\n        CrossLand: boolean = true\n        CrossWater: boolean = true\n        CrossLava: boolean = true\n        UseSmallTeleporter: boolean = true\n        CanStrafe: boolean = true\n        CostCrystal: number = 3\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_HeliEngine'\n    }\n\n    Smallmlp = new class SmallmlpStats extends BaseConfig {\n        Levels: number = 4\n        RouteSpeed: number[] = [0.50, 0.50, 0.50, 0.50]\n        TrackDist: number = 50.0\n        CollRadius: number = 12.0\n        CollHeight: number = 22.0\n        PickSphere: number = 26.0\n        CanBeDriven: boolean = true\n        CrossLand: boolean = true\n        UseSmallTeleporter: boolean = true\n        Tracker: boolean = true\n        CanDoubleSelect: boolean = true\n        CostCrystal: number = 3\n        UpgradeCostOre: number[] = [0, 0, 0, 10]\n        UpgradeCostStuds: number[] = [0, 0, 0, 2]\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_MediumEngine'\n    }\n\n    SmallCat = new class SmallCatStats extends BaseConfig {\n        Levels: number = 3\n        RouteSpeed: number[] = [2.0, 3.0, 4.0]\n        TrackDist: number = 50.0\n        CollRadius: number = 12.0\n        CollHeight: number = 12.0\n        PickSphere: number = 26.0\n        CrossWater: boolean = true\n        CanBeDriven: boolean = true\n        UseWaterTeleporter: boolean = true\n        CostCrystal: number = 2\n        MaxCarry: number[] = [1, 1, 1]\n        GetInAtLand: boolean = true\n        GetOutAtLand: boolean = true\n        TakeCarryingDrivers: boolean = true\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_Catamaran'\n    }\n\n    SmallDigger = new class SmallDiggerStats extends BaseConfig {\n        Levels: number = 8\n        RouteSpeed: number[] = [2.0, 2.0, 4.0, 4.0, 2.0, 2.0, 4.0, 4.0]\n        SoilDrillTime: number[] = [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]\n        LooseDrillTime: number[] = [2.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0, 1.0]\n        MedDrillTime: number[] = [4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0]\n        HardDrillTime: number[] = [180.0, 150.0, 180.0, 150.0, 180.0, 150.0, 180.0, 150.0]\n        SeamDrillTime: number[] = [8.0, 4.0, 8.0, 4.0, 8.0, 4.0, 8.0, 4.0]\n        MaxCarry: number[] = [0, 0, 0, 0, 0, 0, 0, 0]\n        SurveyRadius: number[] = [0, 0, 0, 0, 4, 4, 4, 4]\n        TrackDist: number = 50.0\n        CollRadius: number = 10.0\n        CollHeight: number = 12.0\n        PickSphere: number = 20.0\n        CanBeDriven: boolean = true\n        CrossLand: boolean = true\n        RouteAvoidance: boolean = true\n        UseSmallTeleporter: boolean = true\n        VehicleCanBeCarried: boolean = true\n        CostCrystal: number = 1\n        UpgradeCostOre: number[] = [0, 5, 10, 10]\n        UpgradeCostStuds: number[] = [0, 1, 2, 2]\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_SmallEngine'\n    }\n\n    SmallTruck = new class SmallTruckStats extends BaseConfig { // [Carry][Scan][Speed][Drill]    (No drill)\n        Levels: number = 16\n        RouteSpeed: number[] = [2.0, 2.0, 3.0, 3.0, 2.0, 2.0, 3.0, 3.0, 2.0, 2.0, 3.0, 3.0, 2.0, 2.0, 3.0, 3.0]\n        MaxCarry: number[] = [3, 3, 3, 3, 3, 3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6]\n        CarryStart: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3]\n        SurveyRadius: number[] = [0, 0, 0, 0, 4, 4, 4, 4, 0, 0, 0, 0, 4, 4, 4, 4]\n        TrackDist: number = 50.0\n        CollRadius: number = 10.0\n        CollHeight: number = 12.0\n        PickSphere: number = 20.0\n        CanBeDriven: boolean = true\n        CrossLand: boolean = true\n        UseSmallTeleporter: boolean = true\n        VehicleCanBeCarried: boolean = true\n        CostCrystal: number = 2\n        EnterToolStore: boolean = true\n        UpgradeCostOre: number[] = [5, 5, 10, 0]\n        UpgradeCostStuds: number[] = [1, 1, 2, 0]\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_SmallEngine'\n    }\n\n    Bulldozer = new class BulldozerStats extends BaseConfig { // [Carry][Scan][Speed][Drill]    (No drill)\n        Levels: number = 16\n        RouteSpeed: number[] = [0.5, 0.5, 0.8, 0.8, 0.5, 0.5, 0.8, 0.8, 0.5, 0.5, 0.8, 0.8, 0.5, 0.5, 0.8, 0.8]\n        MaxCarry: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]\n        SurveyRadius: number[] = [0, 0, 0, 0, 5, 5, 5, 5, 0, 0, 0, 0, 5, 5, 5, 5]\n        TrackDist: number = 80.0\n        CollRadius: number = 18.0\n        CollHeight: number = 26.0\n        PickSphere: number = 40.0\n        CrossLand: boolean = true\n        CanClearRubble: boolean = true\n        UseBigTeleporter: boolean = true\n        CanBeDriven: boolean = true\n        CostCrystal: number = 4\n        InvisibleDriver: boolean = true\n        UpgradeCostOre: number[] = [5, 5, 20, 0]\n        UpgradeCostStuds: number[] = [1, 1, 4, 0]\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_MediumEngine'\n    }\n\n    WalkerDigger = new class WalkerDiggerStats extends BaseConfig { // [Carry][Scan][Speed][Drill]    (No carry)\n        Levels: number = 8\n        RouteSpeed: number[] = [0.50, 0.50, 0.80, 0.80, 0.50, 0.50, 0.80, 0.80]\n        SoilDrillTime: number[] = [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]\n        LooseDrillTime: number[] = [0.80, 0.40, 0.80, 0.40, 0.80, 0.40, 0.80, 0.40]\n        MedDrillTime: number[] = [2.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0, 1.0]\n        HardDrillTime: number[] = [180.0, 150.0, 180.0, 150.0, 180.0, 150.0, 180.0, 150.0]\n        SeamDrillTime: number[] = [4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0]\n        SurveyRadius: number[] = [0, 0, 0, 0, 5, 5, 5, 5]\n        TrackDist: number = 80.0\n        CollRadius: number = 15.0\n        CollHeight: number = 33.0\n        PickSphere: number = 35.0\n        CrossLand: boolean = true\n        UseBigTeleporter: boolean = true\n        CostCrystal: number = 3\n        CanBeDriven: boolean = true\n        InvisibleDriver: boolean = true\n        CanStrafe: boolean = true\n        DrillSound: string = 'DrillSFX_Grinder'\n        DrillFadeSound: string = 'DrillSFX_GrinderFade'\n        UpgradeCostOre: number[] = [0, 5, 20, 20]\n        UpgradeCostStuds: number[] = [0, 1, 4, 4]\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_MediumEngine'\n    }\n\n    LargeDigger = new class LargeDiggerStats extends BaseConfig { // [Carry][Scan][Speed][Drill]    (No carry or scan)\n        Levels: number = 4\n        RouteSpeed: number[] = [0.30, 0.30, 0.60, 0.60]\n        SoilDrillTime: number[] = [1.0, 1.0, 1.0, 1.0]\n        LooseDrillTime: number[] = [0.40, 0.20, 0.40, 0.20]\n        MedDrillTime: number[] = [0.80, 0.40, 0.80, 0.40]\n        HardDrillTime: number[] = [1.0, 0.50, 1.0, 0.50]\n        SeamDrillTime: number[] = [1.0, 0.50, 1.0, 0.50]\n        TrackDist: number = 80.0\n        CollRadius: number = 22.0\n        CollHeight: number = 30.0\n        PickSphere: number = 50.0\n        CrossLand: boolean = true\n        UseBigTeleporter: boolean = true\n        Tracker: boolean = true\n        CanDoubleSelect: boolean = true\n        CanBeDriven: boolean = true\n        CostCrystal: number = 5\n        InvisibleDriver: boolean = true\n        DrillSound: string = 'DrillSFX_Grinder'\n        DrillFadeSound: string = 'DrillSFX_GrinderFade'\n        UpgradeCostOre: number[] = [0, 0, 15, 20]\n        UpgradeCostStuds: number[] = [0, 0, 3, 4]\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_LargeEngine'\n    }\n\n    LargeCat = new class LargeCatStats extends BaseConfig { // [Carry][Scan][Speed][Drill] (No carry) (Drill???)\n        Levels: number = 1\n        RouteSpeed: number = 1.50\n        SurveyRadius: number = 0\n        TrackDist: number = 80.0\n        CollRadius: number = 22.0\n        CollHeight: number = 25.0\n        PickSphere: number = 50.0\n        CanBeDriven: boolean = true\n        CrossWater: boolean = true\n        UseWaterTeleporter: boolean = true\n        ClassAsLarge: boolean = true\n        CarryVehicles: boolean = true\n        CostCrystal: number = 4\n        EngineSound: string = 'SND_Catamaran'\n        ShowHealthBar: boolean = true\n    }\n\n    LargeHeli = new class LargeHeliStats extends BaseConfig {\n        Levels: number = 3\n        RouteSpeed: number[] = [0.30, 0.40, 0.50]\n        TrackDist: number = 80.0\n        CollRadius: number = 0.0\n        CollHeight: number = 0.0\n        PickSphere: number = 20.0\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_HeliEngine'\n    }\n\n    LargeMLP = new class LargeMLPStats extends BaseConfig { // [Carry][Scan][Speed][Drill]    (No carry or speed) (Doesn't have drills, just lasers)\n        Levels: number = 8\n        RouteSpeed: number[] = [0.40, 0.40, 0.40, 0.40, 0.40, 0.40, 0.40, 0.40]\n        SurveyRadius: number[] = [0, 0, 0, 0, 5, 5, 5, 5]\n        TrackDist: number = 80.0\n        CollRadius: number = 20.0\n        CollHeight: number = 24.0\n        PickSphere: number = 47.0\n        CrossLand: boolean = true\n        UseBigTeleporter: boolean = true\n        Tracker: boolean = true\n        CanDoubleSelect: boolean = true\n        CostCrystal: number = 4\n        CanBeDriven: boolean = true\n        InvisibleDriver: boolean = true\n        UpgradeCostOre: number[] = [0, 5, 0, 25]\n        UpgradeCostStuds: number[] = [0, 1, 0, 5]\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_LargeEngine'\n    }\n\n    Barracks = new class BarracksStats extends BuildingEntityStats {\n        Levels: number = 3\n        TrackDist: number = 50.0\n        CollHeight: number = 23.0\n        CollRadius: number = 15.0\n        PickSphere: number = 30.0\n        CostOre: number = 15\n        CostRefinedOre: number = 3\n        CostCrystal: number = 3\n        SnaxULike: boolean = true\n        TrainDriver: boolean[] = [true, true, true]\n        CrystalDrain: number[] = [1, 1, 1]\n        DamageCausesCallToArms: boolean = true\n        OxygenCoef: number = 10.0\n        EngineSound: string = 'SND_BuildingHum'\n        ShowHealthBar: boolean = true\n    }\n\n    Powerstation = new class PowerstationStats extends BuildingEntityStats {\n        Levels: number = 2\n        TrackDist: number = 80.0\n        ProcessCrystal: boolean = true\n        CollHeight: number = 31.0\n        CollRadius: number = 15.0\n        PickSphere: number = 32.0\n        CostOre: number = 12\n        CostRefinedOre: number = 3\n        CostCrystal: number = 2\n        PowerBuilding: boolean = true\n        DamageCausesCallToArms: boolean = true\n        EngineSound: string = 'SND_PowerBuildingHum'\n        ShowHealthBar: boolean = true\n    }\n\n    OreRefinery = new class OreRefineryStats extends BuildingEntityStats {\n        Levels: number = 4\n        TrackDist: number = 60.0\n        ProcessOre: boolean = true\n        CollHeight: number = 16.0\n        CollRadius: number = 15.0\n        PickSphere: number = 30.0\n        CostOre: number = 20\n        CostRefinedOre: number = 4\n        CostCrystal: number = 3\n        CrystalDrain: number[] = [1, 1, 1, 1]\n        DamageCausesCallToArms: boolean = true\n        MaxCarry: number[] = [5, 4, 3, 2]\n        EngineSound: string = 'SND_BuildingHum'\n        ShowHealthBar: boolean = true\n    }\n\n    TeleportPad = new class TeleportPadStats extends BuildingEntityStats {\n        Levels: number = 3\n        TrackDist: number = 60.0\n        SmallTeleporter: boolean = true\n        ManTeleporter: boolean = true\n        CollHeight: number = 20.0\n        CollRadius: number = 15.0\n        PickSphere: number = 30.0\n        CostOre: number = 8\n        CostRefinedOre: number = 2\n        CrystalDrain: number[] = [1, 1, 1]\n        DamageCausesCallToArms: boolean = true\n        TrainPilot: boolean[] = [true, true, true]\n        EngineSound: string = 'SND_BuildingHum'\n        ShowHealthBar: boolean = true\n    }\n\n    TeleportBIG = new class TeleportBIGStats extends BuildingEntityStats {\n        Levels: number = 2\n        TrackDist: number = 50.0\n        BigTeleporter: boolean = true\n        CollHeight: number = 17.0\n        CollRadius: number = 15.0\n        PickSphere: number = 30.0\n        CostOre: number = 20\n        CostRefinedOre: number = 4\n        CostCrystal: number = 2\n        CrystalDrain: number[] = [1, 1]\n        DamageCausesCallToArms: boolean = true\n        EngineSound: string = 'SND_BuildingHum'\n        ShowHealthBar: boolean = true\n    }\n\n    Docks = new class DocksStats extends BuildingEntityStats {\n        Levels: number = 1\n        TrackDist: number = 60.0\n        CollHeight: number = 20.0\n        CollRadius: number = 15.0\n        PickSphere: number = 30.0\n        CostOre: number = 8\n        CostRefinedOre: number = 2\n        CostCrystal: number = 1\n        WaterEntrances: number = 1\n        WaterTeleporter: boolean = true\n        CrystalDrain: number = 1\n        DamageCausesCallToArms: boolean = true\n        TrainSailor: boolean = true\n        EngineSound: string = 'SND_BuildingHum'\n        ShowHealthBar: boolean = true\n    }\n\n    Toolstation = new class ToolstationStats extends BuildingEntityStats {\n        Levels: number = 3\n        TrackDist: number = 50.0\n        ManTeleporter: boolean = true\n        CollHeight: number = 16.0\n        CollRadius: number = 15.0\n        PickSphere: number = 30.0\n        ToolStore: boolean = true\n        StoreObjects: boolean = true\n        SelfPowered: boolean = true\n        DamageCausesCallToArms: boolean = true\n        TrainDynamite: boolean[] = [false, false, true]\n        FunctionCoef: number[] = [1.0, 1.0, 1.0] // Function here is how long it takes to upgrade a minfigure\n        ShowHealthBar: boolean = true\n    }\n\n    GunStation = new class GunStationStats extends BuildingEntityStats {\n        Levels: number = 2\n        TrackDist: number = 60.0\n        CollHeight: number = 33.0\n        CollRadius: number = 15.0\n        PickSphere: number = 30.0\n        CostOre: number = 15\n        CostRefinedOre: number = 3\n        CostCrystal: number = 1\n        Tracker: boolean = true\n        CanDoubleSelect: boolean = true\n        CrystalDrain: number[] = [1, 1]\n        DamageCausesCallToArms: boolean = true\n        FunctionCoef: number[] = [1.0, 0.5] // How much of a crystal it drains every time it fires...\n        EngineSound: string = 'SND_BuildingHum'\n        ShowHealthBar: boolean = true\n    }\n\n    Geodome = new class GeodomeStats extends BuildingEntityStats {\n        Levels: number = 3\n        TrackDist: number = 50.0\n        CollHeight: number = 20.0\n        CollRadius: number = 15.0\n        PickSphere: number = 30.0\n        CostOre: number = 15\n        CostRefinedOre: number = 3\n        CostCrystal: number = 3\n        SurveyRadius: number[] = [6, 8, 12]\n        CrystalDrain: number[] = [1, 1, 1]\n        DamageCausesCallToArms: boolean = true\n        TrainScanner: boolean[] = [true, true, true]\n        EngineSound: string = 'SND_BuildingHum'\n        ShowHealthBar: boolean = true\n    }\n\n    Upgrade = new class UpgradeStats extends BuildingEntityStats {\n        Levels: number = 2\n        TrackDist: number = 80.0\n        CollHeight: number = 40.0\n        CollRadius: number = 15.0\n        PickSphere: number = 32.0\n        CostOre: number = 20\n        CostRefinedOre: number = 4\n        CostCrystal: number = 3\n        UpgradeBuilding: boolean = true\n        CrystalDrain: number[] = [1, 1]\n        DamageCausesCallToArms: boolean = true\n        FunctionCoef: number[] = [0.8, 1.6] // Function is speed of upgrade animation.\n        TrainRepair: boolean[] = [true, true]\n        EngineSound: string = 'SND_BuildingHum'\n        ShowHealthBar: boolean = true\n    }\n\n    PowerCrystal = new class PowerCrystalStats extends BaseConfig {\n        Levels: number = 1\n        TrackDist: number = 20.0\n        CollHeight: number = 2.0\n        PickSphere: number = 6.0\n    }\n\n    ProcessedOre = new class ProcessedOreStats extends BaseConfig {\n        Levels: number = 1\n        TrackDist: number = 20.0\n        CollHeight: number = 2.0\n        PickSphere: number = 8.0\n    }\n\n    Ore = new class OreStats extends BaseConfig {\n        Levels: number = 1\n        TrackDist: number = 20.0\n        CollHeight: number = 2.0\n        PickSphere: number = 6.0\n    }\n\n    Boulder = new class BoulderStats extends BaseConfig {\n        Levels: number = 1\n        CollRadius: number = 2.0\n    }\n\n    Pusher = new class PusherStats extends BaseConfig {\n        Levels: number = 1\n        CollRadius: number = 1.0\n    }\n\n    Freezer = new class FreezerStats extends BaseConfig {\n        Levels: number = 1\n        CollRadius: number = 1.0\n    }\n\n    LaserShot = new class LaserShotStats extends BaseConfig {\n        Levels: number = 1\n        ColRadius: number = 1.0\n    }\n\n    ElectricFence = new class ElectricFenceStats extends BaseConfig {\n        Levels: number = 1\n        TrackDist: number = 50.0\n        CollRadius: number = 5.0\n        CollHeight: number = 18.0\n        PickSphere: number = 20.0\n        DamageCausesCallToArms: boolean = true\n    }\n\n    Path = new class PathStats extends BaseConfig {\n        Levels: number = 1\n        CostOre: number = 2\n        CostRefinedOre: number = 1\n    }\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n    assignValue(objKey, lCfgKeyName, cfgValue): boolean {\n        if (objKey.toLowerCase() === lCfgKeyName) {\n            BaseConfig.setFromCfg(this[objKey], cfgValue)\n            return true\n        }\n    }\n\n}\n\n","import { GameStatsCfg } from '../../cfg/GameStatsCfg'\nimport { WorkerMessageType } from './WorkerMessageType'\n\nexport class WadWorkerMessage {\n\n    type: WorkerMessageType = null\n    text?: string\n    cfg?: any\n    stats?: any\n    totalResources?: number\n    assetName?: string\n    assetObj?: any\n    loadingTimeSeconds?: string\n\n    constructor(type: WorkerMessageType) {\n        this.type = type\n    }\n\n    static createTextMessage(msg: string): WadWorkerMessage {\n        return {type: WorkerMessageType.MSG, text: msg}\n    }\n\n    static createCfgLoaded(cfg: any, totalResources: number): WadWorkerMessage {\n        return {\n            type: WorkerMessageType.CFG,\n            cfg: cfg,\n            stats: new GameStatsCfg(cfg['Stats']),\n            totalResources: totalResources,\n        }\n    }\n\n    static createAssetLoaded(assetIndex: number, assetName: string, assetObj: any): WadWorkerMessage {\n        return {type: WorkerMessageType.ASSET, assetName: assetName, assetObj: assetObj}\n    }\n\n    static createLoadDone(totalResources: number, loadingTimeSeconds: string): WadWorkerMessage {\n        return {type: WorkerMessageType.DONE, totalResources: totalResources, loadingTimeSeconds: loadingTimeSeconds}\n    }\n\n}\n","import { InitLoadingMessage } from './InitLoadingMessage'\nimport { WadLoader } from './WadLoader'\nimport { WadWorkerMessage } from './WadWorkerMessage'\nimport { WorkerMessageType } from './WorkerMessageType'\n\nconst worker: Worker = self as any\n\nfunction postMessage(assetMessage: WadWorkerMessage) {\n    worker.postMessage(assetMessage)\n}\n\nworker.addEventListener('message', (event) => {\n    const wadLoader = new WadLoader()\n    // set callbacks on wadLoader\n    wadLoader.onMessage = (text: string) => postMessage(WadWorkerMessage.createTextMessage(text))\n    wadLoader.onInitialLoad = (totalResources: number, cfg: any) => postMessage(WadWorkerMessage.createCfgLoaded(cfg, totalResources))\n    wadLoader.onAssetLoaded = (assetIndex: number, assetName: string, assetObj: any) => {\n        postMessage(WadWorkerMessage.createAssetLoaded(assetIndex, assetName, assetObj))\n    }\n    wadLoader.onLoadDone = (totalResources: number, loadingTimeSeconds: string) => {\n        postMessage(WadWorkerMessage.createLoadDone(totalResources, loadingTimeSeconds))\n    }\n    // start loading\n    const msg = event.data as InitLoadingMessage\n    if (msg) {\n        wadLoader.loadWadFiles(msg.wad0FileUrl, msg.wad1FileUrl)\n    } else {\n        wadLoader.startWithCachedFiles(() => postMessage(new WadWorkerMessage(WorkerMessageType.CACHE_MISS)))\n    }\n})\n"],"sourceRoot":""}