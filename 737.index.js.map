{"version":3,"sources":["webpack://rock-raiders-web/./src/core/Util.ts","webpack://rock-raiders-web/./src/resource/wadworker/parser/BitmapWithPalette.ts","webpack://rock-raiders-web/./src/resource/wadworker/parser/EncodingHelper.ts","webpack://rock-raiders-web/./src/resource/wadworker/parser/CfgFileParser.ts","webpack://rock-raiders-web/./src/cfg/LevelObjectiveTextEntry.ts","webpack://rock-raiders-web/./src/resource/wadworker/parser/ObjectiveTextParser.ts","webpack://rock-raiders-web/./src/game/model/job/PriorityIdentifier.ts","webpack://rock-raiders-web/./src/resource/wadworker/WorkerMessageType.ts","webpack://rock-raiders-web/./src/resource/wadworker/parser/WadParser.ts","webpack://rock-raiders-web/./src/cfg/BaseConfig.ts","webpack://rock-raiders-web/./src/cfg/ConfigColor.ts","webpack://rock-raiders-web/./src/cfg/ObjectiveImageCfg.ts","webpack://rock-raiders-web/./src/cfg/LevelsCfg.ts","webpack://rock-raiders-web/./src/cfg/MenuCycleItemCfg.ts","webpack://rock-raiders-web/./src/cfg/MenuLabelItemCfg.ts","webpack://rock-raiders-web/./src/cfg/MenuSliderItemCfg.ts","webpack://rock-raiders-web/./src/cfg/MenuEntryCfg.ts","webpack://rock-raiders-web/./src/cfg/MenuCfg.ts","webpack://rock-raiders-web/./src/cfg/RewardCfg.ts","webpack://rock-raiders-web/./src/resource/wadworker/parser/RonFileParser.ts","webpack://rock-raiders-web/./src/resource/wadworker/WadAssetRegistry.ts","webpack://rock-raiders-web/./src/resource/wadworker/WadFile.ts","webpack://rock-raiders-web/./src/resource/wadworker/WadLoader.ts","webpack://rock-raiders-web/./src/resource/wadworker/WadUtil.ts","webpack://rock-raiders-web/./src/resource/wadworker/parser/NerpMsgParser.ts","webpack://rock-raiders-web/./src/params.ts","webpack://rock-raiders-web/./src/cfg/BuildingEntityStats.ts","webpack://rock-raiders-web/./src/cfg/GameStatsCfg.ts","webpack://rock-raiders-web/./src/resource/wadworker/WadWorkerMessage.ts","webpack://rock-raiders-web/./src/resource/wadworker/WadWorker.ts"],"names":["getPath","url","strUrl","toString","replace","startsWith","substring","lastInd","lastIndexOf","getFilename","iGet","obj","keys","forEach","keyname","Object","filter","key","toLowerCase","map","HeaderTypes","Array","prototype","remove","element","index","this","indexOf","splice","last","length","undefined","count","callback","counter","e","partition","left","right","a","push","Map","getOrUpdate","updateCallback","value","get","set","String","equalsIgnoreCase","other","BmpDecoder","buffer","toRGBA","bufferView","DataView","byteOffset","byteLength","bottomUp","flag","fromCharCode","pos","Error","locRed","locGreen","locBlue","locAlpha","parseHeader","parseRGBA","fileSize","readUInt32LE","reserved1","getUint16","reserved2","offset","headerSize","width","height","planes","bitPP","compression","rawSize","hr","vr","colors","importantColors","maskAlpha","maskRed","maskGreen","maskBlue","BITMAP_INFO_HEADER","BITMAP_V2_INFO_HEADER","BITMAP_V3_INFO_HEADER","BITMAP_V4_HEADER","BITMAP_V5_HEADER","len","palette","i","blue","green","red","quad","coloShift","maskRedR","maskGreenR","maskBlueR","maskAlphaR","shiftedMaskRedL","shiftedMaskGreenL","shiftedMaskBlueL","shiftedMaskAlphaL","shiftRed","x","shiftGreen","shiftBlue","shiftAlpha","maskColor","data","Uint8Array","bit1","bit4","bit8","bit16","bit24","bit32","xLen","Math","ceil","mode","padding","lastLine","scanImage","line","b","location","rgb","fill","lowNibble","lines","y","c","setPixelData","first4","last4","loc","px","processPixel","call","getUint32","rgbIndex","BitmapWithPalette","ImageData","decoder","super","Uint8ClampedArray","alphaIndex","alphaColor","n","encodeChar","CfgFileParser","result","ancestry","activeObject","isComment","keyVal","seek","charCode","charStr","pop","parsed","parseValue","hasOwnProperty","stack","val","isArray","sub","values","levelConf","textureSet","splitShrink","sep","split","num","Number","isNaN","lVal","includes","LevelObjectiveTextEntry","ObjectiveTextParser","txtFileContent","state","PARSING_STATE","DROP","currentLevel","code","char","KEY","lLine","OBJECTIVE","FAILURE","COMPLETION","CRYSTAL_FAILURE","charCodeAt","objective","failure","completion","crystalFailure","PriorityIdentifier","WorkerMessageType","WadParser","level","row","objectList","currentObject","trim","objectStartMatch","match","drivingMatch","driving","parseFloat","BaseConfig","config","cfgObj","cfgKey","lCfgKeyName","some","objKey","assignValue","console","warn","constructor","name","cfgValue","currentValue","currentIsArray","parsedValue","parsedIsArray","ConfigColor","r","g","ObjectiveImageCfg","filename","LevelsCfg","levelsByName","levelKey","LevelEntryCfg","fullName","endGameAvi1","endGameAvi2","allowRename","recallOLObjects","generateSpiders","video","disableEndTeleport","disableStartTeleport","emergeTimeOut","boulderAnimation","noMultiSelect","noAutoEat","disableToolTipSound","blockSize","digDepth","roughLevel","roofHeight","useRoof","selBoxHeight","fpRotLightRGB","fogColourRGB","highFogColourRGB","fogRate","fallinMultiplier","numberOfLandSlidesTillCaveIn","noFallins","oxygenRate","surfaceMap","predugMap","terrainMap","emergeMap","erodeMap","fallinMap","blockPointersMap","cryOreMap","pathMap","noGather","rockFallStyle","emergeCreature","safeCaverns","seeThroughWalls","oListFile","ptlFile","nerpFile","nerpMessageFile","objectiveText","objectiveImage640x480","erodeTriggerTime","erodeErodeTime","erodeLockTime","nextLevel","levelLinks","frontEndX","frontEndY","frontEndOpen","priorities","reward","menuBMP","setFromCfg","endsWith","LevelPrioritiesEntryConfig","LevelRewardConfig","enabled","enable","modifier","importance","quota","LevelRewardImportanceConfig","LevelRewardQuotaConfig","crystals","timer","caverns","constructions","oxygen","figures","MenuCycleItemCfg","actionName","description","two","labelOff","labelOn","MenuLabelItemCfg","label","target","join","imgNormal","imgHover","imgPressed","tooltip","log","MenuSliderItemCfg","min","max","imgOff","imgOn","imgLeft","imgRight","btnRightNormal","btnLeftNormal","btnRightHover","btnLeftHover","MenuEntryCfg","title","position","menuFont","loFont","hiFont","itemCount","menuImage","autoCenter","displayTitle","overlays","playRandom","itemsLabel","itemsSlider","itemsCycle","anchored","canScroll","lActionName","MenuCfg","menuCount","menus","RewardCfg","display","wallpaper","images","texts","boxImages","fonts","flics","scrollSpeed","centreText","vertSpacing","backFont","font","titleFont","saveButton","advanceButton","completeText","failedText","quitText","textPos","imgConf","RewardImageCfg","RewardTextCfg","RewardFontsCfg","filePath","text","ore","diggable","rockMonsters","score","RonFileParser","content","l","indDoubleSlash","indComment","v","root","parseObj","start","lv","WadAssetRegistry","wadLoader","mainConf","addAssetFolder","loadFontImageAsset","loadAlphaImageAsset","addMenuWithAssets","addAsset","loadObjectiveTexts","addAlphaImageFolder","loadWadImageAsset","loadNerpAsset","levelsCfg","onAssetLoaded","bmpName","loadMapAsset","loadObjectListAsset","loadNerpMsg","addTextureFolder","buildingTypes","bType","bName","aeFile","addAnimatedEntity","vehicleTypes","vParts","vType","vName","loadLWOFile","loadWadTexture","addLWSFile","rewardCfg","imgPath","img","wad0File","getEntryText","cfgRoot","parse","path","polyType","cfgPoly","activities","activity","act","file","error","lwsFilepath","extractLwoFiles","lwoFile","objLine","folderPath","filterEntryNames","assetPath","menuImageAlpha","menuCfg","method","optional","bind","WadFile","entryIndexByName","fLength","fStart","debug","dataView","Int8Array","apply","slice","numberOfEntries","getInt32","bufferStart","entryName","getEntryBuffer","getEntryData","regexStr","regex","RegExp","entry","WadLoader","wad1File","assetIndex","totalResources","assetRegistry","onMessage","msg","onInitialLoad","onLoadDone","loadingTimeSeconds","decode","alphaIndexMatch","assetNames","parseInt","imgData","applyAlphaByIndex","arr","grayscaleToGreen","applyAlpha","nrnName","wad0Data","wad1Data","parseNerpMsgFile","msg1","m1","txt","snd","wadData","isWad0File","txt0Match","txt1Match","sndMatch","numericNameToNumber","digits","one","three","four","five","six","seven","eight","nine","tens","twenty","thirty","forty","number","ten","eleven","twelve","thirteen","fourteen","fifteen","sixteen","seventeen","eighteen","nineteen","eightteen","digitName","parseNerpMessages","txtContent","parseObjectiveTextFile","parseMap","parseObjectList","lwoFilepath","lwoContent","promises","that","asset","Promise","resolve","assetObj","all","then","Date","getTime","startTime","toFixed","onCacheMiss","_onerror","openLocalCache","objectStore","request1","onerror","onsuccess","prop","request2","startLoadingProcess","wad0Url","wad1Url","loadWadFile","wadFiles","put","fetch","response","ok","arrayBuffer","wadFile","parseWadFile","catch","onopen","request","indexedDB","open","onupgradeneeded","db","objectStoreNames","contains","deleteObjectStore","createObjectStore","transaction","cfg","registerAllAssets","size","loadAssetsParallel","BuildingEntityStats","Levels","SelfPowered","PowerBuilding","PickSphere","TrainDynamite","CostOre","CostCrystal","OxygenCoef","GameStatsCfg","Pilot","RouteSpeed","SoilDrillTime","LooseDrillTime","MedDrillTime","HardDrillTime","SeamDrillTime","UpgradeTime","CollRadius","CollHeight","TrackDist","SingleWidthDig","RepairValue","SurveyRadius","Drillsound","Drillfadesound","RestPercent","EnergyDecayRate","CanClearRubble","NumOfToolsCanCarry","CrossLand","RubbleCoef","PathCoef","RouteAvoidance","UseLegoManTeleporter","AwarenessRange","CanStrafe","EnterToolStore","ShowHealthBar","RockMonster","AlertRadius","HealthDecayRate","CanScare","CarryMinHealth","PainThreshold","StampRadius","AttackRadius","CanSteal","GrabMinifigure","BumpDamage","AttackPaths","SplitOnZeroHealth","CanBeHitByFence","Capacity","CanBeShotAt","CanFreeze","FreezerTime","FreezerDamage","CanLaser","LaserDamage","CanPush","PusherDist","PusherDamage","WakeRadius","ScaredByBigBangs","RemoveReinforcement","SmallSpider","RandomMove","RandomEnterWall","CauseSlip","DontShowDamage","DontShowOnRadar","Bat","randomMoveTime","Flocks","FlocksDebug","FlocksSmooth","FlocksSize","FlocksTurn","FlocksSpeed","FlocksTightness","FlocksGoalUpdate","FlocksRandomness","FlocksHeight","CrossWater","CrossLava","TinyRM","ScaredByPlayer","TinyIM","Slug","UseHoles","DrainPower","LavaMonster","IceMonster","Hoverboard","CanBeDriven","UseSmallTeleporter","UpgradeCostOre","UpgradeCostStuds","EngineSound","SmallHeli","Smallmlp","Tracker","CanDoubleSelect","SmallCat","UseWaterTeleporter","MaxCarry","GetInAtLand","GetOutAtLand","TakeCarryingDrivers","SmallDigger","VehicleCanBeCarried","SmallTruck","CarryStart","Bulldozer","UseBigTeleporter","InvisibleDriver","WalkerDigger","DrillSound","DrillFadeSound","LargeDigger","LargeCat","ClassAsLarge","CarryVehicles","LargeHeli","LargeMLP","Barracks","CostRefinedOre","SnaxULike","TrainDriver","CrystalDrain","DamageCausesCallToArms","Powerstation","ProcessCrystal","OreRefinery","ProcessOre","TeleportPad","SmallTeleporter","ManTeleporter","TrainPilot","TeleportBIG","BigTeleporter","Docks","WaterEntrances","WaterTeleporter","TrainSailor","Toolstation","ToolStore","StoreObjects","FunctionCoef","GunStation","Geodome","TrainScanner","Upgrade","UpgradeBuilding","TrainRepair","PowerCrystal","ProcessedOre","Ore","Boulder","Pusher","Freezer","LaserShot","ColRadius","ElectricFence","Path","WadWorkerMessage","type","MSG","CFG","stats","ASSET","DONE","worker","self","postMessage","assetMessage","addEventListener","event","createTextMessage","createCfgLoaded","createAssetLoaded","createLoadDone","loadWadFiles","wad0FileUrl","wad1FileUrl","startWithCachedFiles","CACHE_MISS"],"mappings":"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","file":"737.index.js","sourcesContent":["export function getPath(url: string): string {\n    if (!url) return url\n    let strUrl = url.toString().replace(/\\\\/g, '/')\n    if (strUrl.startsWith('/')) strUrl = strUrl.substring(1)\n    const lastInd = strUrl.lastIndexOf('/')\n    strUrl = strUrl.substring(0, lastInd + 1)\n    if (strUrl.startsWith('/')) strUrl = strUrl.substring(1)\n    return strUrl\n}\n\nexport function getFilename(url: string): string {\n    if (!url) return url\n    let strUrl = url.toString().replace(/\\\\/g, '/')\n    if (strUrl.startsWith('/')) strUrl = strUrl.substring(1)\n    const lastInd = strUrl.lastIndexOf('/')\n    return strUrl.substring(lastInd + 1)\n}\n\nexport function iGet(obj, ...keys: string[]): any {\n    keys.forEach((keyname) => {\n        obj = Object.keys(obj)\n            .filter((key) => key.toLowerCase() === keyname.toLowerCase())\n            .map((key) => obj[key])\n        obj = obj ? obj[0] : obj\n    })\n    return obj\n}\n\nexport function decodeString(data) {\n    return new TextDecoder().decode(data).replace(/\\0/g, '')\n}\n\nexport function decodeFilepath(data) {\n    return decodeString(data).replace(/\\\\/g, '/')\n}\n\nexport function getRandomInclusive(min, max) {\n    min = Math.ceil(min)\n    max = Math.floor(max)\n    return Math.floor(Math.random() * (max - min + 1)) + min\n}\n\nexport function getRandom(max) {\n    return getRandomInclusive(0, max)\n}\n\nexport function getRandomSign() {\n    return -1 + getRandomInclusive(0, 1) * 2\n}\n\nexport function clearTimeoutSafe(timeout: NodeJS.Timeout) {\n    if (timeout) clearTimeout(timeout)\n    return null\n}\n\nexport function clearIntervalSafe(interval: NodeJS.Timeout) {\n    if (interval) clearInterval(interval)\n    return null\n}\n\ndeclare global {\n\n    interface Array<T> {\n        remove(element: T): void\n\n        last(): T\n\n        count(callback: (element: T) => boolean): number\n\n        partition(filter: (element: T) => boolean): [T[], T[]]\n    }\n\n    interface Map<K, V> {\n        getOrUpdate(key: K, updateCallback: () => V): V\n    }\n\n    interface String {\n        equalsIgnoreCase(other: string): boolean\n    }\n\n}\n\nArray.prototype.remove = function <T>(element: T): void {\n    const index = this.indexOf(element)\n    if (index !== -1) this.splice(index, 1)\n}\n\nArray.prototype.last = function <T>(): T {\n    return this.length > 0 ? this[this.length - 1] : undefined\n}\n\nArray.prototype.count = function <T>(callback: (element: T) => boolean): number {\n    let counter = 0\n    this.forEach((e) => callback(e) && counter++)\n    return counter\n}\n\nArray.prototype.partition = function <T>(filter: (element: T) => boolean): [T[], T[]] {\n    const left: T[] = [], right: T[] = []\n    this.forEach((a) => filter(a) ? left.push(a) : right.push(a))\n    return [left, right]\n}\n\n// noinspection JSUnusedGlobalSymbols\nMap.prototype.getOrUpdate = function <K, V>(key: K, updateCallback: () => V): V {\n    let value = this.get(key)\n    if (value === undefined) {\n        value = updateCallback()\n        this.set(key, value)\n    }\n    return value\n}\n\nString.prototype.equalsIgnoreCase = function (other: string): boolean {\n    return this.toLowerCase() === other?.toLowerCase()\n}\n","/**\n * Source: https://github.com/wokwi/bmp-ts\n */\n\nenum HeaderTypes {\n    BITMAP_INFO_HEADER = 40,\n    BITMAP_V2_INFO_HEADER = 52,\n    BITMAP_V3_INFO_HEADER = 56,\n    BITMAP_V4_HEADER = 108,\n    BITMAP_V5_HEADER = 124\n}\n\n// We have these:\n//\n// const sample = 0101 0101 0101 0101\n// const mask   = 0111 1100 0000 0000\n// 256        === 0000 0001 0000 0000\n//\n// We want to take the sample and turn it into an 8-bit value.\n//\n// 1. We extract the last bit of the mask:\n//\n// 0000 0100 0000 0000\n//       ^\n//\n// Like so:\n//\n// const a = ~mask =    1000 0011 1111 1111\n// const b = a + 1 =    1000 0100 0000 0000\n// const c = b & mask = 0000 0100 0000 0000\n//\n// 2. We shift it to the right and extract the bit before the first:\n//\n// 0000 0000 0010 0000\n//             ^\n//\n// Like so:\n//\n// const d = mask / c = 0000 0000 0001 1111\n// const e = mask + 1 = 0000 0000 0010 0000\n//\n// 3. We apply the mask and the two values above to a sample:\n//\n// const f = sample & mask = 0101 0100 0000 0000\n// const g = f / c =         0000 0000 0001 0101\n// const h = 256 / e =       0000 0000 0000 0100\n// const i = g * h =         0000 0000 1010 1000\n//                                     ^^^^ ^\n//\n// Voila, we have extracted a sample and \"stretched\" it to 8 bits. For samples\n// which are already 8-bit, h === 1 and g === i.\n\nfunction maskColor(\n    maskRed: number,\n    maskGreen: number,\n    maskBlue: number,\n    maskAlpha: number,\n) {\n    const maskRedR = (~maskRed + 1) & maskRed\n    const maskGreenR = (~maskGreen + 1) & maskGreen\n    const maskBlueR = (~maskBlue + 1) & maskBlue\n    const maskAlphaR = (~maskAlpha + 1) & maskAlpha\n\n    const shiftedMaskRedL = maskRed / maskRedR + 1\n    const shiftedMaskGreenL = maskGreen / maskGreenR + 1\n    const shiftedMaskBlueL = maskBlue / maskBlueR + 1\n    const shiftedMaskAlphaL = maskAlpha / maskAlphaR + 1\n\n    return {\n        shiftRed: (x: number) =>\n            (((x & maskRed) / maskRedR) * 0x100) / shiftedMaskRedL,\n        shiftGreen: (x: number) =>\n            (((x & maskGreen) / maskGreenR) * 0x100) / shiftedMaskGreenL,\n        shiftBlue: (x: number) =>\n            (((x & maskBlue) / maskBlueR) * 0x100) / shiftedMaskBlueL,\n        shiftAlpha:\n            maskAlpha !== 0\n                ? (x: number) =>\n                (((x & maskAlpha) / maskAlphaR) * 0x100) / shiftedMaskAlphaL\n                : () => 255,\n    }\n}\n\nconst enum Compression {\n    NONE = 0,\n    BI_RLE8 = 1,\n    BI_RLE4 = 2,\n    BI_BIT_FIELDS = 3,\n    BI_ALPHA_BIT_FIELDS = 6\n}\n\ntype BitsPerPixel = 1 | 4 | 8 | 16 | 24 | 32;\n\ninterface IColor {\n    red: number;\n    green: number;\n    blue: number;\n    quad: number;\n}\n\ninterface IDecoderOptions {\n    toRGBA?: boolean;\n}\n\ninterface IImage {\n    width: number;\n    height: number;\n    bitPP: BitsPerPixel;\n    data: Uint8Array;\n    reserved1?: number;\n    reserved2?: number;\n    hr?: number;\n    vr?: number;\n    colors?: number;\n    importantColors?: number;\n    palette?: IColor[];\n}\n\ninterface IBitmapImage extends IImage {\n    flag: string;\n    fileSize: number;\n    offset: number;\n    headerSize: number;\n    planes?: number;\n    compression?: Compression;\n    rawSize: number;\n}\n\ntype IColorProcessor = (x: number, line: number) => void;\n\nclass BmpDecoder implements IBitmapImage {\n    // Header\n    public flag: string\n    public fileSize!: number\n    public reserved1!: number\n    public reserved2!: number\n    public offset!: number\n    public headerSize!: number\n    public width!: number\n    public height!: number\n    public planes!: number\n    public bitPP!: BitsPerPixel\n    public compression?: Compression\n    public rawSize!: number\n    public hr!: number\n    public vr!: number\n    public colors!: number\n    public importantColors!: number\n    public palette!: IColor[]\n    public data!: Uint8Array\n\n    private maskRed!: number\n    private maskGreen!: number\n    private maskBlue!: number\n    private maskAlpha!: number\n\n    private readonly toRGBA: boolean\n\n    private pos: number\n    private bottomUp: boolean\n    private readonly buffer: Uint8Array\n    private readonly bufferView: DataView\n\n    private readonly locRed: number\n    private readonly locGreen: number\n    private readonly locBlue: number\n    private readonly locAlpha: number\n\n    private shiftRed!: (x: number) => number\n    private shiftGreen!: (x: number) => number\n    private shiftBlue!: (x: number) => number\n    private shiftAlpha!: (x: number) => number\n\n    constructor(\n        buffer: Uint8Array,\n        {toRGBA}: IDecoderOptions = {toRGBA: false},\n    ) {\n        this.buffer = buffer\n        this.bufferView = new DataView(\n            buffer.buffer,\n            buffer.byteOffset,\n            buffer.byteLength,\n        )\n        this.toRGBA = !!toRGBA\n        this.bottomUp = true\n        this.flag = String.fromCharCode(this.buffer[0]) + String.fromCharCode(this.buffer[1])\n        this.pos = 2\n\n        if (this.flag !== 'BM') {\n            throw new Error('Invalid BMP File')\n        }\n\n        this.locRed = this.toRGBA ? 0 : 3\n        this.locGreen = this.toRGBA ? 1 : 2\n        this.locBlue = this.toRGBA ? 2 : 1\n        this.locAlpha = this.toRGBA ? 3 : 0\n\n        this.parseHeader()\n        this.parseRGBA()\n    }\n\n    private parseHeader() {\n        this.fileSize = this.readUInt32LE()\n\n        this.reserved1 = this.bufferView.getUint16(this.pos, true)\n        this.pos += 2\n        this.reserved2 = this.bufferView.getUint16(this.pos, true)\n        this.pos += 2\n\n        this.offset = this.readUInt32LE()\n\n        // End of BITMAP_FILE_HEADER\n        this.headerSize = this.readUInt32LE()\n\n        if (!(this.headerSize in HeaderTypes)) {\n            throw new Error(`Unsupported BMP header size ${this.headerSize}`)\n        }\n\n        this.width = this.readUInt32LE()\n        this.height = this.readUInt32LE()\n\n        this.planes = this.bufferView.getUint16(this.pos, true)\n        this.pos += 2\n        this.bitPP = this.bufferView.getUint16(this.pos, true) as BitsPerPixel\n        this.pos += 2\n\n        this.compression = this.readUInt32LE()\n        this.rawSize = this.readUInt32LE()\n        this.hr = this.readUInt32LE()\n        this.vr = this.readUInt32LE()\n        this.colors = this.readUInt32LE()\n        this.importantColors = this.readUInt32LE()\n\n        // De facto defaults\n\n        if (this.bitPP === 32) {\n            this.maskAlpha = 0\n            this.maskRed = 0x00ff0000\n            this.maskGreen = 0x0000ff00\n            this.maskBlue = 0x000000ff\n        } else if (this.bitPP === 16) {\n            this.maskAlpha = 0\n            this.maskRed = 0x7c00\n            this.maskGreen = 0x03e0\n            this.maskBlue = 0x001f\n        }\n\n        // End of BITMAP_INFO_HEADER\n\n        if (\n            this.headerSize > HeaderTypes.BITMAP_INFO_HEADER ||\n            this.compression === Compression.BI_BIT_FIELDS ||\n            this.compression === Compression.BI_ALPHA_BIT_FIELDS\n        ) {\n            this.maskRed = this.readUInt32LE()\n            this.maskGreen = this.readUInt32LE()\n            this.maskBlue = this.readUInt32LE()\n        }\n\n        // End of BITMAP_V2_INFO_HEADER\n\n        if (\n            this.headerSize > HeaderTypes.BITMAP_V2_INFO_HEADER ||\n            this.compression === Compression.BI_ALPHA_BIT_FIELDS\n        ) {\n            this.maskAlpha = this.readUInt32LE()\n        }\n\n        // End of BITMAP_V3_INFO_HEADER\n\n        if (this.headerSize > HeaderTypes.BITMAP_V3_INFO_HEADER) {\n            this.pos +=\n                HeaderTypes.BITMAP_V4_HEADER - HeaderTypes.BITMAP_V3_INFO_HEADER\n        }\n\n        // End of BITMAP_V4_HEADER\n\n        if (this.headerSize > HeaderTypes.BITMAP_V4_HEADER) {\n            this.pos += HeaderTypes.BITMAP_V5_HEADER - HeaderTypes.BITMAP_V4_HEADER\n        }\n\n        // End of BITMAP_V5_HEADER\n\n        if (this.bitPP <= 8 || this.colors > 0) {\n            const len = this.colors === 0 ? 1 << this.bitPP : this.colors\n            this.palette = new Array(len)\n\n            for (let i = 0; i < len; i++) {\n                const blue = this.buffer[this.pos++]\n                const green = this.buffer[this.pos++]\n                const red = this.buffer[this.pos++]\n                const quad = this.buffer[this.pos++]\n\n                this.palette[i] = {\n                    red,\n                    green,\n                    blue,\n                    quad,\n                }\n            }\n        }\n\n        // End of color table\n\n        // Can the height ever be negative?\n        if (this.height < 0) {\n            this.height *= -1\n            this.bottomUp = false\n        }\n\n        const coloShift = maskColor(\n            this.maskRed,\n            this.maskGreen,\n            this.maskBlue,\n            this.maskAlpha,\n        )\n\n        this.shiftRed = coloShift.shiftRed\n        this.shiftGreen = coloShift.shiftGreen\n        this.shiftBlue = coloShift.shiftBlue\n        this.shiftAlpha = coloShift.shiftAlpha\n    }\n\n    private parseRGBA() {\n        this.data = new Uint8Array(this.width * this.height * 4)\n\n        switch (this.bitPP) {\n            case 1:\n                this.bit1()\n                break\n            case 4:\n                this.bit4()\n                break\n            case 8:\n                this.bit8()\n                break\n            case 16:\n                this.bit16()\n                break\n            case 24:\n                this.bit24()\n                break\n            default:\n                this.bit32()\n        }\n    }\n\n    private bit1() {\n        const xLen = Math.ceil(this.width / 8)\n        const mode = xLen % 4\n        const padding = mode !== 0 ? 4 - mode : 0\n\n        let lastLine: number | undefined\n\n        this.scanImage(padding, xLen, (x, line) => {\n            if (line !== lastLine) {\n                lastLine = line\n            }\n\n            const b = this.buffer[this.pos++]\n            const location = line * this.width * 4 + x * 8 * 4\n\n            for (let i = 0; i < 8; i++) {\n                if (x * 8 + i < this.width) {\n                    const rgb = this.palette[(b >> (7 - i)) & 0x1]\n\n                    this.data[location + i * 4 + this.locAlpha] = 0xff\n                    this.data[location + i * 4 + this.locBlue] = rgb.blue\n                    this.data[location + i * 4 + this.locGreen] = rgb.green\n                    this.data[location + i * 4 + this.locRed] = rgb.red\n                } else {\n                    break\n                }\n            }\n        })\n    }\n\n    private bit4() {\n        if (this.compression === Compression.BI_RLE4) {\n            this.data.fill(0)\n\n            let lowNibble = false //for all count of pixel\n            let lines = this.bottomUp ? this.height - 1 : 0\n            let location = 0\n\n            while (location < this.data.length) {\n                const a = this.buffer[this.pos++]\n                const b = this.buffer[this.pos++]\n\n                //absolute mode\n                if (a === 0) {\n                    if (b === 0) {\n                        //line end\n                        lines += this.bottomUp ? -1 : 1\n                        location = lines * this.width * 4\n                        lowNibble = false\n\n                        continue\n                    }\n\n                    if (b === 1) {\n                        // image end\n                        break\n                    }\n\n                    if (b === 2) {\n                        // offset x, y\n                        const x = this.buffer[this.pos++]\n                        const y = this.buffer[this.pos++]\n\n                        lines += this.bottomUp ? -y : y\n                        location += y * this.width * 4 + x * 4\n                    } else {\n                        let c = this.buffer[this.pos++]\n\n                        for (let i = 0; i < b; i++) {\n                            location = this.setPixelData(\n                                location,\n                                lowNibble ? c & 0x0f : (c & 0xf0) >> 4,\n                            )\n\n                            if (i & 1 && i + 1 < b) {\n                                c = this.buffer[this.pos++]\n                            }\n\n                            lowNibble = !lowNibble\n                        }\n\n                        if ((((b + 1) >> 1) & 1) === 1) {\n                            this.pos++\n                        }\n                    }\n                } else {\n                    //encoded mode\n                    for (let i = 0; i < a; i++) {\n                        location = this.setPixelData(\n                            location,\n                            lowNibble ? b & 0x0f : (b & 0xf0) >> 4,\n                        )\n                        lowNibble = !lowNibble\n                    }\n                }\n            }\n        } else {\n            const xLen = Math.ceil(this.width / 2)\n            const mode = xLen % 4\n            const padding = mode !== 0 ? 4 - mode : 0\n\n            this.scanImage(padding, xLen, (x, line) => {\n                const b = this.buffer[this.pos++]\n                const location = line * this.width * 4 + x * 2 * 4\n\n                const first4 = b >> 4\n                let rgb = this.palette[first4]\n\n                this.data[location + this.locAlpha] = 0xff\n                this.data[location + this.locBlue] = rgb.blue\n                this.data[location + this.locGreen] = rgb.green\n                this.data[location + this.locRed] = rgb.red\n\n                if (x * 2 + 1 >= this.width) {\n                    // throw new Error('Something');\n                    return false\n                }\n\n                const last4 = b & 0x0f\n                rgb = this.palette[last4]\n\n                this.data[location + 4 + this.locAlpha] = 0xff\n                this.data[location + 4 + this.locBlue] = rgb.blue\n                this.data[location + 4 + this.locGreen] = rgb.green\n                this.data[location + 4 + this.locRed] = rgb.red\n            })\n        }\n    }\n\n    private bit8() {\n        if (this.compression === Compression.BI_RLE8) {\n            this.data.fill(0)\n\n            let lines = this.bottomUp ? this.height - 1 : 0\n            let location = 0\n\n            while (location < this.data.length) {\n                const a = this.buffer[this.pos++]\n                const b = this.buffer[this.pos++]\n\n                //absolute mode\n                if (a === 0) {\n                    if (b === 0) {\n                        //line end\n                        lines += this.bottomUp ? -1 : 1\n                        location = lines * this.width * 4\n                        continue\n                    }\n\n                    if (b === 1) {\n                        //image end\n                        break\n                    }\n\n                    if (b === 2) {\n                        //offset x,y\n                        const x = this.buffer[this.pos++]\n                        const y = this.buffer[this.pos++]\n\n                        lines += this.bottomUp ? -y : y\n                        location += y * this.width * 4 + x * 4\n                    } else {\n                        for (let i = 0; i < b; i++) {\n                            const c = this.buffer[this.pos++]\n                            location = this.setPixelData(location, c)\n                        }\n\n                        // @ts-ignore\n                        const shouldIncrement = b & (1 === 1)\n                        if (shouldIncrement) {\n                            this.pos++\n                        }\n                    }\n                } else {\n                    //encoded mode\n                    for (let i = 0; i < a; i++) {\n                        location = this.setPixelData(location, b)\n                    }\n                }\n            }\n        } else {\n            const mode = this.width % 4\n            const padding = mode !== 0 ? 4 - mode : 0\n\n            this.scanImage(padding, this.width, (x, line) => {\n                const b = this.buffer[this.pos++]\n                const location = line * this.width * 4 + x * 4\n\n                if (b < this.palette.length) {\n                    const rgb = this.palette[b]\n\n                    this.data[location + this.locAlpha] = 0xff\n                    this.data[location + this.locBlue] = rgb.blue\n                    this.data[location + this.locGreen] = rgb.green\n                    this.data[location + this.locRed] = rgb.red\n                }\n            })\n        }\n    }\n\n    private bit16() {\n        const padding = (this.width % 2) * 2\n\n        this.scanImage(padding, this.width, (x, line) => {\n            const loc = line * this.width * 4 + x * 4\n            const px = this.bufferView.getUint16(this.pos, true)\n            this.pos += 2\n\n            this.data[loc + this.locRed] = this.shiftRed(px)\n            this.data[loc + this.locGreen] = this.shiftGreen(px)\n            this.data[loc + this.locBlue] = this.shiftBlue(px)\n            this.data[loc + this.locAlpha] = this.shiftAlpha(px)\n        })\n    }\n\n    private bit24() {\n        const padding = this.width % 4\n\n        this.scanImage(padding, this.width, (x, line) => {\n            const loc = line * this.width * 4 + x * 4\n            const blue = this.buffer[this.pos++]\n            const green = this.buffer[this.pos++]\n            const red = this.buffer[this.pos++]\n\n            this.data[loc + this.locAlpha] = 0xff\n            this.data[loc + this.locBlue] = blue\n            this.data[loc + this.locGreen] = green\n            this.data[loc + this.locRed] = red\n        })\n    }\n\n    private bit32() {\n        this.scanImage(0, this.width, (x, line) => {\n            const loc = line * this.width * 4 + x * 4\n            const px = this.readUInt32LE()\n\n            this.data[loc + this.locAlpha] = this.shiftAlpha(px)\n            this.data[loc + this.locBlue] = this.shiftBlue(px)\n            this.data[loc + this.locGreen] = this.shiftGreen(px)\n            this.data[loc + this.locRed] = this.shiftRed(px)\n        })\n    }\n\n    private scanImage(\n        padding = 0,\n        width = this.width,\n        processPixel: IColorProcessor,\n    ) {\n        for (let y = this.height - 1; y >= 0; y--) {\n            const line = this.bottomUp ? y : this.height - 1 - y\n\n            for (let x = 0; x < width; x++) {\n                processPixel.call(this, x, line)\n            }\n\n            this.pos += padding\n        }\n    }\n\n    private readUInt32LE() {\n        const value = this.bufferView.getUint32(this.pos, true)\n        this.pos += 4\n        return value\n    }\n\n    private setPixelData(location: number, rgbIndex: number) {\n        const {blue, green, red} = this.palette[rgbIndex]\n\n        this.data[location + this.locAlpha] = 0xff\n        this.data[location + this.locBlue] = blue\n        this.data[location + this.locGreen] = green\n        this.data[location + this.locRed] = red\n\n        return location + 4\n    }\n}\n\nexport class BitmapWithPalette extends ImageData {\n\n    readonly palette: IColor[]\n\n    static decode(buffer: Uint8Array): BitmapWithPalette {\n        return new BitmapWithPalette(new BmpDecoder(buffer, {toRGBA: true}))\n    }\n\n    constructor(decoder: BmpDecoder) {\n        super(new Uint8ClampedArray(decoder.data), decoder.width, decoder.height)\n        this.palette = decoder.palette\n    }\n\n    applyAlphaByIndex(alphaIndex: number): BitmapWithPalette {\n        if (alphaIndex || alphaIndex === 0) {\n            const alphaColor = this.palette?.[alphaIndex] // XXX fails for a102_bigtyre.bmp\n            if (alphaColor) {\n                const data = this.data\n                for (let c = 0; c < data.length; c += 4) {\n                    data[c + 3] = alphaColor.red === data[c] && alphaColor.green === data[c + 1] && alphaColor.blue === data[c + 2] ? 0 : 255\n                }\n            }\n        }\n        return this\n    }\n\n    applyAlpha(): BitmapWithPalette {\n        const data = this.data\n        for (let n = 0; n < data.length; n += 4) {\n            if (data[n] <= 2 && data[n + 1] <= 2 && data[n + 2] <= 2) { // Interface/Reward/RSoxygen.bmp uses 2/2/2 as \"black\" alpha background\n                data[n + 3] = 0\n            }\n        }\n        return this\n    }\n\n}\n","export const encodeChar: number[] = []\n\nfor (let c = 0; c < 256; c++) {\n    encodeChar[c] = c\n}\nencodeChar[130] = 0x00E4 // ä\nencodeChar[142] = 0x00C4 // Ä\nencodeChar[162] = 0x00F6 // ö\nencodeChar[167] = 0x00DC // Ü\nencodeChar[171] = 0x00FC // ü\nencodeChar[195] = 0x00DF // ß\n","import { encodeChar } from './EncodingHelper'\n\nexport class CfgFileParser {\n\n    static parse(buffer): any {\n        const result = {}\n        const ancestry = []\n        let activeObject = result\n        let isComment = false\n        let keyVal = 0 // 0 = looking for key, 1 = inside key, 1 = looking for value, 2 = inside value\n        let key = ''\n        let value = ''\n        // debug output is a bad idea here, buffer size is about 232.611 characters and has 6781 lines\n        for (let seek = 0; seek < buffer.length; seek++) {\n            let charCode = buffer[seek]\n            if (charCode === 123 && key === 'FullName') { // dirty workaround but in the original file { (123) was used instead of Ä (142)\n                charCode = 142\n            }\n            let charStr = String.fromCharCode(encodeChar[charCode])\n            if (charStr === ';' || charStr === '/') { // someone used // as a marker for a comment\n                isComment = true\n            } else if (charCode === 10 || charCode === 13) {\n                isComment = false\n            }\n            if (!isComment) {\n                if (charCode > 32) { // not a whitespace\n                    if (keyVal === 0) { // looking for key\n                        if (charStr === '}') {\n                            activeObject = ancestry.pop()\n                        } else {\n                            keyVal++\n                            key = charStr\n                        }\n                    } else if (keyVal === 1) { // inside key\n                        key += charStr\n                    } else if (keyVal === 2) { // looking for value\n                        if (charStr === '{') { // start of a new object key is identifier\n                            ancestry.push(activeObject)\n                            activeObject = {}\n                            ancestry[ancestry.length - 1][key] = activeObject\n                            keyVal = 0 // start looking for a key again\n                        } else {\n                            keyVal++\n                            value = charStr\n                        }\n                    } else if (keyVal === 3) { // inside value\n                        value += charStr\n                    }\n                } else { // some whitespace\n                    if (keyVal === 1) {\n                        keyVal++\n                    } else if (keyVal === 3) {\n                        keyVal = 0\n                        const parsed = CfgFileParser.parseValue(value)\n                        if (activeObject.hasOwnProperty(key)) {\n                            activeObject[key].push(parsed)\n                        } else {\n                            activeObject[key] = [parsed]\n                        }\n                    }\n                }\n            }\n        }\n\n        const stack = [result]\n        while (stack.length > 0) {\n            const obj = stack.pop()\n            Object.keys(obj).forEach((key) => {\n                const val = obj[key]\n                if (Array.isArray(val)) {\n                    if (val.length === 1) {\n                        obj[key] = val[0]\n                    } else {\n                        val.forEach((sub) => stack.push(sub))\n                    }\n                } else if (Object.keys(val).length > 1) {\n                    stack.push(val)\n                }\n            })\n        }\n\n        // apply some patches here\n        Object.values(result['Lego*']['Levels']).forEach((levelConf) => {\n            if (levelConf['CryoreMap']) {\n                levelConf['CryOreMap'] = levelConf['CryoreMap']  // typos... typos everywhere\n                delete levelConf['CryoreMap']\n            }\n            if (levelConf['CryOreMap']) {\n                levelConf['CryOreMap'] = levelConf['CryOreMap'].replace('Cryo_', 'Cror_')\n            }\n            if (levelConf['PredugMap']) {\n                levelConf['PreDugMap'] = levelConf['PredugMap']\n                delete levelConf['PredugMap']\n            }\n            const textureSet = levelConf['TextureSet']\n            if (Array.isArray(textureSet) && Array.isArray(textureSet[1])) {\n                levelConf['TextureSet'] = textureSet[1]\n            }\n        })\n\n        return result['Lego*']\n    }\n\n    static parseValue(val) {\n        function splitShrink(sep) {\n            val = val.split(sep).filter(val => val !== '').map(val => CfgFileParser.parseValue(val))\n            if (val.length === 0) {\n                val = ''\n            } else if (val.length === 1) {\n                val = val[0]\n            }\n        }\n\n        const num = Number(val)\n        if (isNaN(num)) {\n            val = val.toString().replace(/\\\\/g, '/')\n            const lVal = val.toLowerCase()\n            if (lVal === 'true') return true\n            if (lVal === 'false') return false\n            if (lVal === 'null') return ''\n            if (val.includes(':')) {\n                splitShrink.call(this, ':')\n            } else if (val.includes(',')) { // TODO improve cfg handling: what about strings\n                splitShrink.call(this, ',')\n            } else if (val.includes('|')) {\n                splitShrink.call(this, '|')\n            }\n            return val\n        } else {\n            return num\n        }\n    }\n\n}\n","export class LevelObjectiveTextEntry {\n\n    key: string\n    objective: string\n    failure: string\n    completion: string\n    crystalFailure: string\n\n}\n","import { LevelObjectiveTextEntry } from '../../../cfg/LevelObjectiveTextEntry'\nimport { encodeChar } from './EncodingHelper'\n\nexport class ObjectiveTextParser {\n\n    parseObjectiveTextFile(txtFileContent: Uint8Array) {\n        const result = {}\n        let state = PARSING_STATE.DROP\n        let currentLevel: LevelObjectiveTextEntry = null\n        let value = ''\n        let line = ''\n        for (let c = 0; c < txtFileContent.length; c++) {\n            const code = encodeChar[txtFileContent[c]]\n            let char = String.fromCharCode(code)\n            if (state === PARSING_STATE.DROP) {\n                if (char === '[') {\n                    if (currentLevel) result[currentLevel.key] = currentLevel\n                    currentLevel = new LevelObjectiveTextEntry()\n                    state = PARSING_STATE.KEY\n                } else if (currentLevel && char === ':') {\n                    const lLine = line.toLowerCase()\n                    if (lLine === 'objective') {\n                        line = ''\n                        state = PARSING_STATE.OBJECTIVE\n                    } else if (lLine === 'failure') {\n                        line = ''\n                        state = PARSING_STATE.FAILURE\n                    } else if (lLine === 'completion') {\n                        line = ''\n                        state = PARSING_STATE.COMPLETION\n                    } else if (lLine === 'crystalfailure') {\n                        line = ''\n                        state = PARSING_STATE.CRYSTAL_FAILURE\n                    }\n                    for (; c < txtFileContent.length && txtFileContent[c + 1] === '\\t'.charCodeAt(0); c++) {\n                    }\n                } else if (char === '\\n' || char === '\\r') {\n                    line = ''\n                } else {\n                    line += char\n                }\n            } else if (state === PARSING_STATE.KEY) {\n                if (char === ']') {\n                    currentLevel.key = value\n                    value = ''\n                    state = PARSING_STATE.DROP\n                } else if (char === '\\n' || char === '\\r') {\n                    throw 'Malformed objective text file'\n                } else {\n                    value += char\n                }\n            } else if (state === PARSING_STATE.OBJECTIVE) {\n                if (char === '\\n' || char === '\\r') {\n                    currentLevel.objective = value\n                    value = ''\n                    state = PARSING_STATE.DROP\n                } else {\n                    value += char\n                }\n            } else if (state === PARSING_STATE.FAILURE) {\n                if (char === '\\n' || char === '\\r') {\n                    currentLevel.failure = value\n                    value = ''\n                    state = PARSING_STATE.DROP\n                } else {\n                    value += char\n                }\n            } else if (state === PARSING_STATE.COMPLETION) {\n                if (char === '\\n' || char === '\\r') {\n                    currentLevel.completion = value\n                    value = ''\n                    state = PARSING_STATE.DROP\n                } else {\n                    value += char\n                }\n            } else if (state === PARSING_STATE.CRYSTAL_FAILURE) {\n                if (char === '\\n' || char === '\\r') {\n                    currentLevel.crystalFailure = value\n                    value = ''\n                    state = PARSING_STATE.DROP\n                } else {\n                    value += char\n                }\n            }\n        }\n        if (currentLevel) result[currentLevel.key] = currentLevel\n        currentLevel = null\n        return result\n    }\n\n}\n\nenum PARSING_STATE {\n\n    DROP,\n    KEY,\n    OBJECTIVE,\n    FAILURE,\n    COMPLETION,\n    CRYSTAL_FAILURE,\n\n}\n\n","export enum PriorityIdentifier {\n\n    aiPriorityTrain,\n    aiPriorityGetIn,\n    aiPriorityCrystal,\n    aiPriorityOre,\n    aiPriorityRepair,\n    aiPriorityClearing,\n    aiPriorityDestruction,\n    aiPriorityConstruction,\n    aiPriorityReinforce,\n    aiPriorityRecharge,\n\n}\n","export enum WorkerMessageType {\n\n    // wad worker\n    MSG,\n    CFG,\n    CACHE_MISS,\n    SFX,\n    ASSET,\n    DONE,\n\n    // gui/scene worker\n    INIT,\n    CANVAS,\n    REDRAW,\n    RESET,\n    EVENT_POINTER,\n    EVENT_KEY,\n    EVENT_WHEEL,\n    RESPONSE_EVENT,\n    OVERLAY_SETUP,\n    SPACE_TO_CONINUE,\n    SHOW_OPTIONS,\n    GAME_ABORT,\n    GAME_RESTART,\n    GAME_EVENT,\n\n}\n","export class WadParser {\n\n    static parseMap(buffer: Uint8Array) {\n        const map = {width: buffer[8], height: buffer[12], level: []}\n        let row = []\n        for (let seek = 16; seek < buffer.length; seek += 2) {\n            row.push(buffer[seek])\n            if (row.length >= map.width) {\n                map.level.push(row)\n                row = []\n            }\n        }\n        return map\n    }\n\n    static parseObjectList(data: string) {\n        const lines = data.split('\\n')\n        const objectList = []\n        let currentObject = null\n        for (let c = 0; c < lines.length; c++) {\n            const line = lines[c].trim()\n            const objectStartMatch = line.match(/(.+)\\s+{/)\n            const drivingMatch = line.match(/driving\\s+(.+)/)\n            if (line.length < 1 || line.startsWith(';') || line.startsWith('Lego*')) {\n                // ignore empty lines, comments and the root object\n            } else if (objectStartMatch) {\n                currentObject = {}\n                objectList[objectStartMatch[1]] = currentObject\n            } else if (line === '}') {\n                currentObject = null\n            } else if (drivingMatch) {\n                currentObject.driving = drivingMatch[1]\n            } else {\n                const split = line.split(/\\s+/)\n                if (split.length !== 2 || currentObject === null) {\n                    throw 'Unexpected key value entry: ' + line\n                }\n                const key = split[0]\n                let val: any = split[1]\n                if (key === 'xPos' || key === 'yPos' || key === 'heading') {\n                    val = parseFloat(val)\n                } else if (key !== 'type') {\n                    throw 'Unexpected key value entry: ' + line\n                }\n                currentObject[key] = val\n            }\n        }\n        return objectList\n    }\n\n}\n","export class BaseConfig {\n\n    static setFromCfg(config: BaseConfig, cfgObj: any) {\n        Object.keys(cfgObj).forEach((cfgKey) => {\n            const lCfgKeyName = (cfgKey.startsWith('!') ? cfgKey.substring(1) : cfgKey)\n                .toLowerCase()\n                .replace(/_/g, '') // Activity_Stand\n                .replace(/-/g, '') // Geo-dome\n            const found = Object.keys(config).some((objKey) => {\n                return config.assignValue(objKey, lCfgKeyName, cfgObj[cfgKey])\n            })\n            if (!found) {\n                console.warn('cfg key: ' + cfgKey + ' does not exist in cfg: ' + config?.constructor?.name)\n            }\n        })\n        return config\n    }\n\n    assignValue(objKey, lCfgKeyName, cfgValue): boolean {\n        if (objKey.toLowerCase() === lCfgKeyName) {\n            const currentValue = this[objKey]\n            const currentIsArray = Array.isArray(currentValue)\n            let parsedValue = this.parseValue(lCfgKeyName, cfgValue)\n            const parsedIsArray = Array.isArray(parsedValue)\n            if (currentValue && currentIsArray !== parsedIsArray) {\n                if (currentIsArray) {\n                    parsedValue = [parsedValue]\n                    // } else {\n                    //     console.warn('Array overwrite conflict for key ' + objKey + ' with existing value (' + currentValue + ') and new value (' + parsedValue + ')')\n                }\n            }\n            this[objKey] = parsedValue\n            return true\n        }\n    }\n\n    parseValue(lCfgKeyName: string, cfgValue: any): any {\n        return cfgValue\n    }\n\n}\n","export class ConfigColor {\n\n    r: number\n    g: number\n    b: number\n\n    constructor(values: number[]) {\n        [this.r, this.g, this.b] = values\n    }\n\n}\n","export class ObjectiveImageCfg {\n\n    filename: string\n    x: number\n    y: number\n\n    constructor(cfgValue: any) {\n        [this.filename, this.x, this.y] = cfgValue\n    }\n\n}\n","import { iGet } from '../core/Util'\nimport { PriorityIdentifier } from '../game/model/job/PriorityIdentifier'\nimport { BaseConfig } from './BaseConfig'\nimport { ConfigColor } from './ConfigColor'\nimport { ObjectiveImageCfg } from './ObjectiveImageCfg'\n\nexport class LevelsCfg {\n\n    levelsByName: {} = []\n\n    constructor(cfgObj: any) {\n        Object.keys(cfgObj).forEach((levelKey) => {\n            if (!levelKey.startsWith('Tutorial') && !levelKey.startsWith('Level')) return // ignore incomplete test levels and duplicates\n            this.levelsByName[levelKey] = new LevelEntryCfg(cfgObj[levelKey])\n        })\n    }\n\n}\n\nexport class LevelEntryCfg extends BaseConfig {\n\n    fullName: string = ''\n    endGameAvi1: string = ''\n    endGameAvi2: string = ''\n    allowRename: boolean = false\n    recallOLObjects: boolean = false\n    generateSpiders: boolean = false\n    video: string = ''\n    disableEndTeleport: boolean = false\n    disableStartTeleport: boolean = false\n    emergeTimeOut: any = ''\n    boulderAnimation: any = ''\n    noMultiSelect: any = ''\n    noAutoEat: any = ''\n    disableToolTipSound: any = ''\n    blockSize: any = ''\n    digDepth: any = ''\n    roughLevel: any = ''\n    roofHeight: any = ''\n    useRoof: any = ''\n    selBoxHeight: any = ''\n    fpRotLightRGB: any = ''\n    fogColourRGB: any = ''\n    highFogColourRGB: any = ''\n    fogRate: number = 0\n    fallinMultiplier: number = 0\n    numberOfLandSlidesTillCaveIn: number = 0\n    noFallins: boolean = false\n    oxygenRate: number = 0 // 0 - 100\n    surfaceMap: string = ''\n    predugMap: string = ''\n    terrainMap: string = ''\n    emergeMap: string = ''\n    erodeMap: string = ''\n    fallinMap: string = ''\n    blockPointersMap: string = ''\n    cryOreMap: string = ''\n    pathMap: string = ''\n    noGather: boolean = false\n    textureSet: string = ''\n    rockFallStyle: any = ''\n    emergeCreature: any = ''\n    safeCaverns: any = ''\n    seeThroughWalls: any = ''\n    oListFile: any = ''\n    ptlFile: any = ''\n    nerpFile: any = ''\n    nerpMessageFile: any = ''\n    objectiveText: any = ''\n    objectiveImage640x480: ObjectiveImageCfg = null\n    erodeTriggerTime: number = 0\n    erodeErodeTime: number = 0\n    erodeLockTime: number = 0\n    nextLevel: any = ''\n    levelLinks: any = ''\n    frontEndX: number = 0\n    frontEndY: number = 0\n    frontEndOpen: boolean = false\n    priorities: LevelPrioritiesEntryConfig[] = [] // priority order matters!\n    reward: LevelRewardConfig = null\n    menuBMP: string[] = []\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n    parseValue(lCfgKeyName: string, cfgValue: any): any {\n        if (lCfgKeyName === 'fullName'.toLowerCase()) {\n            return cfgValue.replace(/_/g, ' ')\n        } else if (lCfgKeyName.endsWith('rgb')) {\n            return new ConfigColor(cfgValue)\n        } else if (lCfgKeyName === 'priorities') {\n            return Object.keys(cfgValue)\n                .filter(name => name.toLowerCase() !== 'AI_Priority_GetTool'.toLowerCase()) // not used in the game\n                .map(name => new LevelPrioritiesEntryConfig(name, cfgValue[name]))\n        } else if (lCfgKeyName === 'reward') {\n            return new LevelRewardConfig(cfgValue)\n        } else if (lCfgKeyName === 'objectiveimage640x480') {\n            return new ObjectiveImageCfg(cfgValue)\n        } else {\n            return super.parseValue(lCfgKeyName, cfgValue)\n        }\n    }\n\n}\n\nexport class LevelPrioritiesEntryConfig {\n\n    key: PriorityIdentifier\n    enabled: boolean\n\n    constructor(name: string, enabled: boolean) {\n        this.key = iGet(PriorityIdentifier, name.replace(/_/g, ''))\n        this.enabled = enabled\n    }\n\n}\n\nexport class LevelRewardConfig extends BaseConfig {\n\n    enable: boolean = true\n    modifier: number = null\n    importance: LevelRewardImportanceConfig = null\n    quota: LevelRewardQuotaConfig = null\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n    parseValue(lCfgKeyName: string, cfgValue: any): any {\n        if (lCfgKeyName === 'importance') {\n            return new LevelRewardImportanceConfig(cfgValue)\n        } else if (lCfgKeyName === 'quota') {\n            return new LevelRewardQuotaConfig(cfgValue)\n        } else {\n            return super.parseValue(lCfgKeyName, cfgValue)\n        }\n    }\n}\n\nexport class LevelRewardImportanceConfig extends BaseConfig {\n\n    crystals: number = 0\n    timer: number = 0\n    caverns: number = 0\n    constructions: number = 0\n    oxygen: number = 0\n    figures: number = 0\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n}\n\nexport class LevelRewardQuotaConfig extends BaseConfig {\n\n    crystals: number = null\n    timer: number = null\n    caverns: number = null\n    constructions: number = null\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n}\n","export class MenuCycleItemCfg {\n\n    actionName: string\n    x: number\n    y: number\n    width: number\n    height: number\n    description: string\n    two: number // usage unclear\n    labelOff: string\n    labelOn: string\n\n    constructor(cfgObj: any) {\n        [this.actionName, this.x, this.y, this.width, this.height, this.description, this.two, this.labelOff, this.labelOn] = cfgObj\n        this.description = this.description.replace(/_/g, ' ')\n    }\n\n}\n","export class MenuLabelItemCfg {\n\n    actionName: string\n    x: number\n    y: number\n    label: string\n    imgNormal: string\n    imgHover: string\n    imgPressed: string\n    tooltip: string\n    target: string\n    flag: string // usage unclear\n\n    constructor(cfgObj: any) {\n        if (cfgObj.length === 5 || cfgObj.length === 6) {\n            [this.actionName, this.x, this.y, this.label, this.target, this.flag] = cfgObj\n            this.label = Array.isArray(this.label) ? this.label.join(',') : this.label // TODO improve cfg handling, remove join\n            this.label = this.label.replace(/_/g, ' ')\n        } else if (cfgObj.length === 8) {\n            [this.actionName, this.x, this.y, this.imgNormal, this.imgHover, this.imgPressed, this.tooltip, this.target] = cfgObj\n        } else {\n            console.warn('Unexpected cfg object length: ' + cfgObj.length)\n            console.log(cfgObj)\n        }\n    }\n\n}\n","export class MenuSliderItemCfg {\n\n    actionName: string\n    x: number\n    y: number\n    width: number\n    height: number\n    description: string\n    min: number\n    max: number\n    imgOff: string\n    imgOn: string\n    imgLeft: string\n    imgRight: string\n    btnLeftNormal: string\n    btnRightNormal: string\n    btnLeftHover: string\n    btnRightHover: string\n\n    constructor(cfgObj: any) {\n        [this.actionName, this.x, this.y, this.width, this.height, this.description, this.min, this.max, this.imgOff, this.imgOn,\n            this.imgLeft, this.imgRight, this.btnRightNormal, this.btnLeftNormal, this.btnRightHover, this.btnLeftHover] = cfgObj\n    }\n\n}\n","import { BaseConfig } from './BaseConfig'\nimport { MenuCycleItemCfg } from './MenuCycleItemCfg'\nimport { MenuLabelItemCfg } from './MenuLabelItemCfg'\nimport { MenuSliderItemCfg } from './MenuSliderItemCfg'\n\nexport class MenuEntryCfg extends BaseConfig {\n\n    fullName: string = ''\n    title: string = ''\n    position: [number, number] = [0, 0]\n    menuFont: string = ''\n    loFont: string = ''\n    hiFont: string = ''\n    itemCount: number = 0\n    menuImage: string = ''\n    autoCenter: boolean = false\n    displayTitle: boolean = false\n    overlays: any[] = []\n    playRandom: boolean = false\n    itemsLabel: MenuLabelItemCfg[] = []\n    itemsSlider: MenuSliderItemCfg[] = []\n    itemsCycle: MenuCycleItemCfg[] = []\n    anchored: boolean = false\n    canScroll: boolean = false\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n    assignValue(objKey, lCfgKeyName, cfgValue): boolean {\n        if (lCfgKeyName.match(/item\\d+/i)) {\n            const lActionName = cfgValue[0].toLowerCase()\n            if (lActionName === 'next' || lActionName === 'trigger') {\n                this.itemsLabel.push(new MenuLabelItemCfg(cfgValue))\n            } else if (lActionName === 'slider') {\n                this.itemsSlider.push(new MenuSliderItemCfg(cfgValue))\n            } else if (lActionName === 'cycle') {\n                this.itemsCycle.push(new MenuCycleItemCfg(cfgValue))\n            } else {\n                console.warn('Unexpected item action name: ' + cfgValue[0])\n                return false\n            }\n            return true\n        } else if (lCfgKeyName.match(/overlay\\d+/i)) {\n            this.overlays.push(cfgValue)\n            return true\n        }\n        return super.assignValue(objKey, lCfgKeyName, cfgValue)\n    }\n\n    parseValue(lCfgKeyName: string, cfgValue: any): any {\n        if (lCfgKeyName === 'fullName'.toLowerCase() || lCfgKeyName === 'title') {\n            return cfgValue.replace(/_/g, ' ')\n        } else {\n            return super.parseValue(lCfgKeyName, cfgValue)\n        }\n    }\n\n}\n","import { BaseConfig } from './BaseConfig'\nimport { MenuEntryCfg } from './MenuEntryCfg'\n\nexport class MenuCfg extends BaseConfig {\n\n    menuCount: number = 0\n    menus: MenuEntryCfg[] = []\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n    assignValue(objKey, lCfgKeyName, cfgValue): boolean {\n        if (lCfgKeyName.match(/menu\\d+/i)) {\n            this.menus.push(new MenuEntryCfg(cfgValue))\n            return true\n        }\n        return super.assignValue(objKey, lCfgKeyName, cfgValue)\n    }\n\n}\n","import { BaseConfig } from './BaseConfig'\n\nexport class RewardCfg extends BaseConfig {\n\n    display: boolean = true\n    wallpaper: string = ''\n    images: RewardImageCfg[] = []\n    texts: RewardTextCfg[] = []\n    boxImages: RewardImageCfg[] = []\n    fonts: RewardFontsCfg = null\n    flics: { flhFilepath: string, x: number, y: number, w: number, h: number } = null\n    scrollSpeed: number = 0\n    centreText: boolean = false\n    vertSpacing: number = 0\n    backFont: string = ''\n    font: string = ''\n    titleFont: string = ''\n    timer: number = 0\n    saveButton: any = ''\n    advanceButton: any = ''\n    completeText: string = ''\n    failedText: string = ''\n    quitText: string = ''\n    textPos: [number, number] = [0, 0]\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n    assignValue(objKey, lCfgKeyName, cfgValue): boolean {\n        if (lCfgKeyName === 'images') {\n            Object.values(cfgValue).forEach((imgConf) => this.images.push(new RewardImageCfg(imgConf)))\n            return true\n        } else if (lCfgKeyName === 'text') {\n            Object.values(cfgValue).forEach((imgConf) => this.texts.push(new RewardTextCfg(imgConf)))\n            return true\n        } else if (lCfgKeyName === 'boximages') {\n            Object.values(cfgValue).forEach((imgConf) => this.boxImages.push(new RewardImageCfg(imgConf)))\n            return true\n        } else if (lCfgKeyName === 'fonts') {\n            this.fonts = new RewardFontsCfg(cfgValue)\n            return true\n        } else {\n            return super.assignValue(objKey, lCfgKeyName, cfgValue)\n        }\n    }\n\n}\n\nexport class RewardImageCfg {\n\n    filePath: string = ''\n    x: number = 0\n    y: number = 0\n\n    constructor(cfgObj: any) {\n        [this.filePath, this.x, this.y] = cfgObj\n    }\n\n}\n\nexport class RewardTextCfg {\n\n    text: string = ''\n    x: number = 0\n    y: number = 0\n\n    constructor(cfgObj: any) {\n        [this.text, this.x, this.y] = cfgObj\n    }\n\n}\n\nexport class RewardFontsCfg extends BaseConfig {\n\n    crystals: string = ''\n    ore: string = ''\n    diggable: string = ''\n    constructions: string = ''\n    caverns: string = ''\n    figures: string = ''\n    rockMonsters: string = ''\n    oxygen: string = ''\n    timer: string = ''\n    score: string = ''\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n}\n","// The RockRaidersObjectNotation (RON) format is related to JSON\n\nexport class RonFileParser {\n\n    static parse(content: string) {\n        const lines: string[][] = content.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n') // normalize newlines\n            .replace(/\\t/g, ' ') // tabs to spaces\n            .split('\\n')\n            .map((l) => { // strip comments from each line\n                const indDoubleSlash = l.indexOf('//')\n                if (indDoubleSlash > -1) l = l.substring(0, indDoubleSlash)\n                const indComment = l.indexOf(';')\n                if (indComment > -1) l = l.substring(0, indComment)\n                return l\n            })\n            .map((l) => { // remove whitespace at start/end of lines\n                l = l.trim()\n                return l\n            })\n            .filter(l => l !== '') // filter empty lines\n            .map((v) => v.split(' ').filter(v => v !== ''))\n        const root = {}\n        RonFileParser.parseObj(root, lines, 0)\n        return root\n    }\n\n    static parseObj(obj: {}, lines: string[][], start): number {\n        for (let c = start; c < lines.length; c++) {\n            const [name, val] = lines[c]\n            const key = name.toLowerCase()\n            if (val === '{') {\n                obj[key] = {}\n                c = this.parseObj(obj[key], lines, c + 1)\n            } else if (key === '}') {\n                return c\n            } else {\n                // parse values\n                let value: any = val.split(':').filter(v => v !== '') // there is key::value\n                    .map(v => v.split(',').map(v => v.split('|').map(v => this.parseValue(v))))\n                while (value.length === 1) value = value[0] // replace arrays with only one value\n                obj[key] = value\n            }\n        }\n        return lines.length\n    }\n\n    static parseValue(value: string) {\n        const num = Number(value)\n        const lv = value.toLowerCase()\n        if (!isNaN(num)) {\n            return num\n        } else if (lv === 'false') {\n            return false\n        } else if (lv === 'true') {\n            return true\n        } else {\n            return value\n        }\n    }\n\n}\n","import { LevelEntryCfg, LevelsCfg } from '../../cfg/LevelsCfg'\nimport { MenuCfg } from '../../cfg/MenuCfg'\nimport { RewardCfg } from '../../cfg/RewardCfg'\nimport { getFilename, getPath, iGet } from '../../core/Util'\nimport { RonFileParser } from './parser/RonFileParser'\nimport { WadLoader } from './WadLoader'\n\ninterface WadAsset {\n    method: ((name: string, callback: (assetName: string[], assetData: any) => void) => void)\n    assetPath: string\n    optional: boolean\n}\n\nexport class WadAssetRegistry extends Map<string, WadAsset> {\n\n    wadLoader: WadLoader\n\n    constructor(wadLoader: WadLoader) {\n        super()\n        this.wadLoader = wadLoader\n    }\n\n    registerAllAssets(mainConf: any) {\n        // add fonts and cursors\n        this.addAssetFolder(this.wadLoader.loadFontImageAsset, 'Interface/Fonts/')\n        this.addAssetFolder(this.wadLoader.loadAlphaImageAsset, 'Interface/Pointers/')\n        // add menu assets\n        this.addMenuWithAssets(mainConf, 'MainMenuFull', false)\n        this.addMenuWithAssets(mainConf, 'PausedMenu')\n        this.addMenuWithAssets(mainConf, 'OptionsMenu')\n        this.addAsset(this.wadLoader.loadAlphaImageAsset, 'Interface/BriefingPanel/BriefingPanel.bmp')\n        this.addAsset(this.wadLoader.loadObjectiveTexts, 'Languages/ObjectiveText.txt')\n        // add in-game assets\n        this.addAlphaImageFolder('Interface/TopPanel/') // top panel\n        this.addAlphaImageFolder('Interface/RightPanel/') // crystal side bar\n        this.addAlphaImageFolder('Interface/RadarPanel/')\n        this.addAlphaImageFolder('Interface/MessagePanel/')\n        this.addAsset(this.wadLoader.loadWadImageAsset, 'Interface/Airmeter/msgpanel_air_juice.bmp')\n        this.addAlphaImageFolder('Interface/InfoPanel/')\n        this.addAlphaImageFolder('Interface/PriorityPanel/')\n        this.addAlphaImageFolder('Interface/Priorities')\n        this.addAlphaImageFolder('Interface/CameraControl/')\n        this.addAlphaImageFolder('Interface/MessageTabs/')\n        this.addAlphaImageFolder('Interface/IconPanel/')\n        this.addAlphaImageFolder('Interface/Icons/')\n        this.addAlphaImageFolder('Interface/Menus/')\n        this.addAlphaImageFolder('Interface/Buttons/')\n        this.addAlphaImageFolder('Interface/InfoImages/')\n        this.addAssetFolder(this.wadLoader.loadAlphaImageAsset, 'Interface/FrontEnd/Vol_')\n        this.addAssetFolder(this.wadLoader.loadWadImageAsset, 'Interface/FrontEnd/lp_')\n        this.addAsset(this.wadLoader.loadAlphaImageAsset, 'Interface/FrontEnd/LowerPanel.bmp')\n        // level files\n        this.addAsset(this.wadLoader.loadNerpAsset, 'Levels/nerpnrn.h')\n        const levelsCfg = new LevelsCfg(iGet(mainConf, 'Levels'))\n        this.wadLoader.onAssetLoaded(0, ['Levels'], levelsCfg)\n        Object.values(levelsCfg.levelsByName).forEach((level: LevelEntryCfg) => {\n            level.menuBMP.forEach((bmpName) => {\n                this.addAsset(this.wadLoader.loadAlphaImageAsset, bmpName)\n            })\n            this.addAsset(this.wadLoader.loadMapAsset, level.surfaceMap)\n            this.addAsset(this.wadLoader.loadMapAsset, level.predugMap)\n            this.addAsset(this.wadLoader.loadMapAsset, level.terrainMap)\n            this.addAsset(this.wadLoader.loadMapAsset, level.blockPointersMap, true)\n            this.addAsset(this.wadLoader.loadMapAsset, level.cryOreMap)\n            this.addAsset(this.wadLoader.loadMapAsset, level.pathMap, true)\n            if (level.fallinMap) this.addAsset(this.wadLoader.loadMapAsset, level.fallinMap)\n            if (level.erodeMap) this.addAsset(this.wadLoader.loadMapAsset, level.erodeMap)\n            this.addAsset(this.wadLoader.loadObjectListAsset, level.oListFile)\n            this.addAsset(this.wadLoader.loadNerpAsset, level.nerpFile)\n            this.addAsset(this.wadLoader.loadNerpMsg, level.nerpMessageFile)\n        })\n        // load all shared textures\n        this.addTextureFolder('World/Shared/')\n        this.addTextureFolder('Vehicles/SharedUG/')\n        // load all building types\n        const buildingTypes = mainConf['BuildingTypes']\n        Object.values(buildingTypes).forEach((bType: string) => {\n            const bName = bType.split('/')[1]\n            const aeFile = bType + '/' + bName + '.ae'\n            this.addAnimatedEntity(aeFile)\n        })\n        this.addAnimatedEntity('mini-figures/pilot/pilot.ae')\n        // load monsters\n        this.addAnimatedEntity('Creatures/SpiderSB/SpiderSB.ae')\n        this.addAnimatedEntity('Creatures/bat/bat.ae')\n        // load vehicles\n        const vehicleTypes = mainConf['VehicleTypes']\n        Object.values(vehicleTypes).map((v) => Array.isArray(v) ? v : [v]).forEach((vParts: string[]) => {\n            vParts.forEach((vType) => {\n                const vName = vType.split('/')[1]\n                const aeFile = vType + '/' + vName + '.ae'\n                this.addAnimatedEntity(aeFile)\n            })\n        })\n        // load misc objects\n        this.addAnimatedEntity(iGet(mainConf, 'MiscObjects', 'Dynamite') + '/Dynamite.ae')\n        this.addAnimatedEntity(iGet(mainConf, 'MiscObjects', 'Barrier') + '/Barrier.ae')\n        this.addTextureFolder('MiscAnims/Crystal/')\n        this.addAsset(this.wadLoader.loadLWOFile, 'World/Shared/Crystal.lwo') // highpoly version, but unused?\n        this.addAsset(this.wadLoader.loadLWOFile, iGet(mainConf, 'MiscObjects', 'Crystal') + '.lwo')\n        this.addAsset(this.wadLoader.loadWadTexture, 'MiscAnims/Ore/Ore.bmp')\n        this.addAsset(this.wadLoader.loadLWOFile, iGet(mainConf, 'MiscObjects', 'Ore') + '.lwo')\n        this.addAsset(this.wadLoader.loadLWOFile, 'World/Shared/Brick.lwo')\n        this.addAsset(this.wadLoader.loadLWOFile, iGet(mainConf, 'MiscObjects', 'ProcessedOre') + '.lwo')\n        this.addTextureFolder('Buildings/E-Fence/')\n        this.addAsset(this.wadLoader.loadLWOFile, iGet(mainConf, 'MiscObjects', 'ElectricFence') + '.lwo')\n        this.addAnimatedEntity(iGet(mainConf, 'MiscObjects', 'Barrier') + '/Barrier.ae')\n        this.addAnimatedEntity('MiscAnims/Dynamite/Dynamite.ae')\n        this.addTextureFolder('MiscAnims/RockFall/')\n        this.addLWSFile('MiscAnims/RockFall/Rock3Sides.lws')\n        // spaces\n        this.addTextureFolder('World/WorldTextures/IceSplit/Ice')\n        this.addTextureFolder('World/WorldTextures/LavaSplit/Lava')\n        this.addTextureFolder('World/WorldTextures/RockSplit/Rock')\n        // reward screen\n        const rewardCfg = new RewardCfg(iGet(mainConf, 'Reward'))\n        this.wadLoader.onAssetLoaded(0, ['Reward'], rewardCfg)\n        this.addAsset(this.wadLoader.loadWadImageAsset, rewardCfg.wallpaper)\n        this.addAsset(this.wadLoader.loadFontImageAsset, rewardCfg.backFont)\n        Object.values(rewardCfg.fonts).forEach(imgPath => this.addAsset(this.wadLoader.loadFontImageAsset, imgPath))\n        rewardCfg.images.forEach(img => this.addAsset(this.wadLoader.loadAlphaImageAsset, img.filePath))\n        rewardCfg.boxImages.forEach(img => this.addAsset(this.wadLoader.loadWadImageAsset, img.filePath))\n        rewardCfg.saveButton.splice(0, 4).forEach(img => this.addAsset(this.wadLoader.loadWadImageAsset, img))\n        rewardCfg.advanceButton.splice(0, 4).forEach(img => this.addAsset(this.wadLoader.loadWadImageAsset, img))\n        // // sounds\n        // const samplesConf = mainConf['Samples'];\n        // Object.keys(samplesConf).forEach(sndKey => {\n        //     let sndPath = samplesConf[sndKey] + '.wav';\n        //     if (sndKey.startsWith('!')) { // TODO no clue what this means... loop? duplicate?!\n        //         sndKey = sndKey.slice(1);\n        //     }\n        //     if (sndPath.startsWith('*')) { // TODO no clue what this means... don't loop, see telportup\n        //         sndPath = sndPath.slice(1);\n        //     } else if (sndPath.startsWith('@')) {\n        //         // sndPath = sndPath.slice(1);\n        //         // console.warn('Sound ' + sndPath + ' must be loaded from program files folder. Not yet implemented!');\n        //         return;\n        //     }\n        //     sndPath.split(',').forEach(sndPath => {\n        //         this.addAsset(this.wadLoader.loadWavAsset, sndPath, false, sndKey);\n        //     });\n        // });\n    }\n\n    addAnimatedEntity(aeFile: string) {\n        const content = this.wadLoader.wad0File.getEntryText(aeFile)\n        const cfgRoot = iGet(RonFileParser.parse(content), 'Lego*')\n        this.wadLoader.onAssetLoaded(0, [aeFile], cfgRoot)\n        const path = getPath(aeFile)\n        // load all textures for this type\n        this.addTextureFolder(path);\n        ['HighPoly', 'MediumPoly', 'LowPoly'].forEach((polyType) => { // TODO add 'FPPoly' (contains two cameras)\n            const cfgPoly = iGet(cfgRoot, polyType)\n            if (cfgPoly) {\n                Object.keys(cfgPoly).forEach((key) => {\n                    this.addAsset(this.wadLoader.loadLWOFile, path + cfgPoly[key] + '.lwo')\n                })\n            }\n        })\n        const activities = iGet(cfgRoot, 'Activities')\n        if (activities) {\n            Object.keys(activities).forEach((activity) => {\n                try {\n                    let keyname = iGet(activities, activity)\n                    const act = iGet(cfgRoot, keyname)\n                    const file = iGet(act, 'FILE')\n                    const isLws = iGet(act, 'LWSFILE') === true\n                    if (isLws) {\n                        this.addLWSFile(path + file + '.lws')\n                    } else {\n                        console.error('Found activity which is not an LWS file')\n                    }\n                } catch (e) {\n                    console.error(e)\n                    console.log(cfgRoot)\n                    console.log(activities)\n                    console.log(activity)\n                }\n            })\n        }\n    }\n\n    addLWSFile(lwsFilepath: string) {\n        const content = this.wadLoader.wad0File.getEntryText(lwsFilepath)\n        this.wadLoader.onAssetLoaded(0, [lwsFilepath], content)\n        const lwoFiles: string[] = this.extractLwoFiles(getPath(lwsFilepath), content)\n        lwoFiles.forEach((lwoFile) => this.addAsset(this.wadLoader.loadLWOFile, lwoFile))\n    }\n\n    extractLwoFiles(path: string, content: string): string[] {\n        const lines: string[] = content.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n') // normalize newlines\n            .replace(/\\t/g, ' ') // tabs to spaces\n            .split('\\n')\n            .map((l) => l.trim())\n\n        if (lines[0] !== 'LWSC') {\n            throw 'Invalid start of file! Expected \\'LWSC\\' in first line'\n        }\n\n        return lines.filter((line) => line.toLowerCase().startsWith('LoadObject '.toLowerCase()))\n            .map((objLine) => path + getFilename(objLine.substring('LoadObject '.length)).toLowerCase())\n    }\n\n    addAlphaImageFolder(folderPath: string) {\n        this.addAssetFolder(this.wadLoader.loadAlphaImageAsset, folderPath)\n    }\n\n    addTextureFolder(folderPath: string) {\n        this.addAssetFolder(this.wadLoader.loadWadTexture, folderPath)\n    }\n\n    addAssetFolder(callback: (name: string, callback: (assetNames: string[], obj: any) => any) => void, folderPath) {\n        this.wadLoader.wad0File.filterEntryNames(folderPath + '.+\\\\.bmp').forEach((assetPath) => {\n            this.addAsset(callback, assetPath)\n        })\n    }\n\n    addMenuWithAssets(mainConf, name: string, menuImageAlpha: boolean = true) {\n        const menuCfg = new MenuCfg(iGet(mainConf, 'Menu', name))\n        this.wadLoader.onAssetLoaded(0, [name], menuCfg)\n        menuCfg.menus.forEach((menuCfg) => {\n            const method = menuImageAlpha ? this.wadLoader.loadAlphaImageAsset : this.wadLoader.loadWadImageAsset\n            const menuImage = Array.isArray(menuCfg.menuImage) ? menuCfg.menuImage[0] : menuCfg.menuImage\n            this.addAsset(method, menuImage)\n            this.addAsset(this.wadLoader.loadFontImageAsset, menuCfg.menuFont)\n            this.addAsset(this.wadLoader.loadFontImageAsset, menuCfg.loFont)\n            this.addAsset(this.wadLoader.loadFontImageAsset, menuCfg.hiFont)\n        })\n    }\n\n    addAsset(method: (name: string, callback: (assetNames: string[], assetData: any) => void) => void, assetPath, optional = false) {\n        if (!assetPath || this.hasOwnProperty(assetPath) || assetPath === 'NULL') {\n            return // do not load assets twice\n        }\n        this.set(assetPath, {method: method.bind(this.wadLoader), assetPath: assetPath, optional: optional})\n    }\n\n}\n","import { encodeChar } from './parser/EncodingHelper'\n\n/**\n * Handles the extraction of single files from a bigger WAD data blob\n */\nexport class WadFile {\n\n    buffer: Int8Array = null\n    entryIndexByName: Map<string, number> = new Map()\n    fLength: number[] = []\n    fStart: number[] = []\n\n    /**\n     * Validate and parse the given data object as binary blob of a WAD file\n     * @param data binary blob\n     * @param debug enable/disable debug output while parsing\n     */\n    parseWadFile(data, debug = false) {\n        const dataView = new DataView(data)\n        this.buffer = new Int8Array(data)\n        let pos = 0\n        if (String.fromCharCode.apply(null, this.buffer.slice(pos, 4)) !== 'WWAD') {\n            throw 'Invalid WAD0 file provided'\n        }\n        if (debug) {\n            console.log('WAD0 file seems legit')\n        }\n        pos = 4\n        const numberOfEntries = dataView.getInt32(pos, true)\n        if (debug) {\n            console.log(numberOfEntries)\n        }\n        pos = 8\n\n        let bufferStart = pos\n        for (let i = 0; i < numberOfEntries; pos++) {\n            if (this.buffer[pos] === 0) {\n                this.entryIndexByName.set(String.fromCharCode.apply(null, this.buffer.slice(bufferStart, pos)).replace(/\\\\/g, '/').toLowerCase(), i)\n                bufferStart = pos + 1\n                i++\n            }\n        }\n\n        if (debug) {\n            console.log(this.entryIndexByName)\n        }\n\n        for (let i = 0; i < numberOfEntries; pos++) {\n            if (this.buffer[pos] === 0) {\n                bufferStart = pos + 1\n                i++\n            }\n        }\n\n        if (debug) {\n            console.log('Offset after absolute original names is ' + pos)\n        }\n\n        for (let i = 0; i < numberOfEntries; i++) {\n            this.fLength[i] = dataView.getInt32(pos + 8, true)\n            this.fStart[i] = dataView.getInt32(pos + 12, true)\n            pos += 16\n        }\n\n        if (debug) {\n            console.log(this.fLength)\n            console.log(this.fStart)\n        }\n    }\n\n    /**\n     * Returns the entries content extracted by name from the managed WAD file\n     * @param entryName Entry name to be extracted\n     * @returns {Uint8Array} Returns the content as Uint8Array\n     */\n    getEntryData(entryName): Uint8Array {\n        return new Uint8Array(this.getEntryBuffer(entryName))\n    }\n\n    /**\n     * Returns the entries content as text extracted by name from the managed WAD file\n     * @param entryName Entry name to be extracted\n     * @returns {string} Returns the content as String\n     */\n    getEntryText(entryName): string {\n        let result = ''\n        this.getEntryData(entryName).forEach((c) => result += String.fromCharCode(encodeChar[c]))\n        return result\n    }\n\n    /**\n     * Returns the entries content by name extracted from the managed WAD file\n     * @param entryName Entry name to be extracted\n     * @returns {Int8Array} Returns the content as buffer slice\n     */\n    getEntryBuffer(entryName): Int8Array {\n        const index = this.entryIndexByName.get(entryName.toLowerCase())\n        if (index === undefined || index === null) {\n            throw 'Entry \\'' + entryName + '\\' not found in WAD file'\n        }\n        return this.buffer.slice(this.fStart[index], this.fStart[index] + this.fLength[index])\n    }\n\n    filterEntryNames(regexStr) {\n        const regex = new RegExp(regexStr.toLowerCase())\n        const result = []\n        this.entryIndexByName.forEach((index, entry) => {\n            if (entry.match(regex)) result.push(entry)\n        })\n        return result\n    }\n\n}\n","import { getFilename, iGet } from '../../core/Util'\nimport { WAD_CACHE_DB_NAME } from '../../params'\nimport { BitmapWithPalette } from './parser/BitmapWithPalette'\nimport { CfgFileParser } from './parser/CfgFileParser'\nimport { NerpMsgParser } from './parser/NerpMsgParser'\nimport { ObjectiveTextParser } from './parser/ObjectiveTextParser'\nimport { WadParser } from './parser/WadParser'\nimport { WadAssetRegistry } from './WadAssetRegistry'\nimport { WadFile } from './WadFile'\nimport { grayscaleToGreen } from './WadUtil'\n\nexport class WadLoader {\n\n    wad0File: WadFile = null\n    wad1File: WadFile = null\n    startTime: Date\n    assetIndex: number = 0\n    totalResources: number = 0\n    assetRegistry: WadAssetRegistry = new WadAssetRegistry(this)\n\n    onMessage: (msg: string) => any = (msg: string) => {\n        console.log(msg)\n    }\n    onInitialLoad: (totalResources: number, cfg: any) => any = () => {\n        console.log('Initial loading done.')\n    }\n    onAssetLoaded: (assetIndex: number, assetNames: string[], assetObj: any) => any = () => {\n    }\n    onLoadDone: (totalResources: number, loadingTimeSeconds: string) => any = (totalResources: number, loadingTimeSeconds: string) => {\n        console.log('Loading of about ' + totalResources + ' assets complete! Total load time: ' + loadingTimeSeconds + ' seconds.')\n    }\n\n    loadWadImageAsset(name: string, callback: (assetNames: string[], obj: ImageData) => any) {\n        const data = this.wad0File.getEntryData(name)\n        const imgData = BitmapWithPalette.decode(data)\n        callback([name], imgData)\n    }\n\n    loadWadTexture(name: string, callback: (assetNames: string[], obj: ImageData) => any) {\n        const data = this.wad0File.getEntryData(name)\n        const alphaIndexMatch = name.toLowerCase().match(/(.*a)(\\d+)(_.+)/)\n        let alphaIndex = null\n        const assetNames = [name]\n        if (alphaIndexMatch) {\n            assetNames.push(alphaIndexMatch[1] + alphaIndexMatch[3])\n            alphaIndex = parseInt(alphaIndexMatch[2])\n        }\n        const imgData = BitmapWithPalette.decode(data).applyAlphaByIndex(alphaIndex)\n        if (name.toLowerCase().startsWith('miscanims/crystal')) { // XXX fix crystal lwo loading\n            callback(assetNames, grayscaleToGreen(imgData))\n        } else {\n            callback(assetNames, imgData)\n        }\n    }\n\n    loadAlphaImageAsset(name: string, callback: (assetNames: string[], obj: ImageData) => any) {\n        const data = this.wad0File.getEntryData(name)\n        const imgData = BitmapWithPalette.decode(data).applyAlpha()\n        const assetNames = [name]\n        const alphaIndexMatch = name.toLowerCase().match(/(.*a)(\\d+)(_.+)/)\n        if (alphaIndexMatch) assetNames.push(alphaIndexMatch[1] + alphaIndexMatch[3])\n        callback(assetNames, imgData)\n    }\n\n    loadFontImageAsset(name: string, callback: (assetNames: string[], obj: ImageData) => any) {\n        const data = this.wad0File.getEntryData(name)\n        const imgData = BitmapWithPalette.decode(data)\n        callback([name], imgData)\n    }\n\n    loadNerpAsset(name: string, callback: (assetNames: string[], obj: string) => any) {\n        const nrnName = name.replace(/\\.npl$/, '.nrn')\n        const script = this.wad0File.getEntryText(nrnName)\n        callback([name, nrnName], script)\n    }\n\n    loadNerpMsg(name: string, callback: (assetNames: string[], obj: any) => any) {\n        const wad0Data = this.wad0File.getEntryText(name)\n        const wad1Data = this.wad1File.getEntryText(name)\n        const result = NerpMsgParser.parseNerpMessages(wad0Data, wad1Data)\n        callback([name], result)\n    }\n\n    loadObjectiveTexts(name: string, callback: (assetNames: string[], obj: any) => any) {\n        const txtContent = this.wad1File.getEntryData(name)\n        const result = new ObjectiveTextParser().parseObjectiveTextFile(txtContent)\n        callback([name], result)\n    }\n\n    loadMapAsset(name: string, callback: (assetNames: string[], obj: any) => any) {\n        const buffer = this.wad0File.getEntryData(name)\n        if (buffer.length < 13 || String.fromCharCode.apply(String, buffer.slice(0, 3)) !== 'MAP') {\n            console.error('Invalid map data provided for: ' + name)\n            return\n        }\n        const map = WadParser.parseMap(buffer)\n        callback([name], map)\n    }\n\n    loadObjectListAsset(name: string, callback: (assetNames: string[], obj: any) => any) {\n        const data = this.wad0File.getEntryText(name)\n        const objectList = WadParser.parseObjectList(data)\n        callback([name], objectList)\n    }\n\n    /**\n     * Load a WAV file format sound asset from the WAD file.\n     * @param path Path inside the WAD file\n     * @param callback A callback that is triggered after the file has been loaded\n     * @param key Optional key to store the sound, should look like SND_pilotdrill\n     */\n    loadWavAsset(path, callback, key) {\n        console.error('wav asset loading not yet implemented') // TODO implement this\n        // const snd = document.createElement('audio');\n        // if (callback != null) {\n        //     snd.oncanplay = function () {\n        //         snd.oncanplay = null; // otherwise the callback is triggered multiple times\n        //         const keyPath = key || path;\n        //         // use array, because sounds have multiple variants sometimes\n        //         ResourceManager.sounds[keyPath] = ResourceManager.sounds[keyPath] || [];\n        //         ResourceManager.sounds[keyPath].push(snd);\n        //         callback();\n        //     };\n        // }\n        // // try (localized) wad1 file first, then use generic wad0 file\n        // try {\n        //     snd.src = this.wad1File.getEntryUrl(path);\n        // } catch (e) {\n        //     snd.src = this.wad0File.getEntryUrl(path);\n        // }\n    }\n\n    loadLWOFile(lwoFilepath: string, callback: (assetNames: string[], obj: any) => any) {\n        let lwoContent\n        try {\n            lwoContent = this.wad0File.getEntryBuffer(lwoFilepath)\n        } catch (e) {\n            try {\n                lwoContent = this.wad0File.getEntryBuffer('world/shared/' + getFilename(lwoFilepath))\n            } catch (e) {\n                if (!lwoFilepath.equalsIgnoreCase('Vehicles/BullDozer/VLBD_light.lwo') // ignore known issues\n                    && !lwoFilepath.equalsIgnoreCase('Vehicles/LargeDigger/LD_bucket.lwo')\n                    && !lwoFilepath.equalsIgnoreCase('Vehicles/LargeDigger/LD_main.lwo')\n                    && !lwoFilepath.equalsIgnoreCase('Vehicles/LargeDigger/LD_C_Pit.lwo')\n                    && !lwoFilepath.equalsIgnoreCase('Vehicles/LargeDigger/LD_Light01.lwo')\n                    && !lwoFilepath.equalsIgnoreCase('Vehicles/LargeDigger/digbodlight.lwo')\n                    && !lwoFilepath.equalsIgnoreCase('Vehicles/LargeDigger/LD_PipeL.lwo')) {\n                    console.error('Could not load LWO file ' + lwoFilepath + '; Error: ' + e)\n                }\n                lwoContent = {}\n            }\n        }\n        callback([lwoFilepath], lwoContent.buffer)\n    }\n\n    loadAssetsParallel() {\n        const promises = []\n        const that = this\n        this.assetRegistry.forEach((asset) => {\n            promises.push(new Promise<void>((resolve) => {\n                try {\n                    asset.method(asset.assetPath, (assetNames, assetObj) => {\n                        this.assetIndex++\n                        that.onAssetLoaded(this.assetIndex, assetNames, assetObj)\n                        resolve()\n                    })\n                } catch (e) {\n                    if (!asset.optional) throw e\n                    this.assetIndex++\n                    that.onAssetLoaded(this.assetIndex, [asset.assetPath], null)\n                    resolve()\n                }\n            }))\n        })\n        Promise.all(promises).then(() => {\n            // indicate that loading has finished, and display the total loading time\n            const loadingTimeSeconds = ((new Date().getTime() - this.startTime.getTime()) / 1000).toFixed(3).toString()\n            this.onLoadDone(this.totalResources, loadingTimeSeconds)\n        })\n    }\n\n    startWithCachedFiles(onCacheMiss: () => any) {\n        this.startTime = new Date()\n        const _onerror = () => {\n            this.onMessage('WAD files not found in cache')\n            onCacheMiss()\n        }\n        this.onMessage('Loading WAD files from cache...')\n        const that = this\n        this.openLocalCache((objectStore) => {\n            const request1 = objectStore.get('wad0')\n            request1.onerror = _onerror\n            request1.onsuccess = function () {\n                if (request1.result === undefined) {\n                    _onerror()\n                    return\n                }\n                // console.log('First WAD file loaded from cache after ' + ((new Date().getTime() - that.startTime.getTime()) / 1000));\n                that.wad0File = new WadFile()\n                for (let prop in request1.result) { // class info are runtime info and not stored in cache => use copy constructor\n                    if (request1.result.hasOwnProperty(prop)) {\n                        that.wad0File[prop] = request1.result[prop]\n                    }\n                }\n                const request2 = objectStore.get('wad1')\n                request2.onerror = _onerror\n                request2.onsuccess = function () {\n                    if (request2.result === undefined) {\n                        _onerror()\n                        return\n                    }\n                    that.wad1File = new WadFile()\n                    for (let prop in request2.result) { // class info are runtime info and not stored in cache => use copy constructor\n                        if (request2.result.hasOwnProperty(prop)) {\n                            that.wad1File[prop] = request2.result[prop]\n                        }\n                    }\n                    console.log('WAD files loaded from cache after ' + ((new Date().getTime() - that.startTime.getTime()) / 1000))\n                    that.startLoadingProcess()\n                }\n            }\n        })\n    }\n\n    /**\n     * Private helper method, which combines file loading and waits for them to become ready before continuing\n     * @param wad0Url Url to parse the LegoRR0.wad file from\n     * @param wad1Url Url to parse the LegoRR1.wad file from\n     */\n    loadWadFiles(wad0Url: string, wad1Url: string) {\n        const that = this\n        Promise.all([this.loadWadFile(wad0Url), this.loadWadFile(wad1Url)]).then(wadFiles => {\n            that.wad0File = wadFiles[0] as WadFile\n            that.wad1File = wadFiles[1] as WadFile\n            this.openLocalCache((objectStore) => {\n                objectStore.put(that.wad0File, 'wad0')\n                objectStore.put(that.wad1File, 'wad1')\n            })\n            this.startLoadingProcess()\n        })\n    }\n\n    /**\n     * Read WAD file as binary blob from the given URL and parse it on success\n     * @param url the url to the WAD file, can be local file url (file://...) too\n     */\n    loadWadFile(url: string) {\n        return new Promise(resolve => {\n            console.log('Loading WAD file from ' + url)\n            fetch(url).then((response) => {\n                if (response.ok) {\n                    response.arrayBuffer().then((buffer) => {\n                        const wadFile = new WadFile()\n                        wadFile.parseWadFile(buffer)\n                        resolve(wadFile)\n                    })\n                }\n            }).catch((e) => console.error(e))\n        })\n    }\n\n    openLocalCache(onopen: (IDBObjectStore) => void) {\n        const request: IDBOpenDBRequest = indexedDB.open(WAD_CACHE_DB_NAME)\n        request.onupgradeneeded = function () {\n            const db = request.result\n            if (db.objectStoreNames.contains('wadfiles')) {\n                db.deleteObjectStore('wadfiles')\n            }\n            db.createObjectStore('wadfiles')\n        }\n        request.onsuccess = function () {\n            const db = request.result\n            const transaction = db.transaction(['wadfiles'], 'readwrite')\n            const objectStore = transaction.objectStore('wadfiles')\n            onopen(objectStore)\n        }\n    }\n\n    /**\n     * Load essential files, to begin the chain of asset loading\n     */\n    startLoadingProcess() {\n        this.startTime = new Date()\n        this.onMessage('Loading configuration...')\n        const cfg = CfgFileParser.parse(this.wad1File.getEntryData('Lego.cfg'))\n        // dynamically register all assets from config\n        this.assetRegistry.registerAllAssets(cfg)\n        this.onMessage('Loading initial assets...')\n        Promise.all([\n            new Promise<void>((resolve) => {\n                const name = iGet(cfg, 'Main', 'LoadScreen') // loading screen image\n                this.loadWadImageAsset(name, (assetNames: string[], imgData) => {\n                    this.onAssetLoaded(0, assetNames, imgData)\n                    resolve()\n                })\n            }),\n            new Promise<void>((resolve) => {\n                const name = iGet(cfg, 'Main', 'ProgressBar') // loading bar container image\n                this.loadWadImageAsset(name, (assetNames: string[], imgData) => {\n                    this.onAssetLoaded(0, assetNames, imgData)\n                    resolve()\n                })\n            }),\n            new Promise<void>((resolve) => {\n                const name = iGet(cfg, 'Pointers', 'Pointer_Standard')\n                this.loadAlphaImageAsset(name, (assetNames: string[], imgData) => {\n                    this.onAssetLoaded(0, assetNames, imgData)\n                    resolve()\n                })\n            }),\n            new Promise<void>((resolve) => {\n                const name = 'Interface/Fonts/Font5_Hi.bmp'\n                this.loadFontImageAsset(name, (assetNames: string[], imgData) => {\n                    this.onAssetLoaded(0, assetNames, imgData)\n                    resolve()\n                })\n            }),\n        ]).then(() => {\n            this.onMessage('Start loading assets...')\n            this.totalResources = this.assetRegistry.size\n            this.onInitialLoad(this.totalResources, cfg)\n            this.assetIndex = 0\n            this.loadAssetsParallel()\n        })\n    }\n\n}\n","export function grayscaleToGreen(imgData: ImageData): ImageData {\n    const arr = imgData.data\n    for (let c = 0; c < arr.length; c += 4) {\n        arr[c] = 0\n        arr[c + 2] = 0\n    }\n    return imgData\n}\n","interface NerpMessage {\n\n    txt?: string\n    snd?: string\n\n}\n\nexport class NerpMsgParser {\n\n    static parseNerpMessages(wad0Data: string, wad1Data: string): NerpMessage[] {\n        const result = this.parseNerpMsgFile(wad0Data, true)\n        const msg1 = this.parseNerpMsgFile(wad1Data, false)\n        for (let c = 0; c < msg1.length; c++) {\n            result[c] = result[c] || {}\n            const m1 = msg1[c]\n            if (!m1) continue\n            if (m1.txt) {\n                result[c].txt = m1.txt\n            }\n            if (m1.snd) {\n                result[c].snd = m1.snd\n            }\n        }\n        return result\n    }\n\n    static parseNerpMsgFile(wadData: string, isWad0File: boolean): NerpMessage[] {\n        const result = []\n        const lines = wadData.split(/[\\r\\n]/).map((l) => l?.trim()).filter((l) => !!l)\n        for (let c = 0; c < lines.length; c++) {\n            const line = lines[c]\n            if (line === '-') {\n                continue\n            }\n            // line formatting differs between wad0 and wad1 files!\n            const txt0Match = line.match(/\\\\\\[([^\\\\]+)\\\\](\\s*#([^#]+)#)?/)\n            const txt1Match = line.match(/^([^$][^#]+)(\\s*#([^#]+)#)?/)\n            const sndMatch = line.match(/\\$([^\\s]+)\\s*([^\\s]+)/)\n            if (isWad0File && txt0Match) {\n                const index = txt0Match[3] !== undefined ? this.numericNameToNumber(txt0Match[3]) : c // THIS IS MADNESS! #number# at the end of line is OPTIONAL\n                result[index] = result[index] || {}\n                result[index].txt = txt0Match[1]\n            } else if (!isWad0File && txt1Match) {\n                const index = txt1Match[3] !== undefined ? this.numericNameToNumber(txt1Match[3]) : c // THIS IS MADNESS! #number# at the end of line is OPTIONAL\n                result[index] = result[index] || {}\n                result[index].txt = txt1Match[1].replace(/_/g, ' ').trim()\n            } else if (sndMatch && sndMatch.length === 3) {\n                const index = this.numericNameToNumber(sndMatch[1])\n                result[index] = result[index] || {}\n                result[index].snd = sndMatch[2].replace(/\\\\/g, '/')\n            } else {\n                throw 'Line in nerps message file did not match anything'\n            }\n        }\n        return result\n    }\n\n    static numericNameToNumber(name: string): number {\n        if (name === undefined) {\n            throw 'Numeric name must not be undefined'\n        }\n        const digits = {one: 1, two: 2, three: 3, four: 4, five: 5, six: 6, seven: 7, eight: 8, nine: 9}\n        const specials = {\n            ten: 10, eleven: 11, twelve: 12, thirteen: 13, fourteen: 14, fifteen: 15,\n            sixteen: 16, seventeen: 17, eighteen: 18, nineteen: 19,\n            eightteen: 18, // typo seen in the wild\n        }\n        const tens = {twenty: 20, thirty: 30, forty: 40}\n        let number = specials[name] || digits[name]\n        if (number === undefined) {\n            Object.keys(tens).forEach(ten => {\n                if (name.startsWith(ten)) {\n                    const digitName = name.replace(ten, '')\n                    number = tens[ten] + (digitName ? digits[digitName] : 0)\n                }\n            })\n        }\n        if (number === undefined) {\n            throw 'Found unexpected numeric name ' + name\n        }\n        return number\n    }\n\n}\n","export const DEV_MODE = process.env.WEBPACK_MODE === 'development'\nexport const WAD_CACHE_DB_NAME = 'RockRaidersWeb'\nexport const JOB_SCHEDULE_INTERVAL = 1000 // milliseconds\nexport const CHECK_CLEARRUBBLE_INTERVAL = 5000 // milliseconds\nexport const JOB_ACTION_RANGE = 5\nexport const CHECK_SPANW_RAIDER_TIMER = 1000 // milliseconds\nexport const MAX_RAIDER_BASE = 12\nexport const MAX_RAIDER_REQUEST = 9\nexport const ADDITIONAL_RAIDER_PER_SUPPORT = 10\nexport const UPDATE_OXYGEN_TIMER = 5000 // milliseconds\nexport const PANEL_ANIMATION_MULTIPLIER = 3\nexport const HEIGHT_MULTIPLER = 0.1\nexport const SEQUENCE_TEXTURE_FRAMERATE = 5\n\n// native constants (do not change)\n\nexport const SPRITE_RESOLUTION_WIDTH = 640\nexport const SPRITE_RESOLUTION_HEIGHT = 480\nexport const TILESIZE = 40\nexport const NATIVE_FRAMERATE = 30\n","import { BaseConfig } from './BaseConfig'\n\nexport class BuildingEntityStats extends BaseConfig {\n\n    Levels: number = 0\n    SelfPowered: boolean = false\n    PowerBuilding: boolean = false\n    PickSphere: number = 0\n    TrainDynamite: boolean[] = null\n    CostOre: number = 0\n    CostCrystal: number = 0\n    OxygenCoef: number = 0\n\n}\n","// noinspection JSUnusedGlobalSymbols\n\nimport { BaseConfig } from './BaseConfig'\nimport { BuildingEntityStats } from './BuildingEntityStats'\n\nexport class GameStatsCfg extends BaseConfig {\n\n    Pilot = new class PilotStats extends BaseConfig {\n        Levels: number = 4\n        RouteSpeed: number[] = [1.10, 1.10, 1.10, 1.10]\n        SoilDrillTime: number[] = [4.0, 4.0, 4.0, 4.0] // Time in seconds to drill through the rock.\n        LooseDrillTime: number[] = [4.0, 4.0, 4.0, 4.0]\n        MedDrillTime: number[] = [8.0, 8.0, 8.0, 8.0]\n        HardDrillTime: number[] = [0.0, 0.0, 0.0, 0.0] // Zero means the object cannot drill the rock type\n        SeamDrillTime: number[] = [10.0, 10.0, 10.0, 10.0] // Either or both ore or crystal.\n        UpgradeTime: number[] = [30.0, 45.0, 60.0, 60.0] // Last entry is ignored as it can never upgrade from that.\n        CollRadius: number = 5.0\n        CollHeight: number = 12.0\n        TrackDist: number = 40.0\n        SingleWidthDig: boolean[] = [true, true, true, true]\n        PickSphere: number = 10.0\n        RepairValue: number[] = [10.0, 15.0, 20.0, 25.0]\n        SurveyRadius: number[] = [3, 3, 3, 3]\n        Drillsound: string = 'SND_pilotdrill'\n        Drillfadesound: string = 'SND_pilotdrillfade'\n        RestPercent: number = 60.0\n        EnergyDecayRate: number = 0.25\n        CanClearRubble: boolean = true\n        NumOfToolsCanCarry: number[] = [2, 3, 4, 5]\n        CrossLand: boolean = true\n        RubbleCoef: number = 0.5\n        PathCoef: number = 2.0\n        RouteAvoidance: boolean = true\n        UseLegoManTeleporter: boolean = true\n        AwarenessRange: number = 10.0\n        OxygenCoef: number = -1.0\n        CanStrafe: boolean = true\n        EnterToolStore: boolean = true\n        ShowHealthBar: boolean = true\n    }\n\n    RockMonster = new class RockMonsterStats extends BaseConfig {\n        Levels: number = 1\n        RouteSpeed: number = 0.8\n        TrackDist: number = 50.0\n        CollRadius: number = 10.0\n        CollHeight: number = 22.0\n        AlertRadius: number = 60.0\n        HealthDecayRate: number = 0.6 // Reduce health by 'n' every second.\n        PickSphere: number = 22.0\n        RepairValue: number = -10.0\n        CanScare: boolean = true\n        RestPercent: number = 20.0\n        CarryMinHealth: number = 15.0\n        PainThreshold: number = 20.0\n        StampRadius: number = 80.0\n        AttackRadius: number = 160.0\n        CanSteal: boolean = true\n        CrossLand: boolean = true\n        RubbleCoef: number = 1.5\n        GrabMinifigure: boolean = true\n        RouteAvoidance: boolean = true\n        BumpDamage: boolean = true\n        AttackPaths: boolean = true\n        SplitOnZeroHealth: boolean = true\n        CanBeHitByFence: boolean = true\n        Capacity: number = 6 // How many crystals it can eat\n        PathCoef: number = 0.5\n        // Statistics about the weapons\n        CanBeShotAt: boolean = true // Can this monster be shot at by lego men\n        CanFreeze: boolean = true // Can this object be frozen\n        FreezerTime: number = 25.0 // Time this object is frozen for\n        FreezerDamage: number = 5.0 // Damage that freezing causes\n        CanLaser: boolean = true // Can this object be lasered\n        LaserDamage: number = 110.0 // Damage sustained by a laser\n        CanPush: boolean = true // Can this object be pusher'ed\n        PusherDist: number = 20.0 // Distance the object is pushed 40=1 block\n        PusherDamage: number = 2.0 // Damage that the pusher gun causes\n        WakeRadius: number = 25.0\n        ScaredByBigBangs: boolean = true\n        RemoveReinforcement: boolean = true\n        ShowHealthBar: boolean = true\n    }\n\n    SmallSpider = new class SmallSpiderStats extends BaseConfig {\n        Levels: number = 1\n        RouteSpeed: number[] = [2.0]\n        TrackDist: number = 10.0\n        CollRadius: number = 0.0\n        CollHeight: number = 0.0\n        PickSphere: number = 6.0\n        AlertRadius: number = 40.0\n        RandomMove: boolean = true\n        RandomEnterWall: boolean = true\n        CauseSlip: boolean = true\n        CrossLand: boolean = true\n        RubbleCoef: number = 0.2\n        DontShowDamage: boolean = true\n        DontShowOnRadar: boolean = true\n        ScaredByBigBangs: boolean = true\n    }\n\n    Bat = new class BatStats extends BaseConfig {\n        Levels: number = 1\n        RouteSpeed: number[] = [1.0]\n        TrackDist: number = 10.0\n        CollRadius: number = 10.0\n        AlertRadius: number = 10.0 // Alert radius (causes attack mode)\n        RandomMove: boolean = true // Random movement\n        randomMoveTime: number = 10\n        CanScare: boolean = true // Scare away the player\n        ScaredByBigBangs: boolean = true\n        // Flock parameters.\n        Flocks: boolean = true // Set this to create a flock for this object.\n        FlocksDebug: boolean = false // If this is set the actual lego objects animation is displayed at the \"lego\" position.\n        FlocksSmooth: boolean = true // Smooths out the orientation of the flocks elements.\n        FlocksSize: number = 8 // Number of the given item in the flock.  (Default 5)\n        FlocksTurn: number = 0.6 // Turning speed of the bat. (0.6 default)\n        FlocksSpeed: number = 1.5 // Velocity of the flock. (2.0 default)\n        FlocksTightness: number = 0.8 // Tightness of the flock. (2.0 default)\n        FlocksGoalUpdate: number = 2.0 // How often the flocks goal is updated (25 per second).  (2.0 default)\n        FlocksRandomness: number = 6.0 // Randomness of goals. (2.0 default)\n        FlocksHeight: number = 22.0 // Height above the ground of the flock elements.  (30.0 default)\n        CrossLand: boolean = true\n        CrossWater: boolean = true\n        CrossLava: boolean = true\n        DontShowDamage: boolean = true\n    }\n\n    TinyRM = new class TinyRMStats extends BaseConfig {\n        Levels: number = 1\n        RouteSpeed: number = 1.2\n        TrackDist: number = 10.0\n        CollRadius: number = 0.0\n        CollHeight: number = 5.0\n        PickSphere: number = 6.0\n        AlertRadius: number = 40.0\n        CrossLand: boolean = true\n        RubbleCoef: number = 1.5\n        DontShowDamage: boolean = true\n        DontShowOnRadar: boolean = true\n        ScaredByPlayer: boolean = true\n        ScaredByBigBangs: boolean = true\n    }\n\n    TinyIM = new class TinyIMStats extends BaseConfig {\n        Levels: number = 1\n        RouteSpeed: number = 1.2\n        TrackDist: number = 10.0\n        CollRadius: number = 0.0\n        CollHeight: number = 5.0\n        PickSphere: number = 6.0\n        AlertRadius: number = 40.0\n        CrossLand: boolean = true\n        RubbleCoef: number = 1.5\n        DontShowDamage: boolean = true\n        DontShowOnRadar: boolean = true\n        ScaredByPlayer: boolean = true\n        ScaredByBigBangs: boolean = true\n    }\n\n    Slug = new class SlugStats extends BaseConfig {\n        Levels: number = 1\n        RouteSpeed: number = 0.3\n        TrackDist: number = 10.0\n        CollRadius: number = 3.0\n        CollHeight: number = 7.0\n        PickSphere: number = 12.0\n        AlertRadius: number = 40.0\n        CrossLand: boolean = true\n        RubbleCoef: number = 0.3\n        UseHoles: boolean = true\n        DrainPower: boolean = true\n        AttackRadius: number = 280.0\n        PainThreshold: number = 50.0\n        CanBeShotAt: boolean = true\n        CanLaser: boolean = true\n        LaserDamage: number = 5.0\n        CanPush: boolean = true // Can this object be pusher'ed\n        PusherDist: number = 60.0 // Distance the object is pushed\n        PusherDamage: number = 5.0 // Damage that the pusher gun causes\n        ShowHealthBar: boolean = true\n        ScaredByBigBangs: boolean = true\n    }\n\n    LavaMonster = new class LavaMonsterStats extends BaseConfig {\n        Levels: number = 1\n        RouteSpeed: number = 0.8\n        TrackDist: number = 50.0\n        CollRadius: number = 10.0\n        CollHeight: number = 22.0\n        AlertRadius: number = 60.0\n        HealthDecayRate: number = 0.6 // Reduce health by 'n' every second.\n        PickSphere: number = 22.0\n        RepairValue: number = -10.0\n        CanScare: boolean = true\n        RestPercent: number = 20.0\n        CarryMinHealth: number = 15.0\n        PainThreshold: number = 20.0\n        StampRadius: number = 80.0\n        AttackRadius: number = 160.0\n        CanSteal: boolean = true\n        CrossLand: boolean = true\n        RubbleCoef: number = 1.5\n        GrabMinifigure: boolean = true\n        Capacity: number = 7 // How many crystals it can eat\n        RouteAvoidance: boolean = true\n        BumpDamage: boolean = true\n        AttackPaths: boolean = true\n        SplitOnZeroHealth: boolean = true\n        CanBeHitByFence: boolean = true\n        PathCoef: number = 0.5\n        CrossLava: boolean = true\n        // Statistics about the weapons\n        CanBeShotAt: boolean = true // Can this monster be shot at by lego men\n        CanFreeze: boolean = true // Can this object be frozen\n        FreezerTime: number = 75.0 // Time this object is frozen for\n        FreezerDamage: number = 40.0 // Damage that freezing causes\n        CanLaser: boolean = true // Can this object be lasered\n        LaserDamage: number = 1.0 // Damage sustained by a laser\n        CanPush: boolean = true // Can this object be pusher'ed\n        PusherDist: number = 60.0 // Distance the object is pushed\n        PusherDamage: number = 5.0 // Damage that the pusher gun causes\n        WakeRadius: number = 25.0\n        ScaredByBigBangs: boolean = true\n        RemoveReinforcement: boolean = true\n        ShowHealthBar: boolean = true\n    }\n\n    IceMonster = new class IceMonsterStats extends BaseConfig {\n        Levels: number = 1\n        RouteSpeed: number = 0.8\n        TrackDist: number = 50.0\n        CollRadius: number = 10.0\n        CollHeight: number = 22.0\n        AlertRadius: number = 60.0\n        HealthDecayRate: number = 0.6 // Reduce health by 'n' every second.\n        PickSphere: number = 22.0\n        RepairValue: number = -10.0\n        CanScare: boolean = true\n        RestPercent: number = 20.0\n        CarryMinHealth: number = 15.0\n        PainThreshold: number = 20.0\n        StampRadius: number = 80.0\n        AttackRadius: number = 120.0\n        CanSteal: boolean = true\n        CrossLand: boolean = true\n        RubbleCoef: number = 1.5\n        GrabMinifigure: boolean = true\n        Capacity: number = 5 // How many crystals it can eat\n        RouteAvoidance: boolean = true\n        BumpDamage: boolean = true\n        AttackPaths: boolean = true\n        SplitOnZeroHealth: boolean = true\n        CanBeHitByFence: boolean = true\n        PathCoef: number = 0.5\n        // Statistics about the weapons\n        CanBeShotAt: boolean = true // Can this monster be shot at by lego men\n        CanFreeze: boolean = false // Can this object be frozen\n        FreezerTime: number = 0.0 // Time this object is frozen for\n        FreezerDamage: number = 0.0 // Damage that freezing causes\n        CanLaser: boolean = true // Can this object be lasered\n        LaserDamage: number = 110.0 // Damage sustained by a laser\n        CanPush: boolean = true // Can this object be pusher'ed\n        PusherDist: number = 60.0 // Distance the object is pushed\n        PusherDamage: number = 2.0 // Damage that the pusher gun causes\n        WakeRadius: number = 25.0\n        ScaredByBigBangs: boolean = true\n        RemoveReinforcement: boolean = true\n        ShowHealthBar: boolean = true\n    }\n\n    Hoverboard = new class HoverboardStats extends BaseConfig { // [Carry][Scan][Speed][Drill]    (No drill or carry)\n        Levels: number = 8\n        RouteSpeed: number[] = [3.0, 3.0, 5.0, 5.0, 3.0, 3.0, 5.0, 5.0]\n        SurveyRadius: number[] = [0, 0, 0, 0, 4, 4, 4, 4]\n        TrackDist: number = 50.0\n        CollRadius: number = 8.0\n        CollHeight: number = 12.0\n        PickSphere: number = 16.0\n        CanBeDriven: boolean = true\n        CrossLand: boolean = true\n        UseSmallTeleporter: boolean = true\n        CanStrafe: boolean = true\n        CostCrystal: number = 1\n        UpgradeCostOre: number[] = [0, 5, 10, 0]\n        UpgradeCostStuds: number[] = [0, 1, 2, 0]\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_SmallEngine'\n    }\n\n    SmallHeli = new class SmallHeliStats extends BaseConfig {\n        Levels: number = 1\n        RouteSpeed: number = 2.50\n        TrackDist: number = 50.0\n        CollRadius: number = 10.0\n        CollHeight: number = 12.0\n        PickSphere: number = 20.0\n        CanBeDriven: boolean = true\n        CrossLand: boolean = true\n        CrossWater: boolean = true\n        CrossLava: boolean = true\n        UseSmallTeleporter: boolean = true\n        CanStrafe: boolean = true\n        CostCrystal: number = 3\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_HeliEngine'\n    }\n\n    Smallmlp = new class SmallmlpStats extends BaseConfig {\n        Levels: number = 4\n        RouteSpeed: number[] = [0.50, 0.50, 0.50, 0.50]\n        TrackDist: number = 50.0\n        CollRadius: number = 12.0\n        CollHeight: number = 22.0\n        PickSphere: number = 26.0\n        CanBeDriven: boolean = true\n        CrossLand: boolean = true\n        UseSmallTeleporter: boolean = true\n        Tracker: boolean = true\n        CanDoubleSelect: boolean = true\n        CostCrystal: number = 3\n        UpgradeCostOre: number[] = [0, 0, 0, 10]\n        UpgradeCostStuds: number[] = [0, 0, 0, 2]\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_MediumEngine'\n    }\n\n    SmallCat = new class SmallCatStats extends BaseConfig {\n        Levels: number = 3\n        RouteSpeed: number[] = [2.0, 3.0, 4.0]\n        TrackDist: number = 50.0\n        CollRadius: number = 12.0\n        CollHeight: number = 12.0\n        PickSphere: number = 26.0\n        CrossWater: boolean = true\n        CanBeDriven: boolean = true\n        UseWaterTeleporter: boolean = true\n        CostCrystal: number = 2\n        MaxCarry: number[] = [1, 1, 1]\n        GetInAtLand: boolean = true\n        GetOutAtLand: boolean = true\n        TakeCarryingDrivers: boolean = true\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_Catamaran'\n    }\n\n    SmallDigger = new class SmallDiggerStats extends BaseConfig {\n        Levels: number = 8\n        RouteSpeed: number[] = [2.0, 2.0, 4.0, 4.0, 2.0, 2.0, 4.0, 4.0]\n        SoilDrillTime: number[] = [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]\n        LooseDrillTime: number[] = [2.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0, 1.0]\n        MedDrillTime: number[] = [4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0]\n        HardDrillTime: number[] = [180.0, 150.0, 180.0, 150.0, 180.0, 150.0, 180.0, 150.0]\n        SeamDrillTime: number[] = [8.0, 4.0, 8.0, 4.0, 8.0, 4.0, 8.0, 4.0]\n        MaxCarry: number[] = [0, 0, 0, 0, 0, 0, 0, 0]\n        SurveyRadius: number[] = [0, 0, 0, 0, 4, 4, 4, 4]\n        TrackDist: number = 50.0\n        CollRadius: number = 10.0\n        CollHeight: number = 12.0\n        PickSphere: number = 20.0\n        CanBeDriven: boolean = true\n        CrossLand: boolean = true\n        RouteAvoidance: boolean = true\n        UseSmallTeleporter: boolean = true\n        VehicleCanBeCarried: boolean = true\n        CostCrystal: number = 1\n        UpgradeCostOre: number[] = [0, 5, 10, 10]\n        UpgradeCostStuds: number[] = [0, 1, 2, 2]\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_SmallEngine'\n    }\n\n    SmallTruck = new class SmallTruckStats extends BaseConfig { // [Carry][Scan][Speed][Drill]    (No drill)\n        Levels: number = 16\n        RouteSpeed: number[] = [2.0, 2.0, 3.0, 3.0, 2.0, 2.0, 3.0, 3.0, 2.0, 2.0, 3.0, 3.0, 2.0, 2.0, 3.0, 3.0]\n        MaxCarry: number[] = [3, 3, 3, 3, 3, 3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6]\n        CarryStart: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3]\n        SurveyRadius: number[] = [0, 0, 0, 0, 4, 4, 4, 4, 0, 0, 0, 0, 4, 4, 4, 4]\n        TrackDist: number = 50.0\n        CollRadius: number = 10.0\n        CollHeight: number = 12.0\n        PickSphere: number = 20.0\n        CanBeDriven: boolean = true\n        CrossLand: boolean = true\n        UseSmallTeleporter: boolean = true\n        VehicleCanBeCarried: boolean = true\n        CostCrystal: number = 2\n        EnterToolStore: boolean = true\n        UpgradeCostOre: number[] = [5, 5, 10, 0]\n        UpgradeCostStuds: number[] = [1, 1, 2, 0]\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_SmallEngine'\n    }\n\n    Bulldozer = new class BulldozerStats extends BaseConfig { // [Carry][Scan][Speed][Drill]    (No drill)\n        Levels: number = 16\n        RouteSpeed: number[] = [0.5, 0.5, 0.8, 0.8, 0.5, 0.5, 0.8, 0.8, 0.5, 0.5, 0.8, 0.8, 0.5, 0.5, 0.8, 0.8]\n        MaxCarry: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]\n        SurveyRadius: number[] = [0, 0, 0, 0, 5, 5, 5, 5, 0, 0, 0, 0, 5, 5, 5, 5]\n        TrackDist: number = 80.0\n        CollRadius: number = 18.0\n        CollHeight: number = 26.0\n        PickSphere: number = 40.0\n        CrossLand: boolean = true\n        CanClearRubble: boolean = true\n        UseBigTeleporter: boolean = true\n        CanBeDriven: boolean = true\n        CostCrystal: number = 4\n        InvisibleDriver: boolean = true\n        UpgradeCostOre: number[] = [5, 5, 20, 0]\n        UpgradeCostStuds: number[] = [1, 1, 4, 0]\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_MediumEngine'\n    }\n\n    WalkerDigger = new class WalkerDiggerStats extends BaseConfig { // [Carry][Scan][Speed][Drill]    (No carry)\n        Levels: number = 8\n        RouteSpeed: number[] = [0.50, 0.50, 0.80, 0.80, 0.50, 0.50, 0.80, 0.80]\n        SoilDrillTime: number[] = [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]\n        LooseDrillTime: number[] = [0.80, 0.40, 0.80, 0.40, 0.80, 0.40, 0.80, 0.40]\n        MedDrillTime: number[] = [2.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0, 1.0]\n        HardDrillTime: number[] = [180.0, 150.0, 180.0, 150.0, 180.0, 150.0, 180.0, 150.0]\n        SeamDrillTime: number[] = [4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0]\n        SurveyRadius: number[] = [0, 0, 0, 0, 5, 5, 5, 5]\n        TrackDist: number = 80.0\n        CollRadius: number = 15.0\n        CollHeight: number = 33.0\n        PickSphere: number = 35.0\n        CrossLand: boolean = true\n        UseBigTeleporter: boolean = true\n        CostCrystal: number = 3\n        CanBeDriven: boolean = true\n        InvisibleDriver: boolean = true\n        CanStrafe: boolean = true\n        DrillSound: string = 'DrillSFX_Grinder'\n        DrillFadeSound: string = 'DrillSFX_GrinderFade'\n        UpgradeCostOre: number[] = [0, 5, 20, 20]\n        UpgradeCostStuds: number[] = [0, 1, 4, 4]\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_MediumEngine'\n    }\n\n    LargeDigger = new class LargeDiggerStats extends BaseConfig { // [Carry][Scan][Speed][Drill]    (No carry or scan)\n        Levels: number = 4\n        RouteSpeed: number[] = [0.30, 0.30, 0.60, 0.60]\n        SoilDrillTime: number[] = [1.0, 1.0, 1.0, 1.0]\n        LooseDrillTime: number[] = [0.40, 0.20, 0.40, 0.20]\n        MedDrillTime: number[] = [0.80, 0.40, 0.80, 0.40]\n        HardDrillTime: number[] = [1.0, 0.50, 1.0, 0.50]\n        SeamDrillTime: number[] = [1.0, 0.50, 1.0, 0.50]\n        TrackDist: number = 80.0\n        CollRadius: number = 22.0\n        CollHeight: number = 30.0\n        PickSphere: number = 50.0\n        CrossLand: boolean = true\n        UseBigTeleporter: boolean = true\n        Tracker: boolean = true\n        CanDoubleSelect: boolean = true\n        CanBeDriven: boolean = true\n        CostCrystal: number = 5\n        InvisibleDriver: boolean = true\n        DrillSound: string = 'DrillSFX_Grinder'\n        DrillFadeSound: string = 'DrillSFX_GrinderFade'\n        UpgradeCostOre: number[] = [0, 0, 15, 20]\n        UpgradeCostStuds: number[] = [0, 0, 3, 4]\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_LargeEngine'\n    }\n\n    LargeCat = new class LargeCatStats extends BaseConfig { // [Carry][Scan][Speed][Drill] (No carry) (Drill???)\n        Levels: number = 1\n        RouteSpeed: number = 1.50\n        SurveyRadius: number = 0\n        TrackDist: number = 80.0\n        CollRadius: number = 22.0\n        CollHeight: number = 25.0\n        PickSphere: number = 50.0\n        CanBeDriven: boolean = true\n        CrossWater: boolean = true\n        UseWaterTeleporter: boolean = true\n        ClassAsLarge: boolean = true\n        CarryVehicles: boolean = true\n        CostCrystal: number = 4\n        EngineSound: string = 'SND_Catamaran'\n        ShowHealthBar: boolean = true\n    }\n\n    LargeHeli = new class LargeHeliStats extends BaseConfig {\n        Levels: number = 3\n        RouteSpeed: number[] = [0.30, 0.40, 0.50]\n        TrackDist: number = 80.0\n        CollRadius: number = 0.0\n        CollHeight: number = 0.0\n        PickSphere: number = 20.0\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_HeliEngine'\n    }\n\n    LargeMLP = new class LargeMLPStats extends BaseConfig { // [Carry][Scan][Speed][Drill]    (No carry or speed) (Doesn't have drills, just lasers)\n        Levels: number = 8\n        RouteSpeed: number[] = [0.40, 0.40, 0.40, 0.40, 0.40, 0.40, 0.40, 0.40]\n        SurveyRadius: number[] = [0, 0, 0, 0, 5, 5, 5, 5]\n        TrackDist: number = 80.0\n        CollRadius: number = 20.0\n        CollHeight: number = 24.0\n        PickSphere: number = 47.0\n        CrossLand: boolean = true\n        UseBigTeleporter: boolean = true\n        Tracker: boolean = true\n        CanDoubleSelect: boolean = true\n        CostCrystal: number = 4\n        CanBeDriven: boolean = true\n        InvisibleDriver: boolean = true\n        UpgradeCostOre: number[] = [0, 5, 0, 25]\n        UpgradeCostStuds: number[] = [0, 1, 0, 5]\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_LargeEngine'\n    }\n\n    Barracks = new class BarracksStats extends BuildingEntityStats {\n        Levels: number = 3\n        TrackDist: number = 50.0\n        CollHeight: number = 23.0\n        CollRadius: number = 15.0\n        PickSphere: number = 30.0\n        CostOre: number = 15\n        CostRefinedOre: number = 3\n        CostCrystal: number = 3\n        SnaxULike: boolean = true\n        TrainDriver: boolean[] = [true, true, true]\n        CrystalDrain: number[] = [1, 1, 1]\n        DamageCausesCallToArms: boolean = true\n        OxygenCoef: number = 10.0\n        EngineSound: string = 'SND_BuildingHum'\n        ShowHealthBar: boolean = true\n    }\n\n    Powerstation = new class PowerstationStats extends BuildingEntityStats {\n        Levels: number = 2\n        TrackDist: number = 80.0\n        ProcessCrystal: boolean = true\n        CollHeight: number = 31.0\n        CollRadius: number = 15.0\n        PickSphere: number = 32.0\n        CostOre: number = 12\n        CostRefinedOre: number = 3\n        CostCrystal: number = 2\n        PowerBuilding: boolean = true\n        DamageCausesCallToArms: boolean = true\n        EngineSound: string = 'SND_PowerBuildingHum'\n        ShowHealthBar: boolean = true\n    }\n\n    OreRefinery = new class OreRefineryStats extends BuildingEntityStats {\n        Levels: number = 4\n        TrackDist: number = 60.0\n        ProcessOre: boolean = true\n        CollHeight: number = 16.0\n        CollRadius: number = 15.0\n        PickSphere: number = 30.0\n        CostOre: number = 20\n        CostRefinedOre: number = 4\n        CostCrystal: number = 3\n        CrystalDrain: number[] = [1, 1, 1, 1]\n        DamageCausesCallToArms: boolean = true\n        MaxCarry: number[] = [5, 4, 3, 2]\n        EngineSound: string = 'SND_BuildingHum'\n        ShowHealthBar: boolean = true\n    }\n\n    TeleportPad = new class TeleportPadStats extends BuildingEntityStats {\n        Levels: number = 3\n        TrackDist: number = 60.0\n        SmallTeleporter: boolean = true\n        ManTeleporter: boolean = true\n        CollHeight: number = 20.0\n        CollRadius: number = 15.0\n        PickSphere: number = 30.0\n        CostOre: number = 8\n        CostRefinedOre: number = 2\n        CrystalDrain: number[] = [1, 1, 1]\n        DamageCausesCallToArms: boolean = true\n        TrainPilot: boolean[] = [true, true, true]\n        EngineSound: string = 'SND_BuildingHum'\n        ShowHealthBar: boolean = true\n    }\n\n    TeleportBIG = new class TeleportBIGStats extends BuildingEntityStats {\n        Levels: number = 2\n        TrackDist: number = 50.0\n        BigTeleporter: boolean = true\n        CollHeight: number = 17.0\n        CollRadius: number = 15.0\n        PickSphere: number = 30.0\n        CostOre: number = 20\n        CostRefinedOre: number = 4\n        CostCrystal: number = 2\n        CrystalDrain: number[] = [1, 1]\n        DamageCausesCallToArms: boolean = true\n        EngineSound: string = 'SND_BuildingHum'\n        ShowHealthBar: boolean = true\n    }\n\n    Docks = new class DocksStats extends BuildingEntityStats {\n        Levels: number = 1\n        TrackDist: number = 60.0\n        CollHeight: number = 20.0\n        CollRadius: number = 15.0\n        PickSphere: number = 30.0\n        CostOre: number = 8\n        CostRefinedOre: number = 2\n        CostCrystal: number = 1\n        WaterEntrances: number = 1\n        WaterTeleporter: boolean = true\n        CrystalDrain: number = 1\n        DamageCausesCallToArms: boolean = true\n        TrainSailor: boolean = true\n        EngineSound: string = 'SND_BuildingHum'\n        ShowHealthBar: boolean = true\n    }\n\n    Toolstation = new class ToolstationStats extends BuildingEntityStats {\n        Levels: number = 3\n        TrackDist: number = 50.0\n        ManTeleporter: boolean = true\n        CollHeight: number = 16.0\n        CollRadius: number = 15.0\n        PickSphere: number = 30.0\n        ToolStore: boolean = true\n        StoreObjects: boolean = true\n        SelfPowered: boolean = true\n        DamageCausesCallToArms: boolean = true\n        TrainDynamite: boolean[] = [false, false, true]\n        FunctionCoef: number[] = [1.0, 1.0, 1.0] // Function here is how long it takes to upgrade a minfigure\n        ShowHealthBar: boolean = true\n    }\n\n    GunStation = new class GunStationStats extends BuildingEntityStats {\n        Levels: number = 2\n        TrackDist: number = 60.0\n        CollHeight: number = 33.0\n        CollRadius: number = 15.0\n        PickSphere: number = 30.0\n        CostOre: number = 15\n        CostRefinedOre: number = 3\n        CostCrystal: number = 1\n        Tracker: boolean = true\n        CanDoubleSelect: boolean = true\n        CrystalDrain: number[] = [1, 1]\n        DamageCausesCallToArms: boolean = true\n        FunctionCoef: number[] = [1.0, 0.5] // How much of a crystal it drains every time it fires...\n        EngineSound: string = 'SND_BuildingHum'\n        ShowHealthBar: boolean = true\n    }\n\n    Geodome = new class GeodomeStats extends BuildingEntityStats {\n        Levels: number = 3\n        TrackDist: number = 50.0\n        CollHeight: number = 20.0\n        CollRadius: number = 15.0\n        PickSphere: number = 30.0\n        CostOre: number = 15\n        CostRefinedOre: number = 3\n        CostCrystal: number = 3\n        SurveyRadius: number[] = [6, 8, 12]\n        CrystalDrain: number[] = [1, 1, 1]\n        DamageCausesCallToArms: boolean = true\n        TrainScanner: boolean[] = [true, true, true]\n        EngineSound: string = 'SND_BuildingHum'\n        ShowHealthBar: boolean = true\n    }\n\n    Upgrade = new class UpgradeStats extends BuildingEntityStats {\n        Levels: number = 2\n        TrackDist: number = 80.0\n        CollHeight: number = 40.0\n        CollRadius: number = 15.0\n        PickSphere: number = 32.0\n        CostOre: number = 20\n        CostRefinedOre: number = 4\n        CostCrystal: number = 3\n        UpgradeBuilding: boolean = true\n        CrystalDrain: number[] = [1, 1]\n        DamageCausesCallToArms: boolean = true\n        FunctionCoef: number[] = [0.8, 1.6] // Function is speed of upgrade animation.\n        TrainRepair: boolean[] = [true, true]\n        EngineSound: string = 'SND_BuildingHum'\n        ShowHealthBar: boolean = true\n    }\n\n    PowerCrystal = new class PowerCrystalStats extends BaseConfig {\n        Levels: number = 1\n        TrackDist: number = 20.0\n        CollHeight: number = 2.0\n        PickSphere: number = 6.0\n    }\n\n    ProcessedOre = new class ProcessedOreStats extends BaseConfig {\n        Levels: number = 1\n        TrackDist: number = 20.0\n        CollHeight: number = 2.0\n        PickSphere: number = 8.0\n    }\n\n    Ore = new class OreStats extends BaseConfig {\n        Levels: number = 1\n        TrackDist: number = 20.0\n        CollHeight: number = 2.0\n        PickSphere: number = 6.0\n    }\n\n    Boulder = new class BoulderStats extends BaseConfig {\n        Levels: number = 1\n        CollRadius: number = 2.0\n    }\n\n    Pusher = new class PusherStats extends BaseConfig {\n        Levels: number = 1\n        CollRadius: number = 1.0\n    }\n\n    Freezer = new class FreezerStats extends BaseConfig {\n        Levels: number = 1\n        CollRadius: number = 1.0\n    }\n\n    LaserShot = new class LaserShotStats extends BaseConfig {\n        Levels: number = 1\n        ColRadius: number = 1.0\n    }\n\n    ElectricFence = new class ElectricFenceStats extends BaseConfig {\n        Levels: number = 1\n        TrackDist: number = 50.0\n        CollRadius: number = 5.0\n        CollHeight: number = 18.0\n        PickSphere: number = 20.0\n        DamageCausesCallToArms: boolean = true\n    }\n\n    Path = new class PathStats extends BaseConfig {\n        Levels: number = 1\n        CostOre: number = 2\n        CostRefinedOre: number = 1\n    }\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n    assignValue(objKey, lCfgKeyName, cfgValue): boolean {\n        if (objKey.toLowerCase() === lCfgKeyName) {\n            BaseConfig.setFromCfg(this[objKey], cfgValue)\n            return true\n        }\n    }\n\n}\n\n","import { GameStatsCfg } from '../../cfg/GameStatsCfg'\nimport { WorldEvent } from '../../event/WorldEvents'\nimport { WorkerMessageType } from './WorkerMessageType'\n\nexport class WadWorkerMessage {\n\n    type: WorkerMessageType = null\n    text?: string\n    resourceByName?: Map<string, any>\n    cfg?: any\n    stats?: any\n    totalResources?: number\n    assetNames?: string[]\n    assetObj?: any\n    loadingTimeSeconds?: string\n    messageState?: boolean\n    worldEvent?: WorldEvent\n\n    constructor(type: WorkerMessageType) {\n        this.type = type\n    }\n\n    static createTextMessage(msg: string): WadWorkerMessage {\n        return {type: WorkerMessageType.MSG, text: msg}\n    }\n\n    static createCfgLoaded(cfg: any, totalResources: number): WadWorkerMessage {\n        return {\n            type: WorkerMessageType.CFG,\n            cfg: cfg,\n            stats: new GameStatsCfg(cfg['Stats']),\n            totalResources: totalResources,\n        }\n    }\n\n    static createAssetLoaded(assetIndex: number, assetNames: string[], assetObj: any): WadWorkerMessage {\n        return {type: WorkerMessageType.ASSET, assetNames: assetNames, assetObj: assetObj}\n    }\n\n    static createLoadDone(totalResources: number, loadingTimeSeconds: string): WadWorkerMessage {\n        return {type: WorkerMessageType.DONE, totalResources: totalResources, loadingTimeSeconds: loadingTimeSeconds}\n    }\n\n}\n","import { InitLoadingMessage } from './InitLoadingMessage'\nimport { WadLoader } from './WadLoader'\nimport { WadWorkerMessage } from './WadWorkerMessage'\nimport { WorkerMessageType } from './WorkerMessageType'\n\nconst worker: Worker = self as any\n\nfunction postMessage(assetMessage: WadWorkerMessage) {\n    worker.postMessage(assetMessage)\n}\n\nworker.addEventListener('message', (event) => {\n    const wadLoader = new WadLoader()\n    // set callbacks on wadLoader\n    wadLoader.onMessage = (text: string) => postMessage(WadWorkerMessage.createTextMessage(text))\n    wadLoader.onInitialLoad = (totalResources: number, cfg: any) => postMessage(WadWorkerMessage.createCfgLoaded(cfg, totalResources))\n    wadLoader.onAssetLoaded = (assetIndex: number, assetNames: string[], assetObj: any) => {\n        postMessage(WadWorkerMessage.createAssetLoaded(assetIndex, assetNames, assetObj))\n    }\n    wadLoader.onLoadDone = (totalResources: number, loadingTimeSeconds: string) => {\n        postMessage(WadWorkerMessage.createLoadDone(totalResources, loadingTimeSeconds))\n    }\n    // start loading\n    const msg = event.data as InitLoadingMessage\n    if (msg) {\n        wadLoader.loadWadFiles(msg.wad0FileUrl, msg.wad1FileUrl)\n    } else {\n        wadLoader.startWithCachedFiles(() => postMessage(new WadWorkerMessage(WorkerMessageType.CACHE_MISS)))\n    }\n})\n"],"sourceRoot":""}