{"version":3,"sources":["webpack://rock-raiders-web/webpack/runtime/chunk loaded","webpack://rock-raiders-web/webpack/runtime/startup chunk dependencies","webpack://rock-raiders-web/./src/event/EventTypeEnum.ts","webpack://rock-raiders-web/./src/event/LocalEvents.ts","webpack://rock-raiders-web/./src/game/model/EntityType.ts","webpack://rock-raiders-web/./src/game/model/map/SurfaceType.ts","webpack://rock-raiders-web/./src/game/model/raider/RaiderTool.ts","webpack://rock-raiders-web/./src/game/model/raider/RaiderTraining.ts","webpack://rock-raiders-web/./src/cfg/ButtonCfg.ts","webpack://rock-raiders-web/./src/gui/infodock/ButtonInfoDockCfg.ts","webpack://rock-raiders-web/./src/gui/radar/MapPanel.ts","webpack://rock-raiders-web/./src/gui/radar/RadarPanel.ts","webpack://rock-raiders-web/./src/gui/sidebar/SideBarLabel.ts","webpack://rock-raiders-web/./src/gui/sidebar/PanelCrystalSideBar.ts","webpack://rock-raiders-web/./src/gui/toppanel/ButtonPriorityListCfg.ts","webpack://rock-raiders-web/./src/gui/toppanel/ButtonTopCfg.ts","webpack://rock-raiders-web/./src/cfg/ButtonCameraControlCfg.ts","webpack://rock-raiders-web/./src/cfg/ButtonInformationCfg.ts","webpack://rock-raiders-web/./src/cfg/ButtonsCfg.ts","webpack://rock-raiders-web/./src/cfg/PanelsCfg.ts","webpack://rock-raiders-web/./src/event/GuiCommand.ts","webpack://rock-raiders-web/./src/gui/cameracontrol/CameraControlPanel.ts","webpack://rock-raiders-web/./src/cfg/InfoButtonCfg.ts","webpack://rock-raiders-web/./src/gui/infodock/InfoDockButton.ts","webpack://rock-raiders-web/./src/gui/infodock/InfoDockPanel.ts","webpack://rock-raiders-web/./src/gui/infodock/InfoMessagesEntryConfig.ts","webpack://rock-raiders-web/./src/gui/infodock/InfoMessagesConfig.ts","webpack://rock-raiders-web/./src/gui/infodock/InformationPanel.ts","webpack://rock-raiders-web/./src/cfg/IconPanelBackButtonCfg.ts","webpack://rock-raiders-web/./src/cfg/CfgHelper.ts","webpack://rock-raiders-web/./src/cfg/MenuItemCfg.ts","webpack://rock-raiders-web/./src/gui/main/IconPanelButton.ts","webpack://rock-raiders-web/./src/gui/main/IconSubPanel.ts","webpack://rock-raiders-web/./src/gui/main/DependencyCheckPanel.ts","webpack://rock-raiders-web/./src/gui/main/BuildingPanel.ts","webpack://rock-raiders-web/./src/gui/main/GetToolPanel.ts","webpack://rock-raiders-web/./src/gui/main/IconPanelButtonLabel.ts","webpack://rock-raiders-web/./src/gui/main/IconPanelToggleButton.ts","webpack://rock-raiders-web/./src/gui/main/select/SelectBasePanel.ts","webpack://rock-raiders-web/./src/gui/main/select/SelectBuildingPanel.ts","webpack://rock-raiders-web/./src/gui/main/select/SelectFloorPanel.ts","webpack://rock-raiders-web/./src/gui/main/select/SelectRaiderPanel.ts","webpack://rock-raiders-web/./src/gui/main/select/SelectRubblePanel.ts","webpack://rock-raiders-web/./src/gui/main/select/SelectSitePanel.ts","webpack://rock-raiders-web/./src/gui/main/select/SelectVehicleEmptyPanel.ts","webpack://rock-raiders-web/./src/gui/main/select/SelectVehicleManedPanel.ts","webpack://rock-raiders-web/./src/gui/main/select/SelectWallPanel.ts","webpack://rock-raiders-web/./src/gui/main/TrainRaiderPanel.ts","webpack://rock-raiders-web/./src/gui/main/VehiclePanel.ts","webpack://rock-raiders-web/./src/gui/main/MainPanel.ts","webpack://rock-raiders-web/./src/game/model/job/PriorityIdentifier.ts","webpack://rock-raiders-web/./src/gui/messagepanel/TextInfoMessage.ts","webpack://rock-raiders-web/./src/gui/messagepanel/MessagePanel.ts","webpack://rock-raiders-web/./src/gui/messagepanel/TextInfoMessageEntryConfig.ts","webpack://rock-raiders-web/./src/gui/messagepanel/TextInfoMessageConfig.ts","webpack://rock-raiders-web/./src/gui/toppanel/PriorityButtonsConfig.ts","webpack://rock-raiders-web/./src/game/model/job/PriorityEntry.ts","webpack://rock-raiders-web/./src/gui/toppanel/PriorityList.ts","webpack://rock-raiders-web/./src/gui/toppanel/PriorityListPanel.ts","webpack://rock-raiders-web/./src/gui/toppanel/PriorityPositionsEntry.ts","webpack://rock-raiders-web/./src/gui/base/ToggleButton.ts","webpack://rock-raiders-web/./src/gui/toppanel/TopPanel.ts","webpack://rock-raiders-web/./src/gui/GuiMainWorker.ts","webpack://rock-raiders-web/./src/params.ts","webpack://rock-raiders-web/webpack/bootstrap","webpack://rock-raiders-web/webpack/runtime/define property getters","webpack://rock-raiders-web/webpack/runtime/ensure chunk","webpack://rock-raiders-web/webpack/runtime/get javascript chunk filename","webpack://rock-raiders-web/webpack/runtime/global","webpack://rock-raiders-web/webpack/runtime/hasOwnProperty shorthand","webpack://rock-raiders-web/webpack/runtime/publicPath","webpack://rock-raiders-web/webpack/runtime/importScripts chunk loading","webpack://rock-raiders-web/webpack/startup"],"names":["deferred","next","MOUSE_BUTTON","POINTER_EVENT","KEY_EVENT","SelectPanelType","LocalEvent","eventKey","super","this","isLocal","SelectionChanged","entityMgr","selectPanelType","NONE","canDoTraining","Map","everyHasTool","selection","getSelectPanelType","isGround","surface","surfaceType","isPowerPath","isFloor","floor","isSite","hasRubble","isDrillable","isDigable","isReinforcable","canPlaceFence","buildings","some","b","entityType","isUsable","someCarries","raiders","r","carries","everyHasMaxLevel","every","level","stats","Levels","training","set","getTrainingSites","length","hasTraining","tool","hasTool","buildingCanUpgrade","building","canUpgrade","buildingCanSwitchPower","SelfPowered","PowerBuilding","vehicleHasCallManJob","vehicles","v","callManJob","allVehicleEmpty","driver","DeselectAll","ChangeCursor","cursor","timeout","BuildingsChangedEvent","usableBuildingsByTypeAndLevel","forEach","perLevel","getOrUpdate","event","minLevel","result","count","PlaySoundEvent","sample","EntityType","getEntityTypeByName","type","equalsIgnoreCase","PILOT","TOOLSTATION","TELEPORT_PAD","DOCKS","POWER_STATION","BARRACKS","UPGRADE","GEODOME","ORE_REFINERY","GUNSTATION","TELEPORT_BIG","BAT","SMALL_SPIDER","ROCK_MONSTER","ICE_MONSTER","LAVA_MONSTER","DYNAMITE","ELECTRIC_FENCE","CRYSTAL","ORE","BRICK","BARRIER","HOVERBOARD","SMALL_DIGGER","SMALL_TRUCK","SMALL_CAT","SMALL_MLP","SMALL_HELI","BULLDOZER","WALKER_DIGGER","LARGE_MLP","LARGE_DIGGER","LARGE_CAT","TV_CAMERA","console","error","SurfaceType","options","shaping","matIndex","selectable","digable","reinforcable","C","cursorFulfiller","statsDrillName","canCarryFence","connectsPath","mapSurfaceColor","Object","assign","typeNum","POWER_PATH_BUILDING","SOLID_ROCK","HARD_ROCK","LOOSE_ROCK","DIRT","LAVA","ORE_SEAM","WATER","CRYSTAL_SEAM","RECHARGE_SEAM","SLUG_HOLE","RUBBLE4","RUBBLE3","RUBBLE2","RUBBLE1","GROUND","name","POWER_PATH","POWER_PATH_BUILDING_SITE","POWER_PATH_CONSTRUCTION","RaiderTool","AllRaiderTools","DRILL","HAMMER","SHOVEL","SPANNER","FREEZERGUN","LASER","PUSHERGUN","BIRDSCARER","RaiderTraining","AllRaiderTrainings","DRIVER","ENGINEER","GEOLOGIST","SAILOR","DEMOLITION","RaiderTrainingSites","RaiderTrainingStatsProperty","ButtonCfg","BaseButtonCfg","cfgValue","buttonType","normalFile","highlightFile","pressedFile","relX","relY","width","height","tooltip","ButtonInfoDockCfg","BaseConfig","cfgObj","panelButtonInfoDockGoto","panelButtonInfoDockClose","lCfgKeyName","MapPanel","Panel","parent","offsetX","offsetY","surfaceRectSize","surfaceRectMargin","surfaceMap","context","img","canvas","xIn","xOut","yIn","yOut","onClick","cx","cy","mapX","x","mapY","y","redrawMap","registerEventListener","surfaces","s","tileX","tileY","surfaceRect","redrawSurface","notifyRedraw","forceRedraw","fillStyle","fillRect","surfaceX","Math","round","surfaceY","borderColor","surfaceColor","RadarPanel","panelCfg","panelFillCfg","panelOverlayCfg","buttonsCfg","map","addChild","fill","updatePosition","overlay","btnToggle","Button","panelButtonRadarToggle","toggleState","btnMap","panelButtonRadarMapView","hide","show","btnTagged","panelButtonRadarTaggedObjectView","reset","hidden","onRedraw","ButtonRadarCfg","panelButtonRadarZoomIn","panelButtonRadarZoomOut","SideBarLabel","BaseElement","btnCfg","label","textAlign","font","fillText","PanelCrystalSideBar","numCrystal","usedCrystals","neededCrystals","totalOre","labelOre","panelButtonCrystalSideBarOre","labelCrystal","panelButtonCrystalSideBarCrystals","imgNoCrystal","GuiResourceCache","imgSmallCrystal","imgUsedCrystal","imgOre","toString","usedCrystal","neededCrystal","curX","curY","c","max","imgCrystal","drawImage","i","ButtonCrystalSideBarCfg","ButtonPriorityListCfg","panelButtonPriorityListDisable","panelButtonPriorityListUpOne","panelButtonPriorityListClose","panelButtonPriorityListReset","objKey","match","push","parseValue","assignValue","ButtonTopCfg","panelButtonTopPanelCallToArms","panelButtonTopPanelOptions","panelButtonTopPanelPriorities","ButtonCameraControlCfg","panelButtonCameraControlZoomIn","panelButtonCameraControlZoomOut","panelButtonCameraControlCycleBuildings","panelButtonCameraControlRotate","ButtonInformationCfg","panelButtonInformationToggle","panelButtonInformationFunction","ButtonsCfg","panelRadar","panelCrystalSideBar","panelTopPanel","panelInformation","panelPriorityList","panelCameraControl","panelInfoDock","panelEncyclopedia","btnCfgValue","arr","toLowerCase","PanelsCfg","panelRadarFill","panelRadarOverlay","panelMessages","panelMessagesSide","PanelCfg","GuiCommand","CancelBuildMode","SelectBuildMode","SelectedRaiderPickTool","CreatePowerPath","PlaceFence","MakeRubble","ChangeRaiderSpawnRequest","increase","CreateClearRubbleJob","UpgradeBuilding","BeamUpBuilding","ChangePriorityList","priorityList","ChangeBuildingPowerState","state","CreateDrillJob","CreateReinforceJob","CreateDynamiteJob","CancelSurfaceJobs","RaiderEat","RaiderDrop","RaiderUpgrade","RaiderBeamUp","TrainRaider","CancelBuilding","RequestVehicleSpawn","vehicle","VehicleCallMan","VehicleBeamUp","VehicleDriverGetOut","CameraControl","zoom","cycleBuilding","rotationIndex","CameraControlPanel","panelRotationControlCfg","publishEvent","index","cfg","InfoButtonCfg","buttonImageFilename","disabledFile","InfoDockButton","infoMessagesEntryConfig","messages","text","animationTimeout","animationSpeedX","animationSpeedY","message","buttonClicked","pop","unshift","showButton","targetX","targetY","Promise","resolve","updateAnimation","onDone","diffX","diffY","abs","sign","sqrt","that","setTimeout","InfoDockPanel","infoMessagesConfig","informationPanel","stackButtons","gotoLatestMessage","dropLatestMessage","infoGenericDeath","infoGenericMonster","infoCrystalFound","infoUnderAttack","infoLandslide","infoPowerDrain","infoSlugEmerge","infoFoundMinifigure","btn","msg","log","location","button","shift","setMovedIn","splice","indexOf","slideStackIntoPosition","then","includes","slideInButton","disabled","reduce","prev","cur","slideToTarget","pushFirst","setText","promises","p","all","InfoMessagesEntryConfig","sfx","timing","flag","replace","InfoMessagesConfig","InformationPanel","textImage","createTextImage","IconPanelBackButtonCfg","parseLabel","Array","isArray","join","MenuItemCfg","tooltipSfx","tooltipDisabled","tooltipDisabledSfx","hotkey","IconPanelButton","menuItemCfg","itemKey","parentWidth","menuIndex","isDisabled","updateState","autoRedraw","targetState","stateChanged","drawHover","hover","strokeStyle","lineWidth","strokeRect","IconSubPanel","numOfItems","onBackPanel","backBtn","iconPanelButtons","backBtnCfg","frameImgCfg","imgName","val1","val2","val3","val4","imgNameWoBackName","woBack1","woBack2","menuItemGroup","menuItem","movedIn","updateAllButtonStates","DependencyCheckPanel","hasRaider","numRaiders","item","addMenuItem","dependencies","d","checkDependency","dependency","buildingsByLevel","get","quantity","BuildingPanel","addBuildMenuItem","addDependencyMenuItem","GetToolPanel","numUsableToolstations","addGetToolItem","IconPanelButtonLabel","numRequestedRaiders","IconPanelToggleButton","menuItemOffCfg","menuItemOnCfg","imgOnNormal","imgOnHover","imgOnPressed","imgOnDisabled","clicked","imgNormal","imgDisabled","imgPressed","pressed","imgHover","children","child","drawTooltip","SelectBasePanel","SelectBuildingPanel","powerSwitchItem","upgradeItem","deleteBuildingItem","SelectFloorPanel","pathItem","removeItem","placeFenceItem","SelectRaiderPanel","numToolstations","feedItem","unloadItem","getToolItem","trainItem","deleteRaiderItem","SelectRubblePanel","clearRubbleItem","SelectSitePanel","cancelBuilding","SelectVehicleEmptyPanel","vehicleHasJob","manVehicleItem","deleteVehicleItem","SelectVehicleManedPanel","leaveVehicleItem","SelectWallPanel","numToolstationsLevel2","itemDrill","itemReinforce","itemDynamite","itemDeselect","TrainRaiderPanel","addTrainingItem","trainingItem","VehiclePanel","SmallVehiclePanel","addVehicleMenuItem","LargeVehiclePanel","MainPanel","subPanels","numTeleportPads","numBarracks","mainPanel","addSubPanel","buildingPanel","smallVehiclePanel","largeVehiclePanel","selectWallPanel","selectFloorPanel","selectRubblePanel","selectSitePanel","selectBuildingPanel","selectRaiderPanel","trainRaiderPanel","getToolPanel","selectVehicleEmptyPanel","selectVehicleManedPanel","teleportRaider","getMaxRaiders","buildingItem","smallVehicleItem","largeVehicleItem","selectSubPanel","onSelectedSurfaceChange","childPanel","targetPanel","subPanel","PriorityIdentifier","TextInfoMessage","infoMessageEntryConfig","maxWidth","infoImage","imageFilename","sfxSample","Sample","sfxName","MessagePanel","textInfoMessageConfig","imgAir","currentMessage","messageTimeout","airLevel","crystalFound","textCrystalFound","setMessage","msgSpaceToContinue","textSpaceToContinue","cavernDiscovered","textCavernDiscovered","oreFound","textOreFound","msgAirSupplyLow","textAirSupplyLow","msgAirSupplyRunningOut","textAirSupplyRunningOut","msgGameCompleted","textGameCompleted","msgManTrained","textManTrained","msgUnitUpgraded","textUnitUpgraded","textInfoMessage","min","txtX","infoX","TextInfoMessageEntryConfig","TextInfoMessageConfig","PriorityButtonsConfig","aiPriorityTrain","aiPriorityGetIn","aiPriorityCrystal","aiPriorityOre","aiPriorityRepair","aiPriorityClearing","aiPriorityDestruction","aiPriorityConstruction","aiPriorityReinforce","aiPriorityRecharge","PriorityEntry","levelPriorityEntry","key","enabled","PriorityList","levelDefault","current","priorities","tmp","entry","element","PriorityListPanel","pos","prioPositions","prioByName","buttonCfg","toggle","updateList","upOne","setList","updated","prioButton","btnIndex","pushToTop","PriorityPositionsEntry","ToggleButton","isInactive","inRect","isInRect","checkHover","isPressed","checkClick","checkRelease","TopPanel","btnCallToArms","btnOptions","btnPriorities","GuiMainWorker","GuiWorker","worker","panelsCfg","addPanel","rootElement","priorityPositionsConfig","values","priorityButtonsConfig","panelMain","sendResponse","WorkerMessageType","messageState","unsetMessage","workerInstance","self","addEventListener","data","resourceByName","processMessage","MAX_RAIDER_BASE","MAX_RAIDER_REQUEST","ADDITIONAL_RAIDER_PER_SUPPORT","PANEL_ANIMATION_MULTIPLIER","SPRITE_RESOLUTION_WIDTH","SPRITE_RESOLUTION_HEIGHT","NATIVE_FRAMERATE","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","__webpack_exports__","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","definition","o","defineProperty","enumerable","f","e","chunkId","u","g","globalThis","Function","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","document","currentScript","src","scripts","getElementsByTagName","Error","installedChunks","87","chunkLoadingGlobal","parentChunkLoadingFunction","bind","moreModules","runtime"],"mappings":"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","file":"87.index.js","sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tresult = fn();\n\t\t}\n\t}\n\treturn result;\n};","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn Promise.all([\n\t\t__webpack_require__.e(495),\n\t\t__webpack_require__.e(710)\n\t]).then(next);\n};","// noinspection JSUnusedGlobalSymbols\nexport enum MOUSE_BUTTON {\n    MAIN = 0,\n    MIDDLE = 1,\n    SECONDARY = 2\n}\n\nexport enum POINTER_EVENT {\n    MOVE,\n    DOWN,\n    UP,\n}\n\nexport enum KEY_EVENT {\n    DOWN,\n    UP,\n}\n","import { Vector3 } from 'three'\nimport { Sample } from '../audio/Sample'\nimport { EntityManager } from '../game/EntityManager'\nimport { EntityType } from '../game/model/EntityType'\nimport { PriorityEntry } from '../game/model/job/PriorityEntry'\nimport { Surface } from '../game/model/map/Surface'\nimport { SurfaceType } from '../game/model/map/SurfaceType'\nimport { Terrain } from '../game/model/map/Terrain'\nimport { AllRaiderTools, RaiderTool } from '../game/model/raider/RaiderTool'\nimport { AllRaiderTrainings, RaiderTraining } from '../game/model/raider/RaiderTraining'\nimport { MapSurfaceRect } from '../gui/radar/MapSurfaceRect'\nimport { TILESIZE } from '../params'\nimport { Cursor } from '../screen/Cursor'\nimport { EventKey } from './EventKeyEnum'\nimport { GameEvent } from './GameEvent'\n\nexport class LocalEvent extends GameEvent {\n\n    constructor(eventKey: EventKey) {\n        super(eventKey)\n        this.isLocal = true\n    }\n\n}\n\nexport enum SelectPanelType {\n\n    NONE,\n    RAIDER,\n    VEHICLE,\n    BUILDING,\n    SURFACE,\n\n}\n\nexport class SelectionChanged extends LocalEvent {\n\n    selectPanelType: SelectPanelType = SelectPanelType.NONE\n    isGround: boolean\n    isPowerPath: boolean\n    canPlaceFence: boolean\n    isFloor: boolean\n    isSite: boolean\n    hasRubble: boolean\n    isDrillable: boolean\n    isReinforcable: boolean\n    someCarries: boolean\n    everyHasMaxLevel: boolean\n    canDoTraining: Map<RaiderTraining, boolean> = new Map()\n    everyHasTool: Map<RaiderTool, boolean> = new Map()\n    buildingCanUpgrade: boolean\n    buildingCanSwitchPower: boolean\n    vehicleHasCallManJob: boolean\n    allVehicleEmpty: boolean\n\n    constructor(entityMgr: EntityManager) {\n        super(EventKey.SELECTION_CHANGED)\n        if (!entityMgr) return\n        this.selectPanelType = entityMgr.selection.getSelectPanelType()\n        this.isGround = entityMgr.selection.surface?.surfaceType === SurfaceType.GROUND\n        this.isPowerPath = entityMgr.selection.surface?.surfaceType === SurfaceType.POWER_PATH\n        this.isFloor = entityMgr.selection.surface?.surfaceType.floor\n        this.isSite = entityMgr.selection.surface?.surfaceType === SurfaceType.POWER_PATH_CONSTRUCTION || entityMgr.selection.surface?.surfaceType === SurfaceType.POWER_PATH_BUILDING_SITE\n        this.hasRubble = entityMgr.selection.surface?.hasRubble()\n        this.isDrillable = entityMgr.selection.surface?.isDigable()\n        this.isReinforcable = entityMgr.selection.surface?.isReinforcable()\n        this.canPlaceFence = entityMgr.selection.surface?.canPlaceFence() && entityMgr && entityMgr.buildings.some((b) => b.entityType === EntityType.POWER_STATION && b.isUsable())\n        this.someCarries = !!entityMgr.selection.raiders.some((r) => !!r.carries)\n        this.everyHasMaxLevel = !!entityMgr.selection.raiders.every((r) => r.level >= r.stats.Levels)\n        AllRaiderTrainings.forEach((training) => this.canDoTraining.set(training, entityMgr && entityMgr.getTrainingSites(training).length > 0 && entityMgr.selection.raiders.some((r) => !r.hasTraining(training))))\n        AllRaiderTools.forEach((tool) => this.everyHasTool.set(tool, !!entityMgr.selection.raiders.every((r) => r.hasTool(tool))))\n        this.buildingCanUpgrade = entityMgr.selection.building?.canUpgrade()\n        this.buildingCanSwitchPower = !entityMgr.selection.building?.stats.SelfPowered && !entityMgr.selection.building?.stats.PowerBuilding\n        this.vehicleHasCallManJob = entityMgr.selection.vehicles.every((v) => !!v.callManJob)\n        this.allVehicleEmpty = entityMgr.selection.vehicles.every((v) => !v.driver)\n    }\n\n}\n\nexport class DeselectAll extends SelectionChanged {\n\n    constructor() {\n        super(null)\n    }\n\n}\n\nexport class AirLevelChanged extends LocalEvent {\n\n    airLevel: number\n\n    constructor(airLevel: number) {\n        super(EventKey.AIR_LEVEL_CHANGED)\n        this.airLevel = airLevel\n    }\n\n}\n\nexport class ChangeCursor extends LocalEvent {\n\n    cursor: Cursor\n    timeout: number\n\n    constructor(cursor: Cursor, timeout: number = null) {\n        super(EventKey.CHANGE_CURSOR)\n        this.cursor = cursor\n        this.timeout = timeout\n    }\n\n}\n\nexport class SetupPriorityList extends LocalEvent {\n\n    priorityList: PriorityEntry[]\n\n    constructor(priorityList: PriorityEntry[]) {\n        super(EventKey.SETUP_PRIORITY_LIST)\n        this.priorityList = priorityList\n    }\n\n}\n\nexport class BuildingsChangedEvent extends LocalEvent {\n\n    usableBuildingsByTypeAndLevel: Map<EntityType, Map<number, number>> = new Map()\n\n    constructor(entityMgr: EntityManager) {\n        super(EventKey.BUILDINGS_CHANGED)\n        entityMgr.buildings.forEach((b) => {\n            if (b.isUsable()) {\n                const perLevel = this.usableBuildingsByTypeAndLevel.getOrUpdate(b.entityType, () => new Map())\n                perLevel.set(b.level, perLevel.getOrUpdate(b.level, () => 0) + 1)\n            }\n        })\n    }\n\n    static countUsable(event: BuildingsChangedEvent, building: EntityType, minLevel: number = 0) {\n        let result = 0\n        event.usableBuildingsByTypeAndLevel.getOrUpdate(building, () => new Map()).forEach((count, level) => {\n            if (level >= minLevel) result += count\n        })\n        return result\n    }\n\n}\n\nexport class RaidersChangedEvent extends LocalEvent {\n\n    numRaiders: number\n    training: RaiderTraining\n\n    constructor(entityMgr: EntityManager, training: RaiderTraining = null) {\n        super(EventKey.RAIDERS_CHANGED)\n        this.numRaiders = entityMgr.raiders.length\n        this.training = training\n    }\n\n}\n\nexport class VehiclesChangedEvent extends LocalEvent {\n\n    constructor() {\n        super(EventKey.VEHICLES_CHANGED)\n    }\n\n}\n\nexport class PlaySoundEvent extends LocalEvent {\n\n    sample: Sample\n\n    constructor(sample: Sample) {\n        super(EventKey.PLAY_SOUND)\n        this.sample = sample\n    }\n\n}\n\nexport class UpdateRadarTerrain extends LocalEvent {\n\n    surfaces: MapSurfaceRect[] = []\n    tileX: number\n    tileY: number\n\n    constructor(terrain: Terrain, mapFocus: Vector3) {\n        super(EventKey.UPDATE_RADAR_TERRAIN)\n        terrain.forEachSurface((s) => {\n            if (s.discovered) {\n                this.surfaces.push(new MapSurfaceRect(s))\n            }\n        })\n        this.tileX = Math.floor(mapFocus.x / TILESIZE)\n        this.tileY = Math.floor(mapFocus.z / TILESIZE)\n    }\n\n}\n\nexport class UpdateRadarSurface extends LocalEvent {\n\n    surfaceRect: MapSurfaceRect\n\n    constructor(surface: Surface) {\n        super(EventKey.UPDATE_RADAR_SURFACE)\n        this.surfaceRect = new MapSurfaceRect(surface)\n    }\n\n}\n","export enum EntityType {\n\n    // RAIDER\n    PILOT,\n\n    // BUILDING\n    TOOLSTATION,\n    TELEPORT_PAD,\n    DOCKS,\n    POWER_STATION,\n    BARRACKS,\n    UPGRADE,\n    GEODOME,\n    ORE_REFINERY,\n    GUNSTATION,\n    TELEPORT_BIG,\n\n    // MONSTER\n    BAT,\n    SMALL_SPIDER,\n    ROCK_MONSTER,\n    ICE_MONSTER,\n    LAVA_MONSTER,\n\n    // MATERIAL\n    DYNAMITE,\n    ELECTRIC_FENCE,\n    CRYSTAL,\n    ORE,\n    BRICK,\n    BARRIER,\n\n    // VEHICLE\n    HOVERBOARD,\n    SMALL_DIGGER,\n    SMALL_TRUCK,\n    SMALL_CAT,\n    SMALL_MLP,\n    SMALL_HELI,\n    BULLDOZER,\n    WALKER_DIGGER,\n    LARGE_MLP,\n    LARGE_DIGGER,\n    LARGE_CAT,\n\n    // OTHERS\n    TV_CAMERA,\n\n}\n\nexport function getEntityTypeByName(type: string): EntityType {\n    if ('Pilot'.equalsIgnoreCase(type)) {\n        return EntityType.PILOT\n    } else if ('Toolstation'.equalsIgnoreCase(type)) {\n        return EntityType.TOOLSTATION\n    } else if ('TeleportPad'.equalsIgnoreCase(type)) {\n        return EntityType.TELEPORT_PAD\n    } else if ('Docks'.equalsIgnoreCase(type)) {\n        return EntityType.DOCKS\n    } else if ('PowerStation'.equalsIgnoreCase(type)) {\n        return EntityType.POWER_STATION\n    } else if ('Barracks'.equalsIgnoreCase(type)) {\n        return EntityType.BARRACKS\n    } else if ('Upgrade'.equalsIgnoreCase(type)) {\n        return EntityType.UPGRADE\n    } else if ('GEO-Dome'.equalsIgnoreCase(type)) {\n        return EntityType.GEODOME\n    } else if ('OreRefinery'.equalsIgnoreCase(type)) {\n        return EntityType.ORE_REFINERY\n    } else if ('GunStation'.equalsIgnoreCase(type)) {\n        return EntityType.GUNSTATION\n    } else if ('TeleportBIG'.equalsIgnoreCase(type)) {\n        return EntityType.TELEPORT_BIG\n    } else if ('Bat'.equalsIgnoreCase(type)) {\n        return EntityType.BAT\n    } else if ('SmallSpider'.equalsIgnoreCase(type)) {\n        return EntityType.SMALL_SPIDER\n    } else if ('RockMonster'.equalsIgnoreCase(type)) {\n        return EntityType.ROCK_MONSTER\n    } else if ('IceMonster'.equalsIgnoreCase(type)) {\n        return EntityType.ICE_MONSTER\n    } else if ('LavaMonster'.equalsIgnoreCase(type)) {\n        return EntityType.LAVA_MONSTER\n    } else if ('Dynamite'.equalsIgnoreCase(type)) {\n        return EntityType.DYNAMITE\n    } else if ('EletricFence'.equalsIgnoreCase(type)) {\n        return EntityType.ELECTRIC_FENCE\n    } else if ('PowerCrystal'.equalsIgnoreCase(type)) {\n        return EntityType.CRYSTAL\n    } else if ('Ore'.equalsIgnoreCase(type)) {\n        return EntityType.ORE\n    } else if ('Brick'.equalsIgnoreCase(type)) {\n        return EntityType.BRICK\n    } else if ('Barrier'.equalsIgnoreCase(type)) {\n        return EntityType.BARRIER\n    } else if ('Hoverboard'.equalsIgnoreCase(type)) {\n        return EntityType.HOVERBOARD\n    } else if ('SmallDigger'.equalsIgnoreCase(type)) {\n        return EntityType.SMALL_DIGGER\n    } else if ('SamllTruck'.equalsIgnoreCase(type)) {\n        return EntityType.SMALL_TRUCK\n    } else if ('SmallCat'.equalsIgnoreCase(type)) {\n        return EntityType.SMALL_CAT\n    } else if ('SmallMLP'.equalsIgnoreCase(type)) {\n        return EntityType.SMALL_MLP\n    } else if ('SmallHeli'.equalsIgnoreCase(type)) {\n        return EntityType.SMALL_HELI\n    } else if ('Bulldozer'.equalsIgnoreCase(type)) {\n        return EntityType.BULLDOZER\n    } else if ('WalkerDigger'.equalsIgnoreCase(type)) {\n        return EntityType.WALKER_DIGGER\n    } else if ('LargeMLP'.equalsIgnoreCase(type)) {\n        return EntityType.LARGE_MLP\n    } else if ('LargeDigger'.equalsIgnoreCase(type)) {\n        return EntityType.LARGE_DIGGER\n    } else if ('LargeCat'.equalsIgnoreCase(type)) {\n        return EntityType.LARGE_CAT\n    } else if ('TVCamera'.equalsIgnoreCase(type)) {\n        return EntityType.TV_CAMERA\n    } else {\n        console.error('Could not identify entity type from string: ' + type)\n        return null\n    }\n}\n","import { Cursor } from '../../../screen/Cursor'\n\nexport class SurfaceType {\n\n    name: string // human readable, maybe used as label later on\n    shaping: boolean = false\n    matIndex: string = '00'\n    floor: boolean = false\n    selectable: boolean = false\n    digable: boolean = false\n    reinforcable: boolean = false\n    cursor: Cursor = Cursor.Pointer_Standard\n    cursorFulfiller: Cursor = Cursor.Pointer_Standard\n    statsDrillName: string = null\n    canCarryFence: boolean = false\n    connectsPath: boolean = false\n    mapSurfaceColor: string = '#00FFFF'\n\n    constructor(options: Partial<SurfaceType> = {}) {\n        Object.assign(this, options)\n    }\n\n    static readonly GROUND = new SurfaceType({\n        name: 'ground',\n        floor: true,\n        selectable: true,\n        canCarryFence: true,\n        cursorFulfiller: Cursor.Pointer_LegoManGo,\n        mapSurfaceColor: '#280048',\n    })\n    static readonly SOLID_ROCK = new SurfaceType({\n        name: 'solid rock',\n        shaping: true,\n        matIndex: '5',\n        cursor: Cursor.Pointer_SurfaceType_Immovable,\n        mapSurfaceColor: '#500090',\n    })\n    static readonly HARD_ROCK = new SurfaceType({\n        name: 'hard rock',\n        shaping: true,\n        matIndex: '4',\n        selectable: true,\n        digable: true,\n        reinforcable: true,\n        cursor: Cursor.Pointer_SurfaceType_Hard,\n        statsDrillName: 'HardDrillTime',\n        mapSurfaceColor: '#7000B0',\n    })\n    static readonly LOOSE_ROCK = new SurfaceType({\n        name: 'loose rock',\n        shaping: true,\n        matIndex: '3',\n        selectable: true,\n        digable: true,\n        reinforcable: true,\n        cursor: Cursor.Pointer_SurfaceType_Medium,\n        statsDrillName: 'LooseDrillTime',\n        mapSurfaceColor: '#9000D0',\n    })\n    static readonly DIRT = new SurfaceType({\n        name: 'dirt',\n        shaping: true,\n        matIndex: '2',\n        selectable: true,\n        digable: true,\n        reinforcable: true,\n        cursor: Cursor.Pointer_SurfaceType_Loose,\n        statsDrillName: 'SoilDrillTime',\n        mapSurfaceColor: '#B000F0',\n    })\n    static readonly SLUG_HOLE = new SurfaceType({\n        name: 'slug hole',\n        floor: true,\n        matIndex: '30',\n        mapSurfaceColor: '#280048',\n    })\n    static readonly LAVA = new SurfaceType({name: 'lava', floor: true, matIndex: '46'})\n    static readonly ORE_SEAM = new SurfaceType({\n        name: 'ore seam',\n        matIndex: '40',\n        selectable: true,\n        digable: true,\n        reinforcable: true,\n        cursor: Cursor.Pointer_SurfaceType_OreSeam,\n        statsDrillName: 'SeamDrillTime',\n    })\n    static readonly WATER = new SurfaceType({name: 'water', floor: true, matIndex: '45', mapSurfaceColor: '#000080'})\n    static readonly CRYSTAL_SEAM = new SurfaceType({\n        name: 'energy crystal seam',\n        matIndex: '20',\n        selectable: true,\n        digable: true,\n        reinforcable: true,\n        cursor: Cursor.Pointer_SurfaceType_CrystalSeam,\n        statsDrillName: 'SeamDrillTime',\n    })\n    static readonly RECHARGE_SEAM = new SurfaceType({\n        name: 'recharge seam',\n        matIndex: '67',\n        cursor: Cursor.Pointer_SurfaceType_RechargeSeam,\n    })\n    static readonly POWER_PATH = new SurfaceType({\n        name: 'power path all',\n        floor: true,\n        matIndex: '60',\n        selectable: true,\n        canCarryFence: true,\n        connectsPath: true,\n        mapSurfaceColor: '#FFFF00',\n    })\n    static readonly POWER_PATH_BUILDING_SITE = new SurfaceType({\n        name: 'power path building site',\n        floor: true,\n        matIndex: '61',\n        selectable: true,\n        canCarryFence: true,\n    })\n    static readonly POWER_PATH_BUILDING = new SurfaceType({\n        name: 'power path building',\n        floor: true,\n        matIndex: '76',\n        connectsPath: true,\n        mapSurfaceColor: '#B8BBB8',\n    })\n    static readonly POWER_PATH_CONSTRUCTION = new SurfaceType({\n        name: 'power path construction',\n        floor: true,\n        matIndex: '76',\n        selectable: true,\n        connectsPath: true,\n        mapSurfaceColor: '#B8BBB8',\n    })\n    static readonly RUBBLE1 = new SurfaceType({\n        name: 'rubble 1',\n        floor: true,\n        matIndex: '13',\n        selectable: true,\n        canCarryFence: true,\n        cursorFulfiller: Cursor.Pointer_Clear,\n        mapSurfaceColor: '#280048',\n    })\n    static readonly RUBBLE2 = new SurfaceType({\n        name: 'rubble 2',\n        floor: true,\n        matIndex: '12',\n        selectable: true,\n        canCarryFence: true,\n        cursorFulfiller: Cursor.Pointer_Clear,\n        mapSurfaceColor: '#280048',\n    })\n    static readonly RUBBLE3 = new SurfaceType({\n        name: 'rubble 3',\n        floor: true,\n        matIndex: '11',\n        selectable: true,\n        canCarryFence: true,\n        cursorFulfiller: Cursor.Pointer_Clear,\n        mapSurfaceColor: '#280048',\n    })\n    static readonly RUBBLE4 = new SurfaceType({\n        name: 'rubble 4',\n        floor: true,\n        matIndex: '10',\n        selectable: true,\n        canCarryFence: true,\n        cursorFulfiller: Cursor.Pointer_Clear,\n        mapSurfaceColor: '#280048',\n    })\n\n    static getByNum(typeNum: number) {\n        switch (typeNum) {\n            case 0:\n                return SurfaceType.POWER_PATH_BUILDING\n            case 1:\n                return SurfaceType.SOLID_ROCK\n            case 2:\n                return SurfaceType.HARD_ROCK\n            case 3:\n                return SurfaceType.LOOSE_ROCK\n            case 4:\n            case 5: // soil(5) was removed pre-release, so replace it with dirt(4)\n                return SurfaceType.DIRT\n            case 6:\n                return SurfaceType.LAVA\n            case 8:\n                return SurfaceType.ORE_SEAM\n            case 9:\n                return SurfaceType.WATER\n            case 10:\n                return SurfaceType.CRYSTAL_SEAM\n            case 11:\n                return SurfaceType.RECHARGE_SEAM\n            case 30:\n            case 40:\n                return SurfaceType.SLUG_HOLE\n            case 100:\n                return SurfaceType.RUBBLE4\n            case 101:\n                return SurfaceType.RUBBLE3\n            case 102:\n                return SurfaceType.RUBBLE2\n            case 103:\n                return SurfaceType.RUBBLE1\n            default:\n                console.error('Unexpected surface type num: ' + typeNum)\n                return SurfaceType.SOLID_ROCK\n        }\n    }\n}\n","export enum RaiderTool {\n    NONE,\n    DRILL,\n    HAMMER,\n    SHOVEL,\n    SPANNER,\n    FREEZERGUN,\n    LASER,\n    PUSHERGUN,\n    BIRDSCARER,\n}\n\nexport const AllRaiderTools: RaiderTool[] = [\n    RaiderTool.DRILL,\n    RaiderTool.HAMMER,\n    RaiderTool.SHOVEL,\n    RaiderTool.SPANNER,\n    RaiderTool.FREEZERGUN,\n    RaiderTool.LASER,\n    RaiderTool.PUSHERGUN,\n    RaiderTool.BIRDSCARER,\n]\n","import { EntityType } from '../EntityType'\n\nexport enum RaiderTraining {\n    NONE,\n    DRIVER,\n    ENGINEER,\n    GEOLOGIST,\n    PILOT,\n    SAILOR,\n    DEMOLITION,\n}\n\nexport const AllRaiderTrainings: RaiderTraining[] = [\n    RaiderTraining.DRIVER,\n    RaiderTraining.ENGINEER,\n    RaiderTraining.GEOLOGIST,\n    RaiderTraining.PILOT,\n    RaiderTraining.SAILOR,\n    RaiderTraining.DEMOLITION,\n]\n\nexport const RaiderTrainingSites: EntityType[] = []\nRaiderTrainingSites[RaiderTraining.DRIVER] = EntityType.BARRACKS\nRaiderTrainingSites[RaiderTraining.DRIVER] = EntityType.BARRACKS\nRaiderTrainingSites[RaiderTraining.ENGINEER] = EntityType.UPGRADE\nRaiderTrainingSites[RaiderTraining.GEOLOGIST] = EntityType.GEODOME\nRaiderTrainingSites[RaiderTraining.PILOT] = EntityType.TELEPORT_PAD\nRaiderTrainingSites[RaiderTraining.SAILOR] = EntityType.DOCKS\nRaiderTrainingSites[RaiderTraining.DEMOLITION] = EntityType.TOOLSTATION\n\nexport const RaiderTrainingStatsProperty: string[] = []\nRaiderTrainingStatsProperty[RaiderTraining.DRIVER] = 'TrainDriver'\nRaiderTrainingStatsProperty[RaiderTraining.ENGINEER] = 'TrainRepair'\nRaiderTrainingStatsProperty[RaiderTraining.GEOLOGIST] = 'TrainScanner'\nRaiderTrainingStatsProperty[RaiderTraining.PILOT] = 'TrainPilot'\nRaiderTrainingStatsProperty[RaiderTraining.SAILOR] = 'TrainSailor'\nRaiderTrainingStatsProperty[RaiderTraining.DEMOLITION] = 'TrainDynamite'\n","import { BaseButtonCfg } from './BaseButtonCfg'\n\nexport class ButtonCfg extends BaseButtonCfg {\n\n    constructor(cfgValue: any) {\n        super()\n        if (cfgValue.length === 9) {\n            [this.buttonType, this.normalFile, this.highlightFile, this.pressedFile, this.relX, this.relY, this.width, this.height, this.tooltip] = cfgValue\n        } else {\n            throw 'Invalid number of arguments (' + cfgValue.length + ') given for button configuration expected 9 or 5'\n        }\n    }\n\n}\n","import { BaseConfig } from '../../cfg/BaseConfig'\nimport { ButtonCfg } from '../../cfg/ButtonCfg'\n\nexport class ButtonInfoDockCfg extends BaseConfig {\n\n    panelButtonInfoDockGoto: ButtonCfg = null\n    panelButtonInfoDockClose: ButtonCfg = null\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n    parseValue(lCfgKeyName: string, cfgValue: any): any {\n        return new ButtonCfg(cfgValue)\n    }\n\n}\n","import { createContext } from '../../core/ImageHelper'\nimport { EventKey } from '../../event/EventKeyEnum'\nimport { UpdateRadarSurface, UpdateRadarTerrain } from '../../event/LocalEvents'\nimport { BaseElement } from '../base/BaseElement'\nimport { Panel } from '../base/Panel'\nimport { MapSurfaceRect } from './MapSurfaceRect'\n\nexport class MapPanel extends Panel {\n\n    context: SpriteContext\n    offsetX: number = 0\n    offsetY: number = 0\n    surfaceRectSize: number = 10\n    surfaceRectMargin: number = 1\n    surfaceMap: MapSurfaceRect[][] = []\n\n    constructor(parent: BaseElement) {\n        super(parent, null)\n        this.width = 152\n        this.height = 149\n        this.context = createContext(this.width, this.height)\n        this.img = this.context.canvas\n        this.relX = this.xIn = this.xOut = 15\n        this.relY = this.yIn = this.yOut = 15\n        this.onClick = (cx: number, cy: number) => {\n            const mapX = cx - this.x\n            const mapY = cy - this.y\n            this.offsetX += mapX - this.width / 2\n            this.offsetY += mapY - this.height / 2\n            this.redrawMap(true)\n        }\n        this.registerEventListener(EventKey.UPDATE_RADAR_TERRAIN, (event: UpdateRadarTerrain) => {\n            this.surfaceMap = []\n            event.surfaces.forEach((s) => {\n                this.surfaceMap[s.x] = this.surfaceMap[s.x] || []\n                this.surfaceMap[s.x][s.y] = s\n            })\n            this.offsetX = event.tileX * this.surfaceRectSize - this.width / 2\n            this.offsetY = event.tileY * this.surfaceRectSize - this.height / 2\n            this.redrawMap()\n        })\n        this.registerEventListener(EventKey.UPDATE_RADAR_SURFACE, (event: UpdateRadarSurface) => {\n            const s = event.surfaceRect\n            this.surfaceMap[s.x] = this.surfaceMap[s.x] || []\n            this.surfaceMap[s.x][s.y] = s\n            this.redrawSurface(s)\n            this.notifyRedraw()\n        })\n    }\n\n    redrawMap(forceRedraw: boolean = false) {\n        this.context.fillStyle = '#000'\n        this.context.fillRect(0, 0, this.img.width, this.img.height)\n        this.surfaceMap.forEach((r) => r.forEach((s) => this.redrawSurface(s)))\n        if (forceRedraw) this.notifyRedraw()\n    }\n\n    redrawSurface(surfaceRect: MapSurfaceRect) {\n        const surfaceX = Math.round(surfaceRect.x * this.surfaceRectSize + this.surfaceRectMargin - this.offsetX)\n        const surfaceY = Math.round(surfaceRect.y * this.surfaceRectSize + this.surfaceRectMargin - this.offsetY)\n        if (surfaceRect.borderColor) {\n            this.context.fillStyle = surfaceRect.borderColor\n            this.context.fillRect(surfaceX, surfaceY, this.surfaceRectSize - this.surfaceRectMargin, this.surfaceRectSize - this.surfaceRectMargin)\n            this.context.fillStyle = surfaceRect.surfaceColor\n            this.context.fillRect(surfaceX + 1, surfaceY + 1, this.surfaceRectSize - this.surfaceRectMargin - 2, this.surfaceRectSize - this.surfaceRectMargin - 2)\n        } else {\n            this.context.fillStyle = surfaceRect.surfaceColor\n            this.context.fillRect(surfaceX, surfaceY, this.surfaceRectSize - this.surfaceRectMargin, this.surfaceRectSize - this.surfaceRectMargin)\n        }\n    }\n\n}\n","import { BaseConfig } from '../../cfg/BaseConfig'\nimport { ButtonCfg } from '../../cfg/ButtonCfg'\nimport { PanelCfg } from '../../cfg/PanelCfg'\nimport { BaseElement } from '../base/BaseElement'\nimport { Button } from '../base/Button'\nimport { Panel } from '../base/Panel'\nimport { MapPanel } from './MapPanel'\n\nexport class RadarPanel extends Panel {\n\n    map: MapPanel\n    fill: Panel\n    overlay: Panel\n    btnToggle: Button\n    btnMap: Button\n    btnTagged: Button\n\n    constructor(parent: BaseElement, panelCfg: PanelCfg, panelFillCfg: PanelCfg, panelOverlayCfg: PanelCfg, buttonsCfg: ButtonRadarCfg) {\n        super(parent, panelCfg)\n        this.map = this.addChild(new MapPanel(this))\n        this.fill = this.addChild(new Panel(this, panelFillCfg))\n        this.fill.xIn = 0\n        this.fill.yIn = 0\n        this.fill.xOut = 0\n        this.fill.yOut = 0\n        this.fill.updatePosition()\n        this.overlay = this.addChild(new Panel(this, panelOverlayCfg))\n        this.btnToggle = this.addChild(new Button(this, buttonsCfg.panelButtonRadarToggle))\n        this.btnToggle.onClick = () => this.toggleState()\n        this.btnMap = this.addChild(new Button(this, buttonsCfg.panelButtonRadarMapView))\n        this.btnMap.onClick = () => {\n            this.fill.hide()\n            this.overlay.hide()\n            this.map.show()\n        }\n        this.btnTagged = this.addChild(new Button(this, buttonsCfg.panelButtonRadarTaggedObjectView))\n        this.btnTagged.onClick = () => {\n            this.fill.show()\n            // this.overlay.show() // TODO only show overlay, when entity selected\n            this.map.hide()\n        }\n    }\n\n    reset() {\n        super.reset()\n        this.map.show()\n        this.fill.hide()\n        this.overlay.hide()\n    }\n\n    onRedraw(context: SpriteContext) {\n        if (this.hidden) return\n        this.map.onRedraw(context)\n        this.map.hidden = true // TODO refactor workaround add z layering to panels\n        super.onRedraw(context)\n        this.map.hidden = false\n    }\n\n}\n\nexport class ButtonRadarCfg extends BaseConfig {\n\n    panelButtonRadarToggle: ButtonCfg = null\n    panelButtonRadarTaggedObjectView: ButtonCfg = null\n    panelButtonRadarZoomIn: ButtonCfg = null\n    panelButtonRadarZoomOut: ButtonCfg = null\n    panelButtonRadarMapView: ButtonCfg = null\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n    parseValue(lCfgKeyName: string, cfgValue: any): any {\n        return new ButtonCfg(cfgValue)\n    }\n\n}\n","import { ButtonCfg } from '../../cfg/ButtonCfg'\nimport { BaseElement } from '../base/BaseElement'\n\nexport class SideBarLabel extends BaseElement {\n\n    tooltip: string\n    label: string\n\n    constructor(parent: BaseElement, btnCfg: ButtonCfg) {\n        super(parent)\n        this.relX = btnCfg.relX\n        this.relY = btnCfg.relY\n        this.width = btnCfg.width\n        this.height = btnCfg.height\n        this.tooltip = btnCfg.tooltip\n        this.label = '0'\n        this.updatePosition()\n    }\n\n    reset() {\n        super.reset()\n        this.label = '0'\n    }\n\n    onRedraw(context: SpriteContext) {\n        if (this.hidden) return\n        context.textAlign = 'center'\n        context.font = 'bold 10px Arial'\n        context.fillStyle = '#fff'\n        context.fillText(this.label, this.x + this.width / 2, this.y + this.height - 2)\n        super.onRedraw(context)\n    }\n\n}\n\n","import { BaseConfig } from '../../cfg/BaseConfig'\nimport { ButtonCfg } from '../../cfg/ButtonCfg'\nimport { PanelCfg } from '../../cfg/PanelCfg'\nimport { EventKey } from '../../event/EventKeyEnum'\nimport { MaterialAmountChanged } from '../../event/WorldEvents'\nimport { BaseElement } from '../base/BaseElement'\nimport { Panel } from '../base/Panel'\nimport { GuiResourceCache } from '../GuiResourceCache'\nimport { SideBarLabel } from './SideBarLabel'\n\nexport class PanelCrystalSideBar extends Panel {\n\n    labelOre: SideBarLabel\n    labelCrystal: SideBarLabel\n    imgNoCrystal: SpriteImage\n    imgSmallCrystal: SpriteImage\n    imgUsedCrystal: SpriteImage\n    imgOre: SpriteImage\n\n    numCrystal: number = 0\n    usedCrystals: number = 0\n    neededCrystals: number = 0\n    totalOre: number = 0\n\n    constructor(parent: BaseElement, panelCfg: PanelCfg, buttonsCfg: ButtonCrystalSideBarCfg) {\n        super(parent, panelCfg)\n        this.labelOre = this.addChild(new SideBarLabel(this, buttonsCfg.panelButtonCrystalSideBarOre))\n        this.labelCrystal = this.addChild(new SideBarLabel(this, buttonsCfg.panelButtonCrystalSideBarCrystals))\n        this.imgNoCrystal = GuiResourceCache.getImage('Interface/RightPanel/NoSmallCrystal.bmp')\n        this.imgSmallCrystal = GuiResourceCache.getImage('Interface/RightPanel/SmallCrystal.bmp')\n        this.imgUsedCrystal = GuiResourceCache.getImage('Interface/RightPanel/UsedCrystal.bmp')\n        this.imgOre = GuiResourceCache.getImage('Interface/RightPanel/CrystalSideBar_Ore.bmp')\n        this.registerEventListener(EventKey.MATERIAL_AMOUNT_CHANGED, (event: MaterialAmountChanged) => {\n            this.labelOre.label = event.totalOre.toString()\n            this.labelCrystal.label = event.numCrystal.toString()\n            this.numCrystal = event.numCrystal\n            this.usedCrystals = event.usedCrystal\n            this.neededCrystals = event.neededCrystal\n            this.totalOre = event.totalOre\n            this.notifyRedraw()\n        })\n    }\n\n    reset() {\n        super.reset()\n        this.numCrystal = 0\n        this.usedCrystals = 0\n        this.neededCrystals = 0\n        this.totalOre = 0\n    }\n\n    onRedraw(context: SpriteContext) {\n        super.onRedraw(context)\n        // draw crystals\n        let curX = this.x + this.img.width - 8\n        let curY = this.y + this.img.height - 34\n        for (let c = 0; (this.neededCrystals < 1 || c < Math.max(this.neededCrystals, this.numCrystal)) && curY >= Math.max(this.imgNoCrystal.height, this.imgSmallCrystal.height, this.imgUsedCrystal.height); c++) {\n            let imgCrystal = this.imgNoCrystal\n            if (this.usedCrystals > c) {\n                imgCrystal = this.imgUsedCrystal\n            } else if (this.numCrystal > c) {\n                imgCrystal = this.imgSmallCrystal\n            }\n            curY -= imgCrystal.height\n            context.drawImage(imgCrystal, curX - imgCrystal.width / 2, curY)\n        }\n        // draw ores\n        curX = this.x + this.img.width - 21\n        curY = this.y + this.img.height - 42\n        for (let i = 0; i < this.totalOre && curY >= this.imgOre.height; ++i) {\n            curY -= this.imgOre.height\n            context.drawImage(this.imgOre, curX - this.imgOre.width / 2, curY)\n        }\n    }\n\n}\n\nexport class ButtonCrystalSideBarCfg extends BaseConfig {\n\n    panelButtonCrystalSideBarOre: ButtonCfg = null\n    panelButtonCrystalSideBarCrystals: ButtonCfg = null\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n    parseValue(lCfgKeyName: string, cfgValue: any): any {\n        return new ButtonCfg(cfgValue)\n    }\n\n}\n","import { BaseConfig } from '../../cfg/BaseConfig'\nimport { ButtonCfg } from '../../cfg/ButtonCfg'\n\nexport class ButtonPriorityListCfg extends BaseConfig {\n\n    panelButtonPriorityListDisable: ButtonCfg[] = []\n    panelButtonPriorityListUpOne: ButtonCfg[] = []\n    panelButtonPriorityListClose: ButtonCfg = null // not used in the game\n    panelButtonPriorityListReset: ButtonCfg = null\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n    assignValue(objKey, lCfgKeyName, cfgValue): boolean {\n        if (lCfgKeyName.match(/panelButtonPriorityListDisable\\d+/i)) {\n            this.panelButtonPriorityListDisable.push(this.parseValue(lCfgKeyName, cfgValue))\n            return true\n        } else if (lCfgKeyName.match(/panelButtonPriorityListUpOne\\d+/i)) {\n            this.panelButtonPriorityListUpOne.push(this.parseValue(lCfgKeyName, cfgValue))\n            return true\n        } else {\n            return super.assignValue(objKey, lCfgKeyName, cfgValue)\n        }\n    }\n\n    parseValue(lCfgKeyName: string, cfgValue: any): any {\n        return new ButtonCfg(cfgValue)\n    }\n\n}\n","import { BaseConfig } from '../../cfg/BaseConfig'\nimport { ButtonCfg } from '../../cfg/ButtonCfg'\n\nexport class ButtonTopCfg extends BaseConfig {\n\n    panelButtonTopPanelCallToArms: ButtonCfg = null\n    panelButtonTopPanelOptions: ButtonCfg = null\n    panelButtonTopPanelPriorities: ButtonCfg = null\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n    parseValue(lCfgKeyName: string, cfgValue: any): any {\n        return new ButtonCfg(cfgValue)\n    }\n\n}\n","import { BaseConfig } from './BaseConfig'\nimport { ButtonCfg } from './ButtonCfg'\n\nexport class ButtonCameraControlCfg extends BaseConfig {\n\n    panelButtonCameraControlZoomIn: ButtonCfg = null\n    panelButtonCameraControlZoomOut: ButtonCfg = null\n    panelButtonCameraControlCycleBuildings: ButtonCfg = null\n    panelButtonCameraControlRotate: ButtonCfg = null\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n    parseValue(lCfgKeyName: string, cfgValue: any): any {\n        return new ButtonCfg(cfgValue)\n    }\n\n}\n","import { BaseConfig } from './BaseConfig'\nimport { ButtonCfg } from './ButtonCfg'\n\nexport class ButtonInformationCfg extends BaseConfig {\n\n    panelButtonInformationToggle: ButtonCfg = null\n    panelButtonInformationFunction: ButtonCfg = null\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n    parseValue(lCfgKeyName: string, cfgValue: any): any {\n        return new ButtonCfg(cfgValue)\n    }\n\n}\n","import { ButtonInfoDockCfg } from '../gui/infodock/ButtonInfoDockCfg'\nimport { ButtonRadarCfg } from '../gui/radar/RadarPanel'\nimport { ButtonCrystalSideBarCfg } from '../gui/sidebar/PanelCrystalSideBar'\nimport { ButtonPriorityListCfg } from '../gui/toppanel/ButtonPriorityListCfg'\nimport { ButtonTopCfg } from '../gui/toppanel/ButtonTopCfg'\nimport { BaseConfig } from './BaseConfig'\nimport { ButtonCameraControlCfg } from './ButtonCameraControlCfg'\nimport { ButtonInformationCfg } from './ButtonInformationCfg'\n\nexport class ButtonsCfg extends BaseConfig {\n\n    panelRadar: ButtonRadarCfg = null\n    panelCrystalSideBar: ButtonCrystalSideBarCfg = null\n    panelTopPanel: ButtonTopCfg = null\n    panelInformation: ButtonInformationCfg = null\n    panelPriorityList: ButtonPriorityListCfg = null\n    panelCameraControl: ButtonCameraControlCfg = null\n    panelInfoDock: ButtonInfoDockCfg = null\n    panelEncyclopedia: any = null // not used in the game\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n    parseValue(lCfgKeyName: string, cfgValue: any): any {\n        const btnCfgValue = {}\n        cfgValue.forEach(arr => btnCfgValue[arr[0]] = arr)\n        if (lCfgKeyName === 'panelRadar'.toLowerCase()) {\n            return new ButtonRadarCfg(btnCfgValue)\n        } else if (lCfgKeyName === 'panelCrystalSideBar'.toLowerCase()) {\n            return new ButtonCrystalSideBarCfg(btnCfgValue)\n        } else if (lCfgKeyName === 'panelTopPanel'.toLowerCase()) {\n            return new ButtonTopCfg(btnCfgValue)\n        } else if (lCfgKeyName === 'panelInformation'.toLowerCase()) {\n            return new ButtonInformationCfg(btnCfgValue)\n        } else if (lCfgKeyName === 'panelPriorityList'.toLowerCase()) {\n            return new ButtonPriorityListCfg(btnCfgValue)\n        } else if (lCfgKeyName === 'panelCameraControl'.toLowerCase()) {\n            return new ButtonCameraControlCfg(btnCfgValue)\n        } else if (lCfgKeyName === 'panelInfoDock'.toLowerCase()) {\n            return new ButtonInfoDockCfg(btnCfgValue)\n        } else if (lCfgKeyName === 'panelEncyclopedia'.toLowerCase()) {\n            return null // not used in the game\n        } else {\n            return btnCfgValue\n        }\n    }\n\n}\n","import { BaseConfig } from './BaseConfig'\nimport { PanelCfg } from './PanelCfg'\n\nexport class PanelsCfg extends BaseConfig {\n\n    panelRadar: PanelCfg = null\n    panelRadarFill: PanelCfg = null\n    panelRadarOverlay: PanelCfg = null\n    panelMessages: PanelCfg = null\n    panelMessagesSide: PanelCfg = null\n    panelCrystalSideBar: PanelCfg = null\n    panelTopPanel: PanelCfg = null\n    panelInformation: PanelCfg = null\n    panelPriorityList: PanelCfg = null\n    panelCameraControl: PanelCfg = null\n    panelInfoDock: PanelCfg = null\n    panelEncyclopedia: PanelCfg = null\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n    parseValue(lCfgKeyName: string, cfgValue: any): any {\n        return new PanelCfg(cfgValue)\n    }\n}\n\n","import { EntityType } from '../game/model/EntityType'\nimport { PriorityEntry } from '../game/model/job/PriorityEntry'\nimport { RaiderTool } from '../game/model/raider/RaiderTool'\nimport { RaiderTraining } from '../game/model/raider/RaiderTraining'\nimport { EventKey } from './EventKeyEnum'\nimport { LocalEvent } from './LocalEvents'\n\nexport class GuiCommand extends LocalEvent {\n}\n\nexport class CancelBuildMode extends GuiCommand {\n\n    constructor() {\n        super(EventKey.COMMAND_CANCEL_BUILD_MODE)\n    }\n\n}\n\nexport class SelectBuildMode extends GuiCommand {\n\n    entityType: EntityType\n\n    constructor(entityType: EntityType) {\n        super(EventKey.COMMAND_SELECT_BUILD_MODE)\n        this.entityType = entityType\n    }\n\n}\n\nexport class SelectedRaiderPickTool extends GuiCommand {\n\n    tool: RaiderTool\n\n    constructor(tool: RaiderTool) {\n        super(EventKey.COMMAND_PICK_TOOL)\n        this.tool = tool\n    }\n\n}\n\nexport class CreatePowerPath extends GuiCommand {\n\n    constructor() {\n        super(EventKey.COMMAND_CREATE_POWER_PATH)\n    }\n\n}\n\nexport class PlaceFence extends GuiCommand {\n\n    constructor() {\n        super(EventKey.COMMAND_PLACE_FENCE)\n    }\n\n}\n\nexport class MakeRubble extends GuiCommand {\n\n    constructor() {\n        super(EventKey.COMMAND_MAKE_RUBBLE)\n    }\n\n}\n\nexport class ChangeRaiderSpawnRequest extends GuiCommand {\n\n    increase: boolean\n\n    constructor(increase: boolean) {\n        super(EventKey.COMMAND_CHANGE_RAIDER_SPAWN_REQUEST)\n        this.increase = increase\n    }\n\n}\n\nexport class CreateClearRubbleJob extends GuiCommand {\n\n    constructor() {\n        super(EventKey.COMMAND_CREATE_CLEAR_RUBBLE_JOB)\n    }\n\n}\n\nexport class UpgradeBuilding extends GuiCommand {\n\n    constructor() {\n        super(EventKey.COMMAND_UPGRADE_BUILDING)\n    }\n\n}\n\nexport class BeamUpBuilding extends GuiCommand {\n\n    constructor() {\n        super(EventKey.COMMAND_BUILDING_BEAMUP)\n    }\n\n}\n\nexport class ChangePriorityList extends GuiCommand {\n\n    priorityList: PriorityEntry[]\n\n    constructor(priorityList: PriorityEntry[]) {\n        super(EventKey.COMMAND_CHANGE_PRIORITY_LIST)\n        this.priorityList = priorityList\n    }\n\n}\n\nexport class ChangeBuildingPowerState extends GuiCommand {\n\n    state: boolean\n\n    constructor(state: boolean) {\n        super(EventKey.COMMAND_CHANGE_BUILDING_POWER_STATE)\n        this.state = state\n    }\n\n}\n\nexport class CreateDrillJob extends GuiCommand {\n\n    constructor() {\n        super(EventKey.COMMAND_CREATE_DRILL_JOB)\n    }\n\n}\n\nexport class CreateReinforceJob extends GuiCommand {\n\n    constructor() {\n        super(EventKey.COMMAND_CREATE_REINFORCE_JOB)\n    }\n\n}\n\nexport class CreateDynamiteJob extends GuiCommand {\n\n    constructor() {\n        super(EventKey.COMMAND_CREATE_DYNAMITE_JOB)\n    }\n\n}\n\nexport class CancelSurfaceJobs extends GuiCommand {\n\n    constructor() {\n        super(EventKey.COMMAND_CANCEL_SURFACE_JOBS)\n    }\n\n}\n\nexport class RaiderEat extends GuiCommand {\n\n    constructor() {\n        super(EventKey.COMMAND_RAIDER_EAT)\n    }\n\n}\n\nexport class RaiderDrop extends GuiCommand {\n\n    constructor() {\n        super(EventKey.COMMAND_RAIDER_DROP)\n    }\n\n}\n\nexport class RaiderUpgrade extends GuiCommand {\n\n    constructor() {\n        super(EventKey.COMMAND_RAIDER_UPGRADE)\n    }\n\n}\n\nexport class RaiderBeamUp extends GuiCommand {\n\n    constructor() {\n        super(EventKey.COMMAND_RAIDER_BEAMUP)\n    }\n\n}\n\nexport class TrainRaider extends GuiCommand {\n\n    training: RaiderTraining\n\n    constructor(training: RaiderTraining) {\n        super(EventKey.COMMAND_TRAIN_RAIDER)\n        this.training = training\n    }\n\n}\n\nexport class CancelBuilding extends GuiCommand {\n\n    constructor() {\n        super(EventKey.COMMAND_CANCEL_CONSTRUCTION)\n    }\n\n}\n\nexport class RequestVehicleSpawn extends GuiCommand {\n\n    vehicle: EntityType\n\n    constructor(vehicle: EntityType) {\n        super(EventKey.COMMAND_REQUEST_VEHICLE_SPAWN)\n        this.vehicle = vehicle\n    }\n\n}\n\nexport class VehicleCallMan extends GuiCommand {\n\n    constructor() {\n        super(EventKey.COMMAND_VEHICLE_GET_MAN)\n    }\n\n}\n\nexport class VehicleBeamUp extends GuiCommand {\n\n    constructor() {\n        super(EventKey.COMMAND_VEHICLE_BEAMUP)\n    }\n\n}\n\nexport class VehicleDriverGetOut extends GuiCommand {\n\n    constructor() {\n        super(EventKey.COMMAND_VEHICLE_DRIVER_GET_OUT)\n    }\n\n}\n\nexport class CameraControl extends GuiCommand {\n\n    zoom: number\n    cycleBuilding: boolean\n    rotationIndex: number\n\n    constructor(zoom: number, cycleBuilding: boolean, rotationIndex: number) {\n        super(EventKey.COMMAND_CAMERA_CONTROL)\n        this.zoom = zoom\n        this.cycleBuilding = cycleBuilding\n        this.rotationIndex = rotationIndex\n    }\n\n}\n","import { ButtonCameraControlCfg } from '../../cfg/ButtonCameraControlCfg'\nimport { PanelCfg } from '../../cfg/PanelCfg'\nimport { CameraControl } from '../../event/GuiCommand'\nimport { BaseElement } from '../base/BaseElement'\nimport { Button } from '../base/Button'\nimport { Panel } from '../base/Panel'\n\nexport class CameraControlPanel extends Panel {\n\n    constructor(parent: BaseElement, panelCfg: PanelCfg, buttonsCfg: ButtonCameraControlCfg, panelRotationControlCfg: any) {\n        super(parent, panelCfg)\n        this.addChild(new Button(this, buttonsCfg.panelButtonCameraControlZoomIn)).onClick = () => {\n            this.publishEvent(new CameraControl(-1, false, -1))\n        }\n        this.addChild(new Button(this, buttonsCfg.panelButtonCameraControlZoomOut)).onClick = () => {\n            this.publishEvent(new CameraControl(1, false, -1))\n        }\n        this.addChild(new Button(this, buttonsCfg.panelButtonCameraControlCycleBuildings)).onClick = () => {\n            this.publishEvent(new CameraControl(0, true, -1))\n        }\n        ['LeftImage', 'UpImage', 'RightImage', 'DownImage'].forEach((name, index) => {\n            const cfg = panelRotationControlCfg[name]\n            this.addChild(new Button(this, {\n                highlightFile: cfg[0],\n                relX: cfg[1] - this.relX,\n                relY: cfg[2] - this.relY,\n            })).onClick = () => {\n                this.publishEvent(new CameraControl(0, false, index))\n            }\n        })\n    }\n\n}\n","import { BaseButtonCfg } from './BaseButtonCfg'\n\nexport class InfoButtonCfg extends BaseButtonCfg {\n\n    constructor(buttonImageFilename: string) {\n        super()\n        this.normalFile = buttonImageFilename\n        this.highlightFile = buttonImageFilename\n        this.pressedFile = buttonImageFilename\n        this.disabledFile = buttonImageFilename\n        this.relX = 0\n        this.relY = 0\n    }\n\n}\n","import { InfoButtonCfg } from '../../cfg/InfoButtonCfg'\nimport { clearTimeoutSafe } from '../../core/Util'\nimport { EventKey } from '../../event/EventKeyEnum'\nimport { WorldEvent } from '../../event/WorldEvents'\nimport { WorldLocationEvent } from '../../event/WorldLocationEvent'\nimport { NATIVE_FRAMERATE } from '../../params'\nimport { Button } from '../base/Button'\nimport { InfoDockPanel } from './InfoDockPanel'\nimport { InfoMessagesEntryConfig } from './InfoMessagesEntryConfig'\n\nexport class InfoDockButton extends Button {\n\n    messages: WorldEvent[] = [] // newest message first\n    text: string = null\n    animationTimeout = null\n    animationSpeedX = 0.5\n    animationSpeedY = 1\n\n    constructor(parent: InfoDockPanel, infoMessagesEntryConfig: InfoMessagesEntryConfig, eventKey: EventKey) {\n        super(parent, new InfoButtonCfg(infoMessagesEntryConfig.buttonImageFilename))\n        this.text = infoMessagesEntryConfig.message\n        this.hidden = true\n\n        this.onClick = () => {\n            if (this.messages.length < 1) return\n            parent.buttonClicked(this)\n        }\n\n        this.registerEventListener(eventKey, (event: WorldLocationEvent) => {\n            this.hidden = false\n            while (this.messages.length >= 9) this.messages.pop()\n            this.messages.unshift(event)\n            parent.showButton(this)\n        })\n    }\n\n    reset() {\n        super.reset()\n        this.animationTimeout = clearTimeoutSafe(this.animationTimeout)\n        this.hidden = true\n        this.messages = []\n    }\n\n    slideToTarget(targetX: number, targetY: number): Promise<void> {\n        return new Promise<void>((resolve) => this.updateAnimation(targetX, targetY, resolve))\n    }\n\n    private updateAnimation(targetX: number, targetY: number, onDone: () => any) { // TODO refactor: almost equal with code for Panel\n        const diffX = targetX - this.relX\n        const diffY = targetY - this.relY\n        if (Math.abs(diffX) <= this.animationSpeedX && Math.abs(diffY) <= this.animationSpeedY) {\n            this.relX = targetX\n            this.relY = targetY\n            this.animationTimeout = null\n            if (onDone) onDone()\n        } else {\n            this.relX += Math.round(Math.sign(diffX) * Math.sqrt(Math.abs(diffX)) * this.animationSpeedX)\n            this.relY += Math.round(Math.sign(diffY) * Math.sqrt(Math.abs(diffY)) * this.animationSpeedY)\n            const that = this\n            this.animationTimeout = setTimeout(() => that.updateAnimation(targetX, targetY, onDone), 1000 / NATIVE_FRAMERATE)\n        }\n        this.updatePosition()\n        this.notifyRedraw()\n    }\n\n    onRedraw(context: SpriteContext) {\n        super.onRedraw(context)\n        if (this.hidden) return\n        context.textAlign = 'left'\n        context.font = 'bold 10px Arial'\n        context.fillStyle = '#fff'\n        context.fillText(this.messages.length.toString(), this.x + 2, this.y + this.height / 2 + 2)\n    }\n\n}\n","import { PanelCfg } from '../../cfg/PanelCfg'\nimport { EventKey } from '../../event/EventKeyEnum'\nimport { LandslideEvent } from '../../event/WorldLocationEvent'\nimport { BaseElement } from '../base/BaseElement'\nimport { Button } from '../base/Button'\nimport { Panel } from '../base/Panel'\nimport { ButtonInfoDockCfg } from './ButtonInfoDockCfg'\nimport { InfoDockButton } from './InfoDockButton'\nimport { InfoMessagesConfig } from './InfoMessagesConfig'\nimport { InformationPanel } from './InformationPanel'\n\nexport class InfoDockPanel extends Panel {\n\n    stackButtons: InfoDockButton[] = []\n    informationPanel: InformationPanel = null\n\n    constructor(parent: BaseElement, panelCfg: PanelCfg, buttonsCfg: ButtonInfoDockCfg, infoMessagesConfig: InfoMessagesConfig, informationPanel: InformationPanel) {\n        super(parent, panelCfg)\n        this.informationPanel = informationPanel\n        this.addChild(new Button(this, buttonsCfg.panelButtonInfoDockGoto)).onClick = () => this.gotoLatestMessage()\n        this.addChild(new Button(this, buttonsCfg.panelButtonInfoDockClose)).onClick = () => this.dropLatestMessage()\n\n        this.addChild(new InfoDockButton(this, infoMessagesConfig.infoGenericDeath, EventKey.LOCATION_DEATH))\n        this.addChild(new InfoDockButton(this, infoMessagesConfig.infoGenericMonster, EventKey.LOCATION_MONSTER))\n        this.addChild(new InfoDockButton(this, infoMessagesConfig.infoCrystalFound, EventKey.LOCATION_CRYSTAL_FOUND))\n        this.addChild(new InfoDockButton(this, infoMessagesConfig.infoUnderAttack, EventKey.LOCATION_UNDER_ATTACK))\n        this.addChild(new InfoDockButton(this, infoMessagesConfig.infoLandslide, EventKey.LOCATION_LANDSLIDE))\n        this.addChild(new InfoDockButton(this, infoMessagesConfig.infoPowerDrain, EventKey.LOCATION_POWER_DRAIN))\n        this.addChild(new InfoDockButton(this, infoMessagesConfig.infoSlugEmerge, EventKey.LOCATION_SLUG_EMERGE))\n        this.addChild(new InfoDockButton(this, infoMessagesConfig.infoFoundMinifigure, EventKey.LOCATION_RAIDER_DISCOVERED))\n    }\n\n    reset() {\n        super.reset()\n        this.stackButtons = []\n    }\n\n    private gotoLatestMessage() {\n        if (this.stackButtons.length < 1) return\n        const btn = this.stackButtons[0]\n        if (btn.messages.length < 1) return\n        const msg = btn.messages[0] as LandslideEvent\n        console.log('TODO force move camera to', msg.location) // TODO force move camera\n    }\n\n    private dropLatestMessage() {\n        if (this.stackButtons.length < 1) return\n        const button = this.stackButtons[0]\n        if (button.messages.length < 1) return\n        button.messages.shift()\n        if (button.messages.length < 1) {\n            button.hidden = true\n            this.informationPanel.setMovedIn(true)\n            this.stackButtons.splice(this.stackButtons.indexOf(button), 1)\n            this.slideStackIntoPosition().then()\n        }\n        button.notifyRedraw()\n    }\n\n    showButton(button: InfoDockButton) {\n        if (this.stackButtons.includes(button)) {\n            button.notifyRedraw()\n        } else {\n            this.slideInButton(button)\n        }\n    }\n\n    private slideInButton(button: InfoDockButton) {\n        this.stackButtons.forEach(btn => btn.disabled = true)\n        const targetY = -this.stackButtons.map(b => b.height).reduce((prev, cur) => prev + cur, 0)\n        this.stackButtons.push(button)\n        button.relX = -button.width\n        button.relY = targetY - button.height\n        button.updatePosition()\n        button.slideToTarget(0, targetY).then(() => this.stackButtons.forEach(btn => btn.disabled = false))\n    }\n\n    buttonClicked(button: InfoDockButton) {\n        if (button !== this.stackButtons[0]) {\n            this.pushFirst(button)\n        } else {\n            this.informationPanel.setText(button.text)\n            this.informationPanel.toggleState()\n        }\n    }\n\n    private pushFirst(button: InfoDockButton) {\n        this.stackButtons.splice(this.stackButtons.indexOf(button), 1)\n        this.stackButtons.unshift(button)\n        this.slideStackIntoPosition().then(() => {\n            this.informationPanel.setText(button.text)\n            this.informationPanel.setMovedIn(false)\n        })\n    }\n\n    private slideStackIntoPosition() {\n        this.stackButtons.forEach(btn => btn.disabled = true)\n        let relY = 0\n        const promises = this.stackButtons.map(btn => {\n            const p = btn.slideToTarget(0, relY)\n            relY -= btn.height\n            return p\n        })\n        return new Promise<void>((resolve) => {\n            Promise.all(promises).then(() => {\n                this.stackButtons.forEach(btn => btn.disabled = false)\n                resolve()\n            })\n        })\n    }\n\n}\n\n","export class InfoMessagesEntryConfig {\n\n    message: string = null\n    buttonImageFilename: string = null\n    sfx: string = null\n    timing: string = null\n    flag: string = null\n\n    constructor(cfgValue: any) {\n        [this.message, this.buttonImageFilename, this.sfx, this.timing, this.flag] = cfgValue\n        this.message = this.message.replace(/_/g, ' ')\n    }\n\n}\n","import { BaseConfig } from '../../cfg/BaseConfig'\nimport { InfoMessagesEntryConfig } from './InfoMessagesEntryConfig'\n\nexport class InfoMessagesConfig extends BaseConfig {\n\n    infoGenericDeath: InfoMessagesEntryConfig = null\n    infoGenericMonster: InfoMessagesEntryConfig = null\n    infoCrystalFound: InfoMessagesEntryConfig = null\n    infoUnderAttack: InfoMessagesEntryConfig = null\n    infoLandslide: InfoMessagesEntryConfig = null\n    infoPowerDrain: InfoMessagesEntryConfig = null\n    infoSlugEmerge: InfoMessagesEntryConfig = null\n    infoFoundMinifigure: InfoMessagesEntryConfig = null\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n    parseValue(lCfgKeyName: string, cfgValue: any): any {\n        return new InfoMessagesEntryConfig(cfgValue)\n    }\n\n}\n","import { PanelCfg } from '../../cfg/PanelCfg'\nimport { BitmapFont } from '../../core/BitmapFont'\nimport { BaseElement } from '../base/BaseElement'\nimport { Panel } from '../base/Panel'\nimport { GuiResourceCache } from '../GuiResourceCache'\n\nexport class InformationPanel extends Panel {\n\n    font: BitmapFont = null\n    textImage = null\n\n    constructor(parent: BaseElement, panelCfg: PanelCfg) {\n        super(parent, panelCfg)\n        this.font = GuiResourceCache.getDefaultFont()\n    }\n\n    setText(text?: string) {\n        this.textImage = text ? this.font.createTextImage(text, this.img.width - 80) : null\n        this.notifyRedraw()\n    }\n\n    onRedraw(context: SpriteContext) {\n        super.onRedraw(context)\n        if (this.textImage) context.drawImage(this.textImage, this.x + (this.img.width - this.textImage.width) / 2, this.y + 12)\n    }\n\n}\n","import { BaseButtonCfg } from './BaseButtonCfg'\n\nexport class IconPanelBackButtonCfg extends BaseButtonCfg {\n\n    constructor(cfgValue: any) {\n        super();\n        [this.width, this.height, this.highlightFile, this.pressedFile, this.tooltip] = cfgValue // Interface back button\n        this.relX = 4\n        this.relY = 14\n    }\n\n}\n","export function parseLabel(label: string[] | string): string {\n    const result = Array.isArray(label) ? label.join(',') : label // cfg parser does split(',')\n    return result?.replace(/_/g, ' ')\n}\n","import { BaseButtonCfg } from './BaseButtonCfg'\nimport { parseLabel } from './CfgHelper'\n\nexport class MenuItemCfg extends BaseButtonCfg {\n\n    tooltipSfx: string = null\n    tooltipDisabled: string = null\n    tooltipDisabledSfx: string = null\n    hotkey: string = null\n\n    constructor(cfgValue: any) {\n        super()\n        if (cfgValue.length === 4) {\n            [this.normalFile, this.disabledFile, this.pressedFile, this.hotkey] = cfgValue\n        } else if (cfgValue.length === 6 || cfgValue.length === 7) { // XXX 7th element is boolean, but usage unknown\n            let tooltip, tooltipDisabled\n            [this.normalFile, this.disabledFile, this.pressedFile, tooltip, tooltipDisabled, this.hotkey] = cfgValue\n            this.tooltip = parseLabel(tooltip)\n            this.tooltipDisabled = parseLabel(tooltipDisabled)\n        } else {\n            console.error('Unexpected menu item cfg value length: ' + cfgValue.length)\n        }\n        this.width = 40\n        this.height = 40\n    }\n\n}\n","import { MenuItemCfg } from '../../cfg/MenuItemCfg'\nimport { BaseElement } from '../base/BaseElement'\nimport { Button } from '../base/Button'\n\nexport class IconPanelButton extends Button {\n\n    tooltipSfx: string = null\n    tooltipDisabled: string = null\n    tooltipDisabledSfx: string = null\n    hotkey: string = null\n    isDisabled: () => boolean = () => this.disabled\n\n    constructor(parent: BaseElement, menuItemCfg: MenuItemCfg, itemKey: string, parentWidth: number, menuIndex: number) {\n        super(parent, menuItemCfg)\n        this.buttonType = itemKey\n        this.relX = parentWidth - 59\n        this.relY = 9 + this.height * menuIndex\n        this.tooltipSfx = menuItemCfg.tooltipSfx\n        this.tooltipDisabled = menuItemCfg.tooltipDisabled\n        this.tooltipDisabledSfx = menuItemCfg.tooltipDisabledSfx\n        this.hotkey = menuItemCfg.hotkey\n        this.disabled = true\n        this.onClick = () => console.log('menu item pressed: ' + this.buttonType)\n    }\n\n    reset() {\n        super.reset()\n        this.disabled = true\n        this.updateState(false)\n    }\n\n    updateState(autoRedraw: boolean = true) {\n        const targetState = !!this.isDisabled()\n        const stateChanged = this.disabled !== targetState\n        this.disabled = targetState\n        if (stateChanged && autoRedraw) this.notifyRedraw()\n        return stateChanged\n    }\n\n    drawHover(context: SpriteContext) {\n        super.drawHover(context)\n        if (!this.disabled && this.hover) {\n            context.strokeStyle = '#0f0'\n            context.lineWidth = 2\n            context.strokeRect(this.x - context.lineWidth / 2, this.y - context.lineWidth / 2, this.width + context.lineWidth - 1, this.height + context.lineWidth - 1)\n        }\n    }\n\n}\n","import { IconPanelBackButtonCfg } from '../../cfg/IconPanelBackButtonCfg'\nimport { MenuItemCfg } from '../../cfg/MenuItemCfg'\nimport { BaseElement } from '../base/BaseElement'\nimport { Button } from '../base/Button'\nimport { Panel } from '../base/Panel'\nimport { GuiResourceCache } from '../GuiResourceCache'\nimport { IconPanelButton } from './IconPanelButton'\n\nexport class IconSubPanel extends Panel {\n\n    backBtn: Button = null\n    iconPanelButtons: IconPanelButton[] = []\n\n    constructor(parent: BaseElement, numOfItems, onBackPanel: Panel = null) {\n        super(parent)\n        if (onBackPanel) {\n            const backBtnCfg = new IconPanelBackButtonCfg(GuiResourceCache.cfg('InterfaceBackButton'))\n            this.backBtn = this.addChild(new Button(this, backBtnCfg))\n            this.backBtn.onClick = () => this.toggleState(() => onBackPanel.toggleState())\n        }\n        const frameImgCfg = GuiResourceCache.cfg('InterfaceSurroundImages', numOfItems.toString())\n        // noinspection JSUnusedLocalSymbols\n        const [imgName, val1, val2, val3, val4, imgNameWoBackName, woBack1, woBack2] = frameImgCfg\n        this.img = onBackPanel ? GuiResourceCache.getImage(imgName) : GuiResourceCache.getImage(imgNameWoBackName)\n        this.xOut = -this.img.width\n    }\n\n    addMenuItem(menuItemGroup: string, itemKey: string) {\n        const menuItemCfg = new MenuItemCfg(GuiResourceCache.cfg(menuItemGroup, itemKey))\n        const menuItem = this.addChild(new IconPanelButton(this, menuItemCfg, itemKey, this.img.width, this.iconPanelButtons.length))\n        this.iconPanelButtons.push(menuItem)\n        return menuItem\n    }\n\n    toggleState(onDone: () => any = null) {\n        super.toggleState(onDone)\n        if (!this.movedIn) this.updateAllButtonStates()\n    }\n\n    updateAllButtonStates() {\n        this.iconPanelButtons.forEach((button) => button.updateState(false))\n        this.notifyRedraw()\n    }\n\n}\n","import { EventKey } from '../../event/EventKeyEnum'\nimport { BuildingsChangedEvent, RaidersChangedEvent } from '../../event/LocalEvents'\nimport { EntityType, getEntityTypeByName } from '../../game/model/EntityType'\nimport { BaseElement } from '../base/BaseElement'\nimport { Panel } from '../base/Panel'\nimport { GuiResourceCache } from '../GuiResourceCache'\nimport { IconSubPanel } from './IconSubPanel'\n\nexport abstract class DependencyCheckPanel extends IconSubPanel {\n\n    hasRaider: boolean = false\n    usableBuildingsByTypeAndLevel: Map<EntityType, Map<number, number>> = new Map()\n\n    protected constructor(parent: BaseElement, numOfItems, onBackPanel: Panel) {\n        super(parent, numOfItems, onBackPanel)\n        this.registerEventListener(EventKey.RAIDERS_CHANGED, (event: RaidersChangedEvent) => {\n            this.hasRaider = event.numRaiders > 0\n            this.updateAllButtonStates()\n        })\n        this.registerEventListener(EventKey.BUILDINGS_CHANGED, (event: BuildingsChangedEvent) => {\n            this.usableBuildingsByTypeAndLevel = event.usableBuildingsByTypeAndLevel\n            this.updateAllButtonStates()\n        })\n    }\n\n    reset() {\n        super.reset()\n        this.hasRaider = false\n        this.usableBuildingsByTypeAndLevel = new Map()\n    }\n\n    protected addDependencyMenuItem(itemKey: string, entityType: EntityType, onClick: (entityType: EntityType) => any) {\n        const item = super.addMenuItem('InterfaceBuildImages', itemKey)\n        // TODO when update state also update tooltip icons showing missing dependencies\n        const dependencies: [string, number][] = GuiResourceCache.cfg('Dependencies', 'AlwaysCheck:' + itemKey)\n        item.isDisabled = () => dependencies.some((d) => !this.checkDependency(d))\n        item.onClick = () => onClick(entityType)\n        return item\n    }\n\n    private checkDependency(dependency: [string, number]) {\n        const type = getEntityTypeByName(dependency[0])\n        const minLevel = dependency[1]\n        if (type === EntityType.PILOT) {\n            return this.hasRaider\n        } else {\n            const buildingsByLevel = this.usableBuildingsByTypeAndLevel.get(type)\n            let result = false\n            buildingsByLevel?.forEach((quantity, level) => {\n                if (level >= minLevel) result = result || quantity > 0\n            })\n            return result\n        }\n    }\n\n}\n","import { CancelBuildMode, SelectBuildMode } from '../../event/GuiCommand'\nimport { EntityType } from '../../game/model/EntityType'\nimport { BaseElement } from '../base/BaseElement'\nimport { Panel } from '../base/Panel'\nimport { DependencyCheckPanel } from './DependencyCheckPanel'\n\nexport class BuildingPanel extends DependencyCheckPanel {\n\n    constructor(parent: BaseElement, onBackPanel: Panel) {\n        super(parent, 10, onBackPanel)\n        this.backBtn.onClick = () => {\n            this.publishEvent(new CancelBuildMode())\n            this.toggleState(() => onBackPanel.toggleState())\n        }\n        this.addBuildMenuItem('Toolstation', EntityType.TOOLSTATION)\n        this.addBuildMenuItem('TeleportPad', EntityType.TELEPORT_PAD)\n        this.addBuildMenuItem('Docks', EntityType.DOCKS)\n        this.addBuildMenuItem('Powerstation', EntityType.POWER_STATION)\n        this.addBuildMenuItem('Barracks', EntityType.BARRACKS)\n        this.addBuildMenuItem('Upgrade', EntityType.UPGRADE)\n        this.addBuildMenuItem('Geo-dome', EntityType.GEODOME)\n        this.addBuildMenuItem('OreRefinery', EntityType.ORE_REFINERY)\n        this.addBuildMenuItem('Gunstation', EntityType.GUNSTATION)\n        this.addBuildMenuItem('TeleportBIG', EntityType.TELEPORT_BIG)\n    }\n\n    addBuildMenuItem(itemKey: string, entityType: EntityType) {\n        this.addDependencyMenuItem(itemKey, entityType, (entityType) => this.publishEvent(new SelectBuildMode(entityType)))\n    }\n\n}\n","import { EventKey } from '../../event/EventKeyEnum'\nimport { SelectedRaiderPickTool } from '../../event/GuiCommand'\nimport { BuildingsChangedEvent, SelectionChanged } from '../../event/LocalEvents'\nimport { EntityType } from '../../game/model/EntityType'\nimport { RaiderTool } from '../../game/model/raider/RaiderTool'\nimport { BaseElement } from '../base/BaseElement'\nimport { Panel } from '../base/Panel'\nimport { IconPanelButton } from './IconPanelButton'\nimport { IconSubPanel } from './IconSubPanel'\n\nexport class GetToolPanel extends IconSubPanel {\n\n    numUsableToolstations: number = 0\n    everyHasTool: Map<RaiderTool, boolean> = new Map()\n\n    constructor(parent: BaseElement, onBackPanel: Panel) {\n        super(parent, 8, onBackPanel)\n        this.addGetToolItem('InterfaceImages', 'Interface_MenuItem_GetDrill', RaiderTool.DRILL)\n        this.addGetToolItem('InterfaceImages', 'Interface_MenuItem_GetSpade', RaiderTool.SHOVEL)\n        this.addGetToolItem('InterfaceImages', 'Interface_MenuItem_GetHammer', RaiderTool.HAMMER)\n        this.addGetToolItem('InterfaceImages', 'Interface_MenuItem_GetSpanner', RaiderTool.SPANNER)\n        this.addGetToolItem('InterfaceImages', 'Interface_MenuItem_GetFreezerGun', RaiderTool.FREEZERGUN)\n        this.addGetToolItem('InterfaceImages', 'Interface_MenuItem_GetLaser', RaiderTool.LASER)\n        this.addGetToolItem('InterfaceImages', 'Interface_MenuItem_GetPusherGun', RaiderTool.PUSHERGUN)\n        this.addGetToolItem('InterfaceImages', 'Interface_MenuItem_GetBirdScarer', RaiderTool.BIRDSCARER)\n        this.registerEventListener(EventKey.BUILDINGS_CHANGED, (event: BuildingsChangedEvent) => {\n            this.numUsableToolstations = BuildingsChangedEvent.countUsable(event, EntityType.TOOLSTATION)\n            this.updateAllButtonStates()\n        })\n        this.registerEventListener(EventKey.SELECTION_CHANGED, (event: SelectionChanged) => {\n            this.everyHasTool = event.everyHasTool\n            this.updateAllButtonStates()\n        })\n    }\n\n    addGetToolItem(menuItemGroup: string, itemKey: string, tool: RaiderTool): IconPanelButton {\n        const menuItem = super.addMenuItem(menuItemGroup, itemKey)\n        menuItem.isDisabled = () => this.numUsableToolstations < 1 || !!this.everyHasTool.get(tool)\n        menuItem.onClick = () => this.publishEvent(new SelectedRaiderPickTool(tool))\n        return menuItem\n    }\n\n    reset() {\n        super.reset()\n        this.numUsableToolstations = 0\n        this.everyHasTool = new Map()\n    }\n\n}\n","import { EventKey } from '../../event/EventKeyEnum'\nimport { RequestedRaidersChanged } from '../../event/WorldEvents'\nimport { BaseElement } from '../base/BaseElement'\n\nexport class IconPanelButtonLabel extends BaseElement {\n\n    numRequestedRaiders: string = ''\n\n    constructor(parent: BaseElement) {\n        super(parent)\n        this.relX = 4\n        this.relY = 11\n        this.registerEventListener(EventKey.REQUESTED_RAIDERS_CHANGED, (event: RequestedRaidersChanged) => {\n            this.numRequestedRaiders = (event.numRequestedRaiders || '').toString()\n            this.notifyRedraw()\n        })\n    }\n\n    reset() {\n        super.reset()\n        this.numRequestedRaiders = ''\n    }\n\n    onRedraw(context: SpriteContext) {\n        if (this.hidden) return\n        context.textAlign = 'left'\n        context.font = 'bold 10px Arial'\n        context.fillStyle = this.disabled || (this.parent && this.parent.disabled) ? '#444' : '#fff'\n        context.fillText(this.numRequestedRaiders, this.x, this.y)\n        super.onRedraw(context)\n    }\n\n}\n","import { MenuItemCfg } from '../../cfg/MenuItemCfg'\nimport { BaseElement } from '../base/BaseElement'\nimport { GuiResourceCache } from '../GuiResourceCache'\nimport { IconPanelButton } from './IconPanelButton'\n\nexport class IconPanelToggleButton extends IconPanelButton {\n\n    toggleState: boolean = false\n    imgOnNormal: SpriteImage\n    imgOnHover: SpriteImage\n    imgOnPressed: SpriteImage\n    imgOnDisabled: SpriteImage\n\n    constructor(parent: BaseElement, menuItemOffCfg: MenuItemCfg, menuItemOnCfg: MenuItemCfg, parentWidth: number, menuIndex: number) {\n        super(parent, menuItemOffCfg, null, parentWidth, menuIndex)\n        this.imgOnNormal = GuiResourceCache.getImageOrNull(menuItemOnCfg.normalFile)\n        this.imgOnHover = GuiResourceCache.getImageOrNull(menuItemOnCfg.highlightFile)\n        this.imgOnPressed = GuiResourceCache.getImageOrNull(menuItemOnCfg.pressedFile)\n        this.imgOnDisabled = GuiResourceCache.getImageOrNull(menuItemOnCfg.disabledFile)\n    }\n\n    clicked(cx: number, cy: number) {\n        this.toggleState = !this.toggleState\n        super.clicked(cx, cy)\n    }\n\n    onRedraw(context: SpriteContext) {\n        if (this.hidden) return\n        let img = this.toggleState ? this.imgOnNormal : this.imgNormal\n        if (this.disabled) {\n            if (this.toggleState) {\n                img = this.imgOnDisabled || this.imgOnPressed || this.imgOnNormal\n            } else {\n                img = this.imgDisabled || this.imgPressed || this.imgNormal\n            }\n        } else if (this.pressed) {\n            if (this.toggleState) {\n                img = this.imgOnPressed || this.imgOnNormal\n            } else {\n                img = this.imgPressed || this.imgNormal\n            }\n        } else if (this.hover) {\n            if (this.toggleState) {\n                img = this.imgOnHover || this.imgOnNormal\n            } else {\n                img = this.imgHover || this.imgNormal\n            }\n        }\n        if (img) context.drawImage(img, this.x, this.y)\n        this.children.forEach((child) => child.onRedraw(context))\n        this.children.forEach((child) => child.drawHover(context))\n        this.children.forEach((child) => child.drawTooltip(context))\n    }\n\n}\n","import { DeselectAll } from '../../../event/LocalEvents'\nimport { BaseElement } from '../../base/BaseElement'\nimport { Panel } from '../../base/Panel'\nimport { IconSubPanel } from '../IconSubPanel'\n\nexport class SelectBasePanel extends IconSubPanel {\n\n    constructor(parent: BaseElement, numOfItems, onBackPanel: Panel) {\n        super(parent, numOfItems, onBackPanel)\n        this.backBtn.onClick = () => this.publishEvent(new DeselectAll())\n    }\n\n}\n","import { MenuItemCfg } from '../../../cfg/MenuItemCfg'\nimport { EventKey } from '../../../event/EventKeyEnum'\nimport { BeamUpBuilding, ChangeBuildingPowerState, UpgradeBuilding } from '../../../event/GuiCommand'\nimport { SelectionChanged } from '../../../event/LocalEvents'\nimport { MaterialAmountChanged } from '../../../event/WorldEvents'\nimport { BaseElement } from '../../base/BaseElement'\nimport { Panel } from '../../base/Panel'\nimport { GuiResourceCache } from '../../GuiResourceCache'\nimport { IconPanelToggleButton } from '../IconPanelToggleButton'\nimport { SelectBasePanel } from './SelectBasePanel'\n\nexport class SelectBuildingPanel extends SelectBasePanel {\n\n    usedCrystal = 0\n    numCrystal = 0\n    buildingCanUpgrade: boolean = false\n    buildingCanSwitchPower: boolean = false\n\n    constructor(parent: BaseElement, onBackPanel: Panel) {\n        super(parent, 4, onBackPanel)\n        this.addMenuItem('InterfaceImages', 'Interface_MenuItem_Repair') // TODO implement repair buildings\n        const menuItemOffCfg = new MenuItemCfg(GuiResourceCache.cfg('InterfaceImages', 'Interface_MenuItem_PowerOff'))\n        const menuItemOnCfg = new MenuItemCfg(GuiResourceCache.cfg('InterfaceImages', 'Interface_MenuItem_PowerOn'))\n        const powerSwitchItem = this.addChild(new IconPanelToggleButton(this, menuItemOffCfg, menuItemOnCfg, this.img.width, this.iconPanelButtons.length))\n        this.iconPanelButtons.push(powerSwitchItem)\n        powerSwitchItem.isDisabled = () => this.usedCrystal >= this.numCrystal || !this.buildingCanSwitchPower\n        powerSwitchItem.onClick = () => this.publishEvent(new ChangeBuildingPowerState(!powerSwitchItem.toggleState))\n        const upgradeItem = this.addMenuItem('InterfaceImages', 'Interface_MenuItem_UpgradeBuilding')\n        upgradeItem.isDisabled = () => !this.buildingCanUpgrade\n        upgradeItem.onClick = () => this.publishEvent(new UpgradeBuilding())\n        const deleteBuildingItem = this.addMenuItem('InterfaceImages', 'Interface_MenuItem_DeleteBuilding')\n        deleteBuildingItem.isDisabled = () => false\n        deleteBuildingItem.onClick = () => this.publishEvent(new BeamUpBuilding())\n        this.registerEventListener(EventKey.SELECTION_CHANGED, (event: SelectionChanged) => {\n            this.buildingCanUpgrade = event.buildingCanUpgrade\n            this.buildingCanSwitchPower = event.buildingCanSwitchPower\n            this.updateAllButtonStates()\n        })\n        this.registerEventListener(EventKey.MATERIAL_AMOUNT_CHANGED, (event: MaterialAmountChanged) => {\n            this.numCrystal = event.numCrystal\n            this.usedCrystal = event.usedCrystal\n            this.updateAllButtonStates()\n        })\n    }\n\n    reset() {\n        super.reset()\n        this.usedCrystal = 0\n        this.numCrystal = 0\n        this.buildingCanUpgrade = false\n        this.buildingCanSwitchPower = false\n    }\n\n}\n","import { EventKey } from '../../../event/EventKeyEnum'\nimport { CreatePowerPath, MakeRubble, PlaceFence } from '../../../event/GuiCommand'\nimport { SelectionChanged } from '../../../event/LocalEvents'\nimport { BaseElement } from '../../base/BaseElement'\nimport { Panel } from '../../base/Panel'\nimport { SelectBasePanel } from './SelectBasePanel'\n\nexport class SelectFloorPanel extends SelectBasePanel {\n\n    isGround: boolean = false\n    isPowerPath: boolean = false\n    canPlaceFence: boolean = false\n\n    constructor(parent: BaseElement, onBackPanel: Panel) {\n        super(parent, 3, onBackPanel)\n        const pathItem = this.addMenuItem('InterfaceImages', 'Interface_MenuItem_LayPath')\n        pathItem.onClick = () => this.publishEvent(new CreatePowerPath())\n        pathItem.isDisabled = () => !this.isGround\n        const removeItem = this.addMenuItem('InterfaceImages', 'Interface_MenuItem_RemovePath')\n        removeItem.onClick = () => this.publishEvent(new MakeRubble())\n        removeItem.isDisabled = () => !this.isPowerPath\n        const placeFenceItem = this.addMenuItem('InterfaceImages', 'Interface_MenuItem_PlaceFence')\n        placeFenceItem.isDisabled = () => !this.canPlaceFence\n        placeFenceItem.onClick = () => this.publishEvent(new PlaceFence())\n        this.registerEventListener(EventKey.SELECTION_CHANGED, (event: SelectionChanged) => {\n            this.isGround = event.isGround\n            this.isPowerPath = event.isPowerPath\n            this.canPlaceFence = event.canPlaceFence\n            this.updateAllButtonStates()\n        })\n    }\n\n    reset() {\n        super.reset()\n        this.isGround = false\n        this.isPowerPath = false\n        this.canPlaceFence = false\n    }\n\n}\n","import { EventKey } from '../../../event/EventKeyEnum'\nimport { RaiderBeamUp, RaiderDrop, RaiderEat, RaiderUpgrade } from '../../../event/GuiCommand'\nimport { BuildingsChangedEvent, SelectionChanged } from '../../../event/LocalEvents'\nimport { EntityType } from '../../../game/model/EntityType'\nimport { BaseElement } from '../../base/BaseElement'\nimport { Panel } from '../../base/Panel'\nimport { IconPanelButton } from '../IconPanelButton'\nimport { SelectBasePanel } from './SelectBasePanel'\n\nexport class SelectRaiderPanel extends SelectBasePanel {\n\n    getToolItem: IconPanelButton\n    trainItem: IconPanelButton\n\n    someCarries: boolean = false\n    everyHasMaxLevel: boolean = false\n    numToolstations: number = 0\n\n    constructor(parent: BaseElement, onBackPanel: Panel) {\n        super(parent, 10, onBackPanel)\n        const feedItem = this.addMenuItem('InterfaceImages', 'Interface_MenuItem_GoFeed')\n        feedItem.isDisabled = () => false\n        feedItem.onClick = () => this.publishEvent(new RaiderEat())\n        const unloadItem = this.addMenuItem('InterfaceImages', 'Interface_MenuItem_UnLoadMinifigure')\n        unloadItem.isDisabled = () => !this.someCarries\n        unloadItem.onClick = () => this.publishEvent(new RaiderDrop())\n        this.addMenuItem('InterfaceImages', 'Interface_MenuItem_MinifigurePickUp')\n        this.getToolItem = this.addMenuItem('InterfaceImages', 'Interface_MenuItem_GetTool')\n        this.getToolItem.isDisabled = () => false\n        this.addMenuItem('InterfaceImages', 'Interface_MenuItem_DropBirdScarer')\n        const upgradeItem = this.addMenuItem('InterfaceImages', 'Interface_MenuItem_UpgradeMan')\n        upgradeItem.isDisabled = () => this.everyHasMaxLevel || this.numToolstations < 1\n        upgradeItem.onClick = () => this.publishEvent(new RaiderUpgrade())\n        this.trainItem = this.addMenuItem('InterfaceImages', 'Interface_MenuItem_TrainSkill')\n        this.trainItem.isDisabled = () => false\n        this.addMenuItem('InterfaceImages', 'Interface_MenuItem_GotoFirstPerson')\n        this.addMenuItem('InterfaceImages', 'Interface_MenuItem_GotoSecondPerson')\n        const deleteRaiderItem = this.addMenuItem('InterfaceImages', 'Interface_MenuItem_DeleteMan')\n        deleteRaiderItem.isDisabled = () => false\n        deleteRaiderItem.onClick = () => this.publishEvent(new RaiderBeamUp())\n        this.registerEventListener(EventKey.SELECTION_CHANGED, (event: SelectionChanged) => {\n            this.someCarries = event.someCarries\n            this.everyHasMaxLevel = event.everyHasMaxLevel\n            this.updateAllButtonStates()\n        })\n        this.registerEventListener(EventKey.BUILDINGS_CHANGED, (event: BuildingsChangedEvent) => {\n            this.numToolstations = BuildingsChangedEvent.countUsable(event, EntityType.TOOLSTATION)\n            this.updateAllButtonStates()\n        })\n    }\n\n    reset() {\n        super.reset()\n        this.someCarries = false\n        this.everyHasMaxLevel = false\n        this.numToolstations = 0\n    }\n\n}\n","import { EventKey } from '../../../event/EventKeyEnum'\nimport { CreateClearRubbleJob } from '../../../event/GuiCommand'\nimport { SelectionChanged } from '../../../event/LocalEvents'\nimport { BaseElement } from '../../base/BaseElement'\nimport { Panel } from '../../base/Panel'\nimport { SelectBasePanel } from './SelectBasePanel'\n\nexport class SelectRubblePanel extends SelectBasePanel {\n\n    hasRubble: boolean = false\n    canPlaceFence: boolean = false\n\n    constructor(parent: BaseElement, onBackPanel: Panel) {\n        super(parent, 2, onBackPanel)\n        const clearRubbleItem = this.addMenuItem('InterfaceImages', 'Interface_MenuItem_ClearRubble')\n        clearRubbleItem.isDisabled = () => !this.hasRubble\n        clearRubbleItem.onClick = () => this.publishEvent(new CreateClearRubbleJob())\n        const placeFenceItem = this.addMenuItem('InterfaceImages', 'Interface_MenuItem_PlaceFence')\n        placeFenceItem.isDisabled = () => !this.canPlaceFence\n        this.registerEventListener(EventKey.SELECTION_CHANGED, (event: SelectionChanged) => {\n            this.hasRubble = event.hasRubble\n            this.canPlaceFence = event.canPlaceFence\n            this.updateAllButtonStates()\n        })\n    }\n\n    reset() {\n        super.reset()\n        this.hasRubble = false\n        this.canPlaceFence = false\n    }\n\n}\n","import { CancelBuilding } from '../../../event/GuiCommand'\nimport { BaseElement } from '../../base/BaseElement'\nimport { Panel } from '../../base/Panel'\nimport { SelectBasePanel } from './SelectBasePanel'\n\nexport class SelectSitePanel extends SelectBasePanel {\n\n    constructor(parent: BaseElement, onBackPanel: Panel) {\n        super(parent, 1, onBackPanel)\n        const cancelBuilding = this.addMenuItem('InterfaceImages', 'Interface_MenuItem_CancelConstruction')\n        cancelBuilding.isDisabled = () => false\n        cancelBuilding.onClick = () => {\n            this.publishEvent(new CancelBuilding())\n        }\n    }\n\n}\n","import { EventKey } from '../../../event/EventKeyEnum'\nimport { VehicleBeamUp, VehicleCallMan } from '../../../event/GuiCommand'\nimport { SelectionChanged } from '../../../event/LocalEvents'\nimport { BaseElement } from '../../base/BaseElement'\nimport { Panel } from '../../base/Panel'\nimport { SelectBasePanel } from './SelectBasePanel'\n\nexport class SelectVehicleEmptyPanel extends SelectBasePanel {\n\n    vehicleHasJob: boolean = false\n\n    constructor(parent: BaseElement, onBackPanel: Panel) {\n        super(parent, 2, onBackPanel)\n        const manVehicleItem = this.addMenuItem('InterfaceImages', 'Interface_MenuItem_GetIn')\n        manVehicleItem.onClick = () => this.publishEvent(new VehicleCallMan())\n        manVehicleItem.isDisabled = () => this.vehicleHasJob\n        const deleteVehicleItem = this.addMenuItem('InterfaceImages', 'Interface_MenuItem_DeleteVehicle')\n        deleteVehicleItem.isDisabled = () => false\n        deleteVehicleItem.onClick = () => this.publishEvent(new VehicleBeamUp())\n        this.registerEventListener(EventKey.SELECTION_CHANGED, (event: SelectionChanged) => {\n            this.vehicleHasJob = event.vehicleHasCallManJob\n            manVehicleItem.updateState()\n        })\n    }\n\n}\n","import { EventKey } from '../../../event/EventKeyEnum'\nimport { VehicleBeamUp, VehicleDriverGetOut } from '../../../event/GuiCommand'\nimport { SelectionChanged } from '../../../event/LocalEvents'\nimport { BaseElement } from '../../base/BaseElement'\nimport { Panel } from '../../base/Panel'\nimport { SelectBasePanel } from './SelectBasePanel'\n\nexport class SelectVehicleManedPanel extends SelectBasePanel {\n\n    allVehicleEmpty: boolean = false\n\n    constructor(parent: BaseElement, onBackPanel: Panel) {\n        super(parent, 7, onBackPanel)\n        this.addMenuItem('InterfaceImages', 'Interface_MenuItem_UnLoadVehicle')\n        this.addMenuItem('InterfaceImages', 'Interface_MenuItem_VehiclePickUp')\n        this.addMenuItem('InterfaceImages', 'Interface_MenuItem_UpgradeVehicle')\n        const leaveVehicleItem = this.addMenuItem('InterfaceImages', 'Interface_MenuItem_GetOut')\n        leaveVehicleItem.isDisabled = () => this.allVehicleEmpty\n        leaveVehicleItem.onClick = () => this.publishEvent(new VehicleDriverGetOut())\n        this.addMenuItem('InterfaceImages', 'Interface_MenuItem_GotoFirstPerson')\n        this.addMenuItem('InterfaceImages', 'Interface_MenuItem_GotoSecondPerson')\n        const deleteVehicleItem = this.addMenuItem('InterfaceImages', 'Interface_MenuItem_DeleteVehicle')\n        deleteVehicleItem.isDisabled = () => false\n        deleteVehicleItem.onClick = () => this.publishEvent(new VehicleBeamUp())\n        this.registerEventListener(EventKey.SELECTION_CHANGED, (event: SelectionChanged) => {\n            this.allVehicleEmpty = event.allVehicleEmpty\n            leaveVehicleItem.updateState()\n        })\n    }\n\n}\n","import { EventKey } from '../../../event/EventKeyEnum'\nimport { CancelSurfaceJobs, CreateDrillJob, CreateDynamiteJob, CreateReinforceJob } from '../../../event/GuiCommand'\nimport { BuildingsChangedEvent, SelectionChanged } from '../../../event/LocalEvents'\nimport { EntityType } from '../../../game/model/EntityType'\nimport { BaseElement } from '../../base/BaseElement'\nimport { Panel } from '../../base/Panel'\nimport { SelectBasePanel } from './SelectBasePanel'\n\nexport class SelectWallPanel extends SelectBasePanel {\n\n    isDrillable: boolean = false\n    isReinforcable: boolean = false\n    numToolstationsLevel2: number = 0\n\n    constructor(parent: BaseElement, onBackPanel: Panel) {\n        super(parent, 4, onBackPanel)\n        const itemDrill = this.addMenuItem('InterfaceImages', 'Interface_MenuItem_Dig')\n        itemDrill.isDisabled = () => !this.isDrillable\n        itemDrill.onClick = () => this.publishEvent(new CreateDrillJob())\n        const itemReinforce = this.addMenuItem('InterfaceImages', 'Interface_MenuItem_Reinforce')\n        itemReinforce.isDisabled = () => !this.isReinforcable\n        itemReinforce.onClick = () => this.publishEvent(new CreateReinforceJob())\n        const itemDynamite = this.addMenuItem('InterfaceImages', 'Interface_MenuItem_Dynamite')\n        itemDynamite.isDisabled = () => this.numToolstationsLevel2 < 1\n        itemDynamite.onClick = () => this.publishEvent(new CreateDynamiteJob())\n        const itemDeselect = this.addMenuItem('InterfaceImages', 'Interface_MenuItem_DeselectDig')\n        itemDeselect.isDisabled = () => false\n        itemDeselect.onClick = () => this.publishEvent(new CancelSurfaceJobs())\n        this.registerEventListener(EventKey.SELECTION_CHANGED, (event: SelectionChanged) => {\n            this.isDrillable = event.isDrillable\n            this.isReinforcable = event.isReinforcable\n            this.updateAllButtonStates()\n        })\n        this.registerEventListener(EventKey.BUILDINGS_CHANGED, (event: BuildingsChangedEvent) => {\n            this.numToolstationsLevel2 = BuildingsChangedEvent.countUsable(event, EntityType.TOOLSTATION, 2)\n        })\n    }\n\n    reset() {\n        super.reset()\n        this.isDrillable = false\n        this.isReinforcable = false\n        this.numToolstationsLevel2 = 0\n    }\n\n}\n","import { EventKey } from '../../event/EventKeyEnum'\nimport { TrainRaider } from '../../event/GuiCommand'\nimport { SelectionChanged } from '../../event/LocalEvents'\nimport { RaiderTraining } from '../../game/model/raider/RaiderTraining'\nimport { BaseElement } from '../base/BaseElement'\nimport { Panel } from '../base/Panel'\nimport { IconSubPanel } from './IconSubPanel'\n\nexport class TrainRaiderPanel extends IconSubPanel {\n\n    canDoTraining: Map<RaiderTraining, boolean> = new Map()\n\n    constructor(parent: BaseElement, onBackPanel: Panel) {\n        super(parent, 6, onBackPanel)\n        this.addTrainingItem('Interface_MenuItem_TrainDriver', RaiderTraining.DRIVER)\n        this.addTrainingItem('Interface_MenuItem_TrainEngineer', RaiderTraining.ENGINEER)\n        this.addTrainingItem('Interface_MenuItem_TrainGeologist', RaiderTraining.GEOLOGIST)\n        this.addTrainingItem('Interface_MenuItem_TrainPilot', RaiderTraining.PILOT)\n        this.addTrainingItem('Interface_MenuItem_TrainSailor', RaiderTraining.SAILOR)\n        this.addTrainingItem('Interface_MenuItem_TrainDynamite', RaiderTraining.DEMOLITION)\n        this.registerEventListener(EventKey.SELECTION_CHANGED, (event: SelectionChanged) => {\n            this.canDoTraining = event.canDoTraining\n            this.updateAllButtonStates()\n        })\n    }\n\n    private addTrainingItem(itemKey: string, training: RaiderTraining) {\n        const trainingItem = this.addMenuItem('InterfaceImages', itemKey)\n        trainingItem.isDisabled = () => !this.canDoTraining.get(training)\n        trainingItem.onClick = () => this.publishEvent(new TrainRaider(training))\n    }\n\n    reset() {\n        super.reset()\n        this.canDoTraining = new Map()\n    }\n\n}\n","import { RequestVehicleSpawn } from '../../event/GuiCommand'\nimport { EntityType } from '../../game/model/EntityType'\nimport { BaseElement } from '../base/BaseElement'\nimport { Panel } from '../base/Panel'\nimport { DependencyCheckPanel } from './DependencyCheckPanel'\n\nabstract class VehiclePanel extends DependencyCheckPanel {\n\n    addVehicleMenuItem(itemKey: string, entityType: EntityType) {\n        this.addDependencyMenuItem(itemKey, entityType, (entityType) => this.publishEvent(new RequestVehicleSpawn(entityType)))\n    }\n\n}\n\nexport class SmallVehiclePanel extends VehiclePanel {\n\n    constructor(parent: BaseElement, onBackPanel: Panel) {\n        super(parent, 6, onBackPanel)\n        this.addVehicleMenuItem('Hoverboard', EntityType.HOVERBOARD)\n        this.addVehicleMenuItem('SmallDigger', EntityType.SMALL_DIGGER)\n        this.addVehicleMenuItem('SmallTruck', EntityType.SMALL_TRUCK)\n        this.addVehicleMenuItem('SmallCat', EntityType.SMALL_CAT)\n        this.addVehicleMenuItem('SmallMLP', EntityType.SMALL_MLP)\n        this.addVehicleMenuItem('SmallHeli', EntityType.SMALL_HELI)\n    }\n\n}\n\nexport class LargeVehiclePanel extends VehiclePanel {\n\n    constructor(parent: BaseElement, onBackPanel: Panel) {\n        super(parent, 5, onBackPanel)\n        this.addVehicleMenuItem('BullDozer', EntityType.BULLDOZER)\n        this.addVehicleMenuItem('WalkerDigger', EntityType.WALKER_DIGGER)\n        this.addVehicleMenuItem('LargeMLP', EntityType.LARGE_MLP)\n        this.addVehicleMenuItem('LargeDigger', EntityType.LARGE_DIGGER)\n        this.addVehicleMenuItem('LargeCat', EntityType.LARGE_CAT)\n    }\n\n}\n","import { EventKey } from '../../event/EventKeyEnum'\nimport { ChangeRaiderSpawnRequest } from '../../event/GuiCommand'\nimport { BuildingsChangedEvent, RaidersChangedEvent, SelectionChanged, SelectPanelType } from '../../event/LocalEvents'\nimport { RequestedRaidersChanged } from '../../event/WorldEvents'\nimport { EntityType } from '../../game/model/EntityType'\nimport { ADDITIONAL_RAIDER_PER_SUPPORT, MAX_RAIDER_BASE, MAX_RAIDER_REQUEST } from '../../params'\nimport { BaseElement } from '../base/BaseElement'\nimport { Panel } from '../base/Panel'\nimport { BuildingPanel } from './BuildingPanel'\nimport { GetToolPanel } from './GetToolPanel'\nimport { IconPanelButtonLabel } from './IconPanelButtonLabel'\nimport { IconSubPanel } from './IconSubPanel'\nimport { SelectBuildingPanel } from './select/SelectBuildingPanel'\nimport { SelectFloorPanel } from './select/SelectFloorPanel'\nimport { SelectRaiderPanel } from './select/SelectRaiderPanel'\nimport { SelectRubblePanel } from './select/SelectRubblePanel'\nimport { SelectSitePanel } from './select/SelectSitePanel'\nimport { SelectVehicleEmptyPanel } from './select/SelectVehicleEmptyPanel'\nimport { SelectVehicleManedPanel } from './select/SelectVehicleManedPanel'\nimport { SelectWallPanel } from './select/SelectWallPanel'\nimport { TrainRaiderPanel } from './TrainRaiderPanel'\nimport { LargeVehiclePanel, SmallVehiclePanel } from './VehiclePanel'\n\nexport class MainPanel extends Panel {\n\n    subPanels: IconSubPanel[] = []\n    mainPanel: IconSubPanel // don't use root itself, since sub panel must be decoupled from (animated) main panel position\n    selectWallPanel: SelectWallPanel\n    selectFloorPanel: SelectFloorPanel\n    selectRubblePanel: SelectRubblePanel\n    selectSitePanel: SelectSitePanel\n\n    numRequestedRaiders: number = 0\n    numToolstations: number = 0\n    numTeleportPads: number = 0\n    numBarracks: number = 0\n    numRaiders: number = 0\n\n    constructor(parent: BaseElement) {\n        super(parent)\n        this.relX = this.xOut = 640 - 16\n        this.xIn = 640 + 95\n        this.relY = this.yOut = this.yIn = 9\n        this.movedIn = false\n        this.mainPanel = this.addSubPanel(new IconSubPanel(this, 4))\n        this.mainPanel.relX = this.mainPanel.xOut\n        this.mainPanel.relY = this.mainPanel.yOut\n        this.mainPanel.movedIn = false\n\n        const buildingPanel = this.addSubPanel(new BuildingPanel(this, this.mainPanel))\n        const smallVehiclePanel = this.addSubPanel(new SmallVehiclePanel(this, this.mainPanel))\n        const largeVehiclePanel = this.addSubPanel(new LargeVehiclePanel(this, this.mainPanel))\n        this.selectWallPanel = this.addSubPanel(new SelectWallPanel(this, this.mainPanel))\n        this.selectFloorPanel = this.addSubPanel(new SelectFloorPanel(this, this.mainPanel))\n        this.selectRubblePanel = this.addSubPanel(new SelectRubblePanel(this, this.mainPanel))\n        this.selectSitePanel = this.addSubPanel(new SelectSitePanel(this, this.mainPanel))\n        const selectBuildingPanel = this.addSubPanel(new SelectBuildingPanel(this, this.mainPanel))\n        const selectRaiderPanel = this.addSubPanel(new SelectRaiderPanel(this, this.mainPanel))\n        const trainRaiderPanel = this.addSubPanel(new TrainRaiderPanel(this, selectRaiderPanel))\n        selectRaiderPanel.trainItem.onClick = () => selectRaiderPanel.toggleState(() => trainRaiderPanel.toggleState())\n        const getToolPanel = this.addSubPanel(new GetToolPanel(this, selectRaiderPanel))\n        selectRaiderPanel.getToolItem.onClick = () => selectRaiderPanel.toggleState(() => getToolPanel.toggleState())\n        const selectVehicleEmptyPanel = this.addSubPanel(new SelectVehicleEmptyPanel(this, this.mainPanel))\n        const selectVehicleManedPanel = this.addSubPanel(new SelectVehicleManedPanel(this, this.mainPanel))\n\n        const teleportRaider = this.mainPanel.addMenuItem('InterfaceImages', 'Interface_MenuItem_TeleportMan')\n        teleportRaider.isDisabled = () => this.numRaiders >= this.getMaxRaiders() || this.numRequestedRaiders >= MAX_RAIDER_REQUEST ||\n            (this.numToolstations < 1 && this.numTeleportPads < 1)\n        teleportRaider.updateState()\n        teleportRaider.onClick = () => this.publishEvent(new ChangeRaiderSpawnRequest(true))\n        // TODO add decrease requested raider spawn option (needs right click for gui elements)\n        teleportRaider.addChild(new IconPanelButtonLabel(teleportRaider))\n        this.registerEventListener(EventKey.REQUESTED_RAIDERS_CHANGED, (event: RequestedRaidersChanged) => {\n            this.numRequestedRaiders = event.numRequestedRaiders\n            teleportRaider.updateState()\n        })\n        const buildingItem = this.mainPanel.addMenuItem('InterfaceImages', 'Interface_MenuItem_BuildBuilding')\n        buildingItem.isDisabled = () => false\n        buildingItem.onClick = () => this.mainPanel.toggleState(() => buildingPanel.toggleState())\n        const smallVehicleItem = this.mainPanel.addMenuItem('InterfaceImages', 'Interface_MenuItem_BuildSmallVehicle')\n        smallVehicleItem.isDisabled = () => false\n        smallVehicleItem.onClick = () => this.mainPanel.toggleState(() => smallVehiclePanel.toggleState())\n        const largeVehicleItem = this.mainPanel.addMenuItem('InterfaceImages', 'Interface_MenuItem_BuildLargeVehicle')\n        largeVehicleItem.isDisabled = () => false\n        largeVehicleItem.onClick = () => this.mainPanel.toggleState(() => largeVehiclePanel.toggleState())\n\n        this.registerEventListener(EventKey.SELECTION_CHANGED, (event: SelectionChanged) => {\n            if (event.selectPanelType === SelectPanelType.RAIDER) this.selectSubPanel(selectRaiderPanel)\n            else if (event.selectPanelType === SelectPanelType.VEHICLE) this.selectSubPanel(event.allVehicleEmpty ? selectVehicleEmptyPanel : selectVehicleManedPanel)\n            else if (event.selectPanelType === SelectPanelType.BUILDING) this.selectSubPanel(selectBuildingPanel)\n            else if (event.selectPanelType === SelectPanelType.SURFACE) this.onSelectedSurfaceChange(event.isFloor, event.isSite, event.hasRubble)\n            else this.selectSubPanel(this.mainPanel)\n        })\n        this.registerEventListener(EventKey.BUILDINGS_CHANGED, (event: BuildingsChangedEvent) => {\n            this.numToolstations = BuildingsChangedEvent.countUsable(event, EntityType.TOOLSTATION)\n            this.numTeleportPads = BuildingsChangedEvent.countUsable(event, EntityType.TELEPORT_PAD)\n            this.numBarracks = BuildingsChangedEvent.countUsable(event, EntityType.BARRACKS)\n            teleportRaider.updateState()\n        })\n        this.registerEventListener(EventKey.RAIDERS_CHANGED, (event: RaidersChangedEvent) => {\n            this.numRaiders = event.numRaiders\n            teleportRaider.updateState()\n        })\n    }\n\n    getMaxRaiders(): number {\n        return MAX_RAIDER_BASE + this.numBarracks * ADDITIONAL_RAIDER_PER_SUPPORT\n    }\n\n    reset() {\n        super.reset()\n        this.relX = this.xOut\n        this.relY = this.yOut\n        this.movedIn = false\n        this.updatePosition()\n        this.mainPanel.relX = this.mainPanel.xOut\n        this.mainPanel.relY = this.mainPanel.yOut\n        this.mainPanel.movedIn = false\n        this.mainPanel.updatePosition()\n        this.numRequestedRaiders = 0\n        this.numToolstations = 0\n        this.numTeleportPads = 0\n        this.numBarracks = 0\n        this.numRaiders = 0\n    }\n\n    addSubPanel<T extends IconSubPanel>(childPanel: T): T {\n        this.addChild(childPanel)\n        this.subPanels.push(childPanel)\n        return childPanel\n    }\n\n    selectSubPanel(targetPanel: IconSubPanel) {\n        this.subPanels.forEach((subPanel) => subPanel !== targetPanel && subPanel.setMovedIn(true))\n        targetPanel.setMovedIn(false)\n    }\n\n    onSelectedSurfaceChange(isFloor: boolean, isSite: boolean, hasRubble: boolean) {\n        if (isFloor) {\n            if (hasRubble) {\n                this.selectSubPanel(this.selectRubblePanel)\n            } else if (isSite) {\n                this.selectSubPanel(this.selectSitePanel)\n            } else {\n                this.selectSubPanel(this.selectFloorPanel)\n            }\n        } else {\n            this.selectSubPanel(this.selectWallPanel)\n        }\n    }\n\n}\n","export enum PriorityIdentifier {\n\n    aiPriorityTrain,\n    aiPriorityGetIn,\n    aiPriorityCrystal,\n    aiPriorityOre,\n    aiPriorityRepair,\n    aiPriorityClearing,\n    aiPriorityDestruction,\n    aiPriorityConstruction,\n    aiPriorityReinforce,\n    aiPriorityRecharge,\n\n}\n","import { Sample } from '../../audio/Sample'\nimport { BitmapFont } from '../../core/BitmapFont'\nimport { GuiResourceCache } from '../GuiResourceCache'\nimport { TextInfoMessageEntryConfig } from './TextInfoMessageEntryConfig'\n\nexport class TextInfoMessage {\n\n    infoImage: SpriteImage\n    textImage: SpriteImage\n    sfxSample: Sample\n\n    constructor(font: BitmapFont, infoMessageEntryConfig: TextInfoMessageEntryConfig, maxWidth: number) {\n        this.textImage = font.createTextImage(infoMessageEntryConfig.text, maxWidth)\n        this.infoImage = GuiResourceCache.getImageOrNull(infoMessageEntryConfig.imageFilename)\n        this.sfxSample = Sample[infoMessageEntryConfig.sfxName]\n    }\n\n}\n","import { PanelCfg } from '../../cfg/PanelCfg'\nimport { clearTimeoutSafe } from '../../core/Util'\nimport { EventKey } from '../../event/EventKeyEnum'\nimport { AirLevelChanged, PlaySoundEvent, RaidersChangedEvent } from '../../event/LocalEvents'\nimport { BaseElement } from '../base/BaseElement'\nimport { Panel } from '../base/Panel'\nimport { GuiResourceCache } from '../GuiResourceCache'\nimport { TextInfoMessage } from './TextInfoMessage'\nimport { TextInfoMessageConfig } from './TextInfoMessageConfig'\n\nexport class MessagePanel extends Panel {\n\n    imgAir: SpriteImage = null\n    currentMessage: TextInfoMessage = null\n    messageTimeout = null\n\n    msgSpaceToContinue: TextInfoMessage\n    msgAirSupplyLow: TextInfoMessage\n    msgAirSupplyRunningOut: TextInfoMessage\n    msgGameCompleted: TextInfoMessage\n    msgManTrained: TextInfoMessage\n    msgUnitUpgraded: TextInfoMessage\n\n    airLevel: number = 1\n\n    constructor(parent: BaseElement, panelCfg: PanelCfg, textInfoMessageConfig: TextInfoMessageConfig) {\n        super(parent, panelCfg)\n        this.relX = this.xOut = this.xIn = 42\n        this.relY = this.yOut = this.yIn = 409\n        this.imgAir = GuiResourceCache.getImage('Interface/Airmeter/msgpanel_air_juice.bmp')\n\n        const font = GuiResourceCache.getDefaultFont()\n        const crystalFound = new TextInfoMessage(font, textInfoMessageConfig.textCrystalFound, this.img.width)\n        this.registerEventListener(EventKey.LOCATION_CRYSTAL_FOUND, () => this.setMessage(crystalFound))\n        this.msgSpaceToContinue = new TextInfoMessage(font, textInfoMessageConfig.textSpaceToContinue, this.img.width)\n        const cavernDiscovered = new TextInfoMessage(font, textInfoMessageConfig.textCavernDiscovered, this.img.width)\n        this.registerEventListener(EventKey.CAVERN_DISCOVERED, () => this.setMessage(cavernDiscovered))\n        const oreFound = new TextInfoMessage(font, textInfoMessageConfig.textOreFound, this.img.width)\n        this.registerEventListener(EventKey.ORE_FOUND, () => this.setMessage(oreFound))\n        this.msgAirSupplyLow = new TextInfoMessage(font, textInfoMessageConfig.textAirSupplyLow, this.img.width)\n        this.msgAirSupplyRunningOut = new TextInfoMessage(font, textInfoMessageConfig.textAirSupplyRunningOut, this.img.width)\n        this.msgGameCompleted = new TextInfoMessage(font, textInfoMessageConfig.textGameCompleted, this.img.width)\n        this.msgManTrained = new TextInfoMessage(font, textInfoMessageConfig.textManTrained, this.img.width)\n        this.registerEventListener(EventKey.RAIDERS_CHANGED, (event: RaidersChangedEvent) => event.training && this.setMessage(this.msgManTrained))\n        this.msgUnitUpgraded = new TextInfoMessage(font, textInfoMessageConfig.textUnitUpgraded, this.img.width)\n        this.registerEventListener(EventKey.AIR_LEVEL_CHANGED, () => this.notifyRedraw())\n        this.registerEventListener(EventKey.AIR_LEVEL_CHANGED, (event: AirLevelChanged) => {\n            this.airLevel = event.airLevel\n        })\n    }\n\n    reset() {\n        super.reset()\n        this.airLevel = 1\n    }\n\n    setMessage(textInfoMessage: TextInfoMessage, timeout: number = 3000) {\n        this.messageTimeout = clearTimeoutSafe(this.messageTimeout)\n        this.currentMessage = textInfoMessage\n        this.notifyRedraw()\n        if (textInfoMessage.sfxSample) this.publishEvent(new PlaySoundEvent(textInfoMessage.sfxSample))\n        if (timeout) {\n            const that = this\n            this.messageTimeout = setTimeout(() => {\n                that.currentMessage = null\n                that.notifyRedraw()\n            }, timeout)\n        }\n    }\n\n    unsetMessage(textInfoMessage: TextInfoMessage) {\n        if (this.currentMessage === textInfoMessage) {\n            this.currentMessage = null\n            this.notifyRedraw()\n        }\n    }\n\n    onRedraw(context: SpriteContext) {\n        super.onRedraw(context)\n        if (this.airLevel > 0) {\n            const width = Math.round(236 * Math.min(1, this.airLevel))\n            context.drawImage(this.imgAir, this.x + 85, this.y + 6, width, 8)\n        }\n        const textImage = this.currentMessage?.textImage\n        const infoImage = this.currentMessage?.infoImage\n        if (textImage) {\n            const txtX = this.x + (this.img.width - textImage.width - (infoImage ? infoImage.width : 0)) / 2\n            context.drawImage(textImage, txtX, this.y + 26)\n        }\n        if (infoImage) {\n            const infoX = this.x + this.img.width - infoImage.width\n            context.drawImage(infoImage, infoX, this.y + 16)\n        }\n    }\n\n}\n","export class TextInfoMessageEntryConfig {\n\n    text: string\n    imageFilename: string\n    sfxName: string\n\n    textImage\n    infoImage\n\n    constructor(cfgValue: any) {\n        [this.text, this.imageFilename, this.sfxName] = cfgValue\n    }\n\n}\n","import { BaseConfig } from '../../cfg/BaseConfig'\nimport { TextInfoMessageEntryConfig } from './TextInfoMessageEntryConfig'\n\nexport class TextInfoMessageConfig extends BaseConfig {\n\n    textCrystalFound: TextInfoMessageEntryConfig = null\n    textSpaceToContinue: TextInfoMessageEntryConfig = null\n    textCavernDiscovered: TextInfoMessageEntryConfig = null\n    textOreFound: TextInfoMessageEntryConfig = null\n    textAirSupplyLow: TextInfoMessageEntryConfig = null\n    textAirSupplyRunningOut: TextInfoMessageEntryConfig = null\n    textGameCompleted: TextInfoMessageEntryConfig = null\n    textManTrained: TextInfoMessageEntryConfig = null\n    textUnitUpgraded: TextInfoMessageEntryConfig = null\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n    parseValue(lCfgKeyName: string, cfgValue: any): any {\n        return new TextInfoMessageEntryConfig(cfgValue)\n    }\n\n}\n","import { BaseConfig } from '../../cfg/BaseConfig'\nimport { ButtonCfg } from '../../cfg/ButtonCfg'\n\nexport class PriorityButtonsConfig extends BaseConfig {\n\n    aiPriorityTrain: ButtonCfg = null\n    aiPriorityGetIn: ButtonCfg = null\n    aiPriorityCrystal: ButtonCfg = null\n    aiPriorityOre: ButtonCfg = null\n    aiPriorityRepair: ButtonCfg = null\n    aiPriorityClearing: ButtonCfg = null\n    aiPriorityDestruction: ButtonCfg = null\n    aiPriorityConstruction: ButtonCfg = null\n    aiPriorityReinforce: ButtonCfg = null\n    aiPriorityRecharge: ButtonCfg = null\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n    parseValue(lCfgKeyName: string, cfgValue: any): ButtonCfg {\n        return {\n            buttonType: cfgValue[0],\n            normalFile: cfgValue[1],\n            highlightFile: cfgValue[1],\n            pressedFile: cfgValue[2],\n            disabledFile: cfgValue[3],\n        }\n    }\n\n}\n","import { LevelPrioritiesEntryConfig } from '../../../cfg/LevelsCfg'\nimport { PriorityIdentifier } from './PriorityIdentifier'\n\nexport class PriorityEntry {\n\n    key: PriorityIdentifier\n    enabled: boolean\n\n    constructor(levelPriorityEntry: LevelPrioritiesEntryConfig) {\n        this.key = levelPriorityEntry.key\n        this.enabled = levelPriorityEntry.enabled\n    }\n\n}\n","import { PriorityEntry } from '../../game/model/job/PriorityEntry'\n\nexport class PriorityList {\n\n    levelDefault: PriorityEntry[] = []\n    current: PriorityEntry[] = []\n\n    setList(priorities: PriorityEntry[]) {\n        this.levelDefault = priorities\n        this.reset()\n    }\n\n    toggle(index: number) {\n        this.current[index].enabled = !this.current[index].enabled\n    }\n\n    upOne(index: number) {\n        const tmp = this.current[index]\n        this.current[index] = this.current[index + 1]\n        this.current[index + 1] = tmp\n    }\n\n    reset() {\n        this.current = this.levelDefault.map(entry => new PriorityEntry(entry)) // use deep copy to avoid interference\n    }\n\n    pushToTop(index: number) {\n        const element = this.current[index]\n        for (let c = index; c > 0; c--) {\n            this.current[c] = this.current[c - 1]\n        }\n        this.current[0] = element\n    }\n\n}\n","import { PanelCfg } from '../../cfg/PanelCfg'\nimport { EventKey } from '../../event/EventKeyEnum'\nimport { ChangePriorityList } from '../../event/GuiCommand'\nimport { SetupPriorityList } from '../../event/LocalEvents'\nimport { PriorityIdentifier } from '../../game/model/job/PriorityIdentifier'\nimport { BaseElement } from '../base/BaseElement'\nimport { Button } from '../base/Button'\nimport { Panel } from '../base/Panel'\nimport { ButtonPriorityListCfg } from './ButtonPriorityListCfg'\nimport { PriorityButtonsConfig } from './PriorityButtonsConfig'\nimport { PriorityList } from './PriorityList'\nimport { PriorityPositionsEntry } from './PriorityPositionsEntry'\n\nexport class PriorityListPanel extends Panel {\n\n    prioPositions: PriorityPositionsEntry[] = []\n    prioByName: Map<PriorityIdentifier, Button> = new Map()\n\n    priorityList: PriorityList = new PriorityList()\n\n    constructor(parent: BaseElement, panelCfg: PanelCfg, buttonsCfg: ButtonPriorityListCfg, pos: PriorityPositionsEntry[], cfg: PriorityButtonsConfig) {\n        super(parent, panelCfg)\n        buttonsCfg.panelButtonPriorityListDisable.forEach((buttonCfg, index) => {\n            this.addChild(new Button(this, buttonCfg)).onClick = () => {\n                this.priorityList.toggle(index)\n                this.updateList()\n            }\n        })\n        buttonsCfg.panelButtonPriorityListUpOne.forEach((buttonCfg, index) => {\n            this.addChild(new Button(this, buttonCfg)).onClick = () => {\n                this.priorityList.upOne(index)\n                this.updateList()\n            }\n        })\n        this.addChild(new Button(this, buttonsCfg.panelButtonPriorityListReset)).onClick = () => {\n            this.priorityList.reset()\n            this.updateList()\n        }\n\n        this.prioPositions = pos\n        this.prioByName.set(PriorityIdentifier.aiPriorityTrain, this.addChild(new Button(this, cfg.aiPriorityTrain)))\n        this.prioByName.set(PriorityIdentifier.aiPriorityGetIn, this.addChild(new Button(this, cfg.aiPriorityGetIn)))\n        this.prioByName.set(PriorityIdentifier.aiPriorityCrystal, this.addChild(new Button(this, cfg.aiPriorityCrystal)))\n        this.prioByName.set(PriorityIdentifier.aiPriorityOre, this.addChild(new Button(this, cfg.aiPriorityOre)))\n        this.prioByName.set(PriorityIdentifier.aiPriorityRepair, this.addChild(new Button(this, cfg.aiPriorityRepair)))\n        this.prioByName.set(PriorityIdentifier.aiPriorityClearing, this.addChild(new Button(this, cfg.aiPriorityClearing)))\n        this.prioByName.set(PriorityIdentifier.aiPriorityDestruction, this.addChild(new Button(this, cfg.aiPriorityDestruction)))\n        this.prioByName.set(PriorityIdentifier.aiPriorityConstruction, this.addChild(new Button(this, cfg.aiPriorityConstruction)))\n        this.prioByName.set(PriorityIdentifier.aiPriorityReinforce, this.addChild(new Button(this, cfg.aiPriorityReinforce)))\n        this.prioByName.set(PriorityIdentifier.aiPriorityRecharge, this.addChild(new Button(this, cfg.aiPriorityRecharge)))\n        this.registerEventListener(EventKey.SETUP_PRIORITY_LIST, (event: SetupPriorityList) => {\n            this.priorityList.setList(event.priorityList)\n            this.updateList()\n        })\n    }\n\n    reset() {\n        super.reset()\n        this.priorityList.reset()\n    }\n\n    private updateList() {\n        this.prioByName.forEach((btn) => btn.hidden = true)\n        let index = 0\n        let updated = false\n        this.priorityList.current.forEach((cfg) => {\n            const prioButton: Button = this.prioByName.get(cfg.key)\n            if (prioButton) {\n                updated = updated || prioButton.hidden || prioButton.disabled !== !cfg.enabled\n                prioButton.hidden = index > 8\n                prioButton.disabled = !cfg.enabled\n                prioButton.relX = this.prioPositions[index].x\n                prioButton.relY = this.prioPositions[index].y\n                prioButton.updatePosition()\n                const btnIndex = index\n                prioButton.onClick = () => {\n                    this.priorityList.pushToTop(btnIndex)\n                    this.updateList()\n                }\n                index++\n            }\n        })\n        if (updated) {\n            this.notifyRedraw()\n            this.publishEvent(new ChangePriorityList(this.priorityList.current))\n        }\n    }\n\n}\n","export class PriorityPositionsEntry {\n\n    x: number\n    y: number\n\n    constructor(cfgValue: any) {\n        [this.x, this.y] = cfgValue\n    }\n\n}\n","import { ButtonCfg } from '../../cfg/ButtonCfg'\nimport { BaseElement } from './BaseElement'\nimport { Button } from './Button'\n\nexport class ToggleButton extends Button {\n\n    toggleState: boolean = false\n\n    constructor(parent: BaseElement, btnCfg: ButtonCfg) {\n        super(parent, btnCfg)\n    }\n\n    checkHover(cx, cy): boolean {\n        if (this.isInactive()) return false\n        const inRect = this.isInRect(cx, cy)\n        let updated = this.hover !== inRect\n        this.hover = inRect\n        this.pressed = (this.pressed && this.hover) || this.toggleState\n        // TODO start tooltip timeout (if not already started)\n        this.children.forEach((child) => updated = child.checkHover(cx, cy) || updated)\n        if (updated) this.notifyRedraw()\n        return updated\n    }\n\n    checkClick(cx, cy): boolean {\n        if (this.isInactive()) return false\n        const isPressed = this.isInRect(cx, cy) || this.toggleState\n        let updated = this.pressed !== isPressed\n        this.pressed = isPressed\n        this.children.forEach((child) => updated = child.checkClick(cx, cy) || updated)\n        if (updated) this.notifyRedraw()\n        return updated\n    }\n\n    checkRelease(cx, cy): boolean {\n        if (this.isInactive()) return false\n        const inRect = this.isInRect(cx, cy)\n        let updated = inRect && this.pressed\n        if (updated) {\n            this.clicked(cx, cy)\n            this.pressed = updated && this.toggleState\n            this.hover = inRect\n        }\n        this.children.forEach((child) => updated = child.checkRelease(cx, cy) || updated)\n        if (updated) this.notifyRedraw()\n        return updated\n    }\n\n    clicked(cx: number, cy: number) {\n        this.toggleState = !this.toggleState\n        super.clicked(cx, cy)\n    }\n\n    release(): boolean {\n        return false\n    }\n\n}\n\n","import { PanelCfg } from '../../cfg/PanelCfg'\nimport { BaseElement } from '../base/BaseElement'\nimport { Button } from '../base/Button'\nimport { Panel } from '../base/Panel'\nimport { ToggleButton } from '../base/ToggleButton'\nimport { ButtonTopCfg } from './ButtonTopCfg'\n\nexport class TopPanel extends Panel {\n\n    btnCallToArms: ToggleButton\n    btnOptions: Button\n    btnPriorities: ToggleButton\n\n    constructor(parent: BaseElement, panelCfg: PanelCfg, buttonsCfg: ButtonTopCfg) {\n        super(parent, panelCfg)\n        this.btnCallToArms = this.addChild(new ToggleButton(this, buttonsCfg.panelButtonTopPanelCallToArms))\n        this.btnOptions = this.addChild(new Button(this, buttonsCfg.panelButtonTopPanelOptions))\n        this.btnPriorities = this.addChild(new ToggleButton(this, buttonsCfg.panelButtonTopPanelPriorities))\n    }\n\n}\n\n","import { ButtonsCfg } from '../cfg/ButtonsCfg'\nimport { PanelsCfg } from '../cfg/PanelsCfg'\nimport { WorkerMessageType } from '../resource/wadworker/WorkerMessageType'\nimport { Panel } from './base/Panel'\nimport { CameraControlPanel } from './cameracontrol/CameraControlPanel'\nimport { GuiResourceCache } from './GuiResourceCache'\nimport { GuiWorker } from './GuiWorker'\nimport { GuiWorkerMessage } from './GuiWorkerMessage'\nimport { InfoDockPanel } from './infodock/InfoDockPanel'\nimport { InfoMessagesConfig } from './infodock/InfoMessagesConfig'\nimport { InformationPanel } from './infodock/InformationPanel'\nimport { MainPanel } from './main/MainPanel'\nimport { MessagePanel } from './messagepanel/MessagePanel'\nimport { TextInfoMessageConfig } from './messagepanel/TextInfoMessageConfig'\nimport { RadarPanel } from './radar/RadarPanel'\nimport { PanelCrystalSideBar } from './sidebar/PanelCrystalSideBar'\nimport { PriorityButtonsConfig } from './toppanel/PriorityButtonsConfig'\nimport { PriorityListPanel } from './toppanel/PriorityListPanel'\nimport { PriorityPositionsEntry } from './toppanel/PriorityPositionsEntry'\nimport { TopPanel } from './toppanel/TopPanel'\n\nexport class GuiMainWorker extends GuiWorker {\n\n    panelRadar: RadarPanel\n    panelMessages: MessagePanel\n    panelMessagesSide: Panel\n    panelCrystalSideBar: PanelCrystalSideBar\n    panelMain: MainPanel\n    panelTopPanel: TopPanel\n    panelInformation: InformationPanel\n    panelPriorityList: PriorityListPanel\n    panelCameraControl: Panel\n    panelInfoDock: InfoDockPanel\n    panelEncyclopedia: Panel\n\n    constructor(worker: Worker) {\n        super(worker)\n        const panelsCfg = new PanelsCfg(GuiResourceCache.cfg('Panels640x480'))\n        const buttonsCfg = new ButtonsCfg(GuiResourceCache.cfg('Buttons640x480'))\n        // created in reverse order compared to cfg, earlier in cfg means higher z-value // TODO add some z layering at least to panels\n        this.panelEncyclopedia = this.addPanel(new Panel(this.rootElement, panelsCfg.panelEncyclopedia))\n        this.panelInformation = this.addPanel(new InformationPanel(this.rootElement, panelsCfg.panelInformation))\n        this.panelInfoDock = this.addPanel(new InfoDockPanel(this.rootElement, panelsCfg.panelInfoDock, buttonsCfg.panelInfoDock, new InfoMessagesConfig(GuiResourceCache.cfg('InfoMessages')), this.panelInformation))\n        this.panelCameraControl = this.addPanel(new CameraControlPanel(this.rootElement, panelsCfg.panelCameraControl, buttonsCfg.panelCameraControl, GuiResourceCache.cfg('PanelRotationControl')))\n        const priorityPositionsConfig = Object.values(GuiResourceCache.cfg('PrioritiesImagePositions')).map(cfgValue => new PriorityPositionsEntry(cfgValue))\n        const priorityButtonsConfig = new PriorityButtonsConfig(GuiResourceCache.cfg('PriorityImages'))\n        this.panelPriorityList = this.addPanel(new PriorityListPanel(this.rootElement, panelsCfg.panelPriorityList, buttonsCfg.panelPriorityList, priorityPositionsConfig, priorityButtonsConfig))\n        this.panelTopPanel = this.addPanel(new TopPanel(this.rootElement, panelsCfg.panelTopPanel, buttonsCfg.panelTopPanel))\n        this.panelMain = this.addPanel(new MainPanel(this.rootElement))\n        this.panelCrystalSideBar = this.addPanel(new PanelCrystalSideBar(this.rootElement, panelsCfg.panelCrystalSideBar, buttonsCfg.panelCrystalSideBar))\n        this.panelMessagesSide = this.addPanel(new Panel(this.rootElement, panelsCfg.panelMessagesSide))\n        this.panelMessages = this.addPanel(new MessagePanel(this.rootElement, panelsCfg.panelMessages, new TextInfoMessageConfig(GuiResourceCache.cfg('TextMessagesWithImages'))))\n        this.panelRadar = this.addPanel(new RadarPanel(this.rootElement, panelsCfg.panelRadar, panelsCfg.panelRadarFill, panelsCfg.panelRadarOverlay, buttonsCfg.panelRadar))\n        // link panels\n        this.panelTopPanel.btnOptions.onClick = () => {\n            this.sendResponse({type: WorkerMessageType.SHOW_OPTIONS})\n        }\n        this.panelTopPanel.btnPriorities.onClick = () => {\n            if (this.panelTopPanel.btnPriorities.toggleState) {\n                this.panelMain.setMovedIn(true, () => this.panelPriorityList.setMovedIn(false))\n            } else {\n                this.panelPriorityList.setMovedIn(true, () => this.panelMain.setMovedIn(false))\n            }\n        }\n    }\n\n    onProcessMessage(msg: GuiWorkerMessage): boolean {\n        if (msg.type === WorkerMessageType.SPACE_TO_CONINUE) {\n            if (msg.messageState) {\n                this.panelMessages.setMessage(this.panelMessages.msgSpaceToContinue, 0)\n            } else {\n                this.panelMessages.unsetMessage(this.panelMessages.msgSpaceToContinue)\n            }\n        } else {\n            return false\n        }\n        return true\n    }\n\n}\n\nlet workerInstance: GuiWorker = null\n\nconst worker: Worker = self as any\n\nworker.addEventListener('message', (event) => {\n    const msg: GuiWorkerMessage = event.data\n    if (msg.type === WorkerMessageType.INIT) {\n        GuiResourceCache.resourceByName = msg.resourceByName\n        GuiResourceCache.configuration = msg.cfg\n        GuiResourceCache.stats = msg.stats\n        workerInstance = new GuiMainWorker(worker)\n    } else {\n        workerInstance.processMessage(msg)\n    }\n})\n","export const DEV_MODE = process.env.WEBPACK_MODE === 'development'\nexport const WAD_CACHE_DB_NAME = 'RockRaidersWeb'\nexport const JOB_SCHEDULE_INTERVAL = 1000 // milliseconds\nexport const CHECK_CLEAR_RUBBLE_INTERVAL = 5000 // milliseconds\nexport const CHECK_SPAWN_RAIDER_TIMER = 1000 // milliseconds\nexport const MAX_RAIDER_BASE = 12\nexport const MAX_RAIDER_REQUEST = 9\nexport const ADDITIONAL_RAIDER_PER_SUPPORT = 10\nexport const UPDATE_OXYGEN_TIMER = 5000 // milliseconds\nexport const PANEL_ANIMATION_MULTIPLIER = 3\nexport const HEIGHT_MULTIPLIER = 0.1\nexport const SEQUENCE_TEXTURE_FRAMERATE = 5\nexport const KEY_PAN_SPEED = 20\n\n// native constants (do not change)\n\nexport const SPRITE_RESOLUTION_WIDTH = 640\nexport const SPRITE_RESOLUTION_HEIGHT = 480\nexport const TILESIZE = 40\nexport const NATIVE_FRAMERATE = 30\nexport const NATIVE_UPDATE_INTERVAL = 1000 / NATIVE_FRAMERATE\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [495,710], () => (__webpack_require__(101)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".index.js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t87: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkrock_raiders_web\"] = self[\"webpackChunkrock_raiders_web\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"sourceRoot":""}