{"version":3,"sources":["webpack://rock-raiders-web/webpack/runtime/chunk loaded","webpack://rock-raiders-web/webpack/runtime/startup chunk dependencies","webpack://rock-raiders-web/./src/event/EventTypeEnum.ts","webpack://rock-raiders-web/./src/event/LocalEvents.ts","webpack://rock-raiders-web/./src/game/model/EntityType.ts","webpack://rock-raiders-web/./src/game/model/map/SurfaceType.ts","webpack://rock-raiders-web/./src/game/model/raider/RaiderTool.ts","webpack://rock-raiders-web/./src/game/model/raider/RaiderTraining.ts","webpack://rock-raiders-web/./src/core/Rect.ts","webpack://rock-raiders-web/./src/cfg/DialogCfg.ts","webpack://rock-raiders-web/./src/gui/briefing/BriefingPanelCfg.ts","webpack://rock-raiders-web/./src/gui/briefing/BriefingPanel.ts","webpack://rock-raiders-web/./src/gui/overlay/MenuCycleItem.ts","webpack://rock-raiders-web/./src/gui/overlay/MenuLabelItem.ts","webpack://rock-raiders-web/./src/gui/overlay/MenuSliderItem.ts","webpack://rock-raiders-web/./src/gui/overlay/MenuLayer.ts","webpack://rock-raiders-web/./src/gui/overlay/MenuBasePanel.ts","webpack://rock-raiders-web/./src/gui/overlay/OptionsPanel.ts","webpack://rock-raiders-web/./src/gui/overlay/PausePanel.ts","webpack://rock-raiders-web/./src/gui/OverlayWorker.ts","webpack://rock-raiders-web/./src/params.ts","webpack://rock-raiders-web/webpack/bootstrap","webpack://rock-raiders-web/webpack/runtime/define property getters","webpack://rock-raiders-web/webpack/runtime/ensure chunk","webpack://rock-raiders-web/webpack/runtime/get javascript chunk filename","webpack://rock-raiders-web/webpack/runtime/global","webpack://rock-raiders-web/webpack/runtime/hasOwnProperty shorthand","webpack://rock-raiders-web/webpack/runtime/publicPath","webpack://rock-raiders-web/webpack/runtime/importScripts chunk loading","webpack://rock-raiders-web/webpack/startup"],"names":["deferred","next","MOUSE_BUTTON","POINTER_EVENT","KEY_EVENT","SelectPanelType","LocalEvent","eventKey","super","this","isLocal","ChangeCursor","cursor","timeout","PlaySoundEvent","sample","EntityType","SurfaceType","options","shaping","matIndex","floor","selectable","digable","reinforcable","C","cursorFulfiller","statsDrillName","canCarryFence","connectsPath","mapSurfaceColor","Object","assign","typeNum","POWER_PATH_BUILDING","SOLID_ROCK","HARD_ROCK","LOOSE_ROCK","DIRT","LAVA","ORE_SEAM","WATER","CRYSTAL_SEAM","RECHARGE_SEAM","SLUG_HOLE","RUBBLE4","RUBBLE3","RUBBLE2","RUBBLE1","console","error","GROUND","name","POWER_PATH","POWER_PATH_BUILDING_SITE","POWER_PATH_CONSTRUCTION","RaiderTool","DRILL","HAMMER","SHOVEL","SPANNER","FREEZERGUN","LASER","PUSHERGUN","BIRDSCARER","RaiderTraining","DRIVER","ENGINEER","GEOLOGIST","PILOT","SAILOR","DEMOLITION","RaiderTrainingSites","RaiderTrainingStatsProperty","Rect","arr","x","y","w","h","DialogCfg","BaseConfig","cfgObj","image","titleWindow","textWindow","okWindow","cancelWindow","contrastOverlay","lCfgKeyName","cfgValue","endsWith","parseValue","BriefingPanelCfg","PanelCfg","titleFont","GuiResourceCache","title","dialogCfg","textFont","nextButtonCfg","buttonType","relX","relY","normalFile","backButtonCfg","BriefingPanel","Panel","parent","cfg","imgTitle","titleRelX","titleRelY","btnNext","btnBack","imgBack","imgParagraphList","paragraph","imgParagraph","onSetSpaceToContinue","state","log","onStartMission","createTextImage","width","addChild","Button","onClick","nextParagraph","prevParagraph","hidden","reset","setParagraph","objectiveText","objectiveBackImgCfg","filename","xIn","yIn","height","updatePosition","split","map","txt","length","notifyRedraw","show","hide","context","drawImage","onRedraw","MenuCycleItem","BaseElement","itemCfg","labelX","imgTextNormal","loFont","description","imgTextHover","hiFont","imgLabelOffNormal","labelOff","imgLabelOffHover","imgLabelOnNormal","labelOn","imgLabelOnHover","Math","max","cx","cy","stateChanged","checkHover","checkClick","checkRelease","release","img","imgLabel","hover","MenuLabelItem","autoCenter","target","loImg","label","hiImg","menuImage","MenuSliderItem","sliderX","min","value","onValueChanged","imgLeft","imgNormal","imgOff","imgHover","imgOn","imgRight","leftBtn","BaseButtonCfg","btnLeftNormal","btnLeftHover","rightBtn","btnRightNormal","btnRightHover","posX","dw","round","MenuLayer","menuCfg","itemsTrigger","itemsNext","position","titleImage","menuFont","fullName","itemsLabel","forEach","item","actionName","toLowerCase","push","itemsCycle","itemsSlider","MenuBasePanel","layersByKey","Map","menus","index","set","layer","selectLayer","key","get","l","OptionsPanel","onRepeatBriefing","onContinueMission","PausePanel","onContinueGame","onAbortGame","onRestartGame","OverlayWorker","GuiWorker","worker","panelPause","addPanel","rootElement","panelOptions","panelBriefing","setActivePanel","sendResponse","type","WorkerMessageType","messageState","canvas","setCanvas","msg","setup","panel","panels","p","redraw","event","every","handlePointerEvent","result","lEventKey","eventEnum","workerInstance","self","addEventListener","data","resourceByName","stats","processMessage","DEV_MODE","PANEL_ANIMATION_MULTIPLIER","SPRITE_RESOLUTION_WIDTH","SPRITE_RESOLUTION_HEIGHT","NATIVE_FRAMERATE","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","__webpack_exports__","O","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","keys","splice","d","definition","o","defineProperty","enumerable","f","e","chunkId","Promise","all","reduce","promises","u","g","globalThis","Function","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","Error","replace","installedChunks","137","chunkLoadingGlobal","parentChunkLoadingFunction","bind","moreModules","runtime","pop","then"],"mappings":"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","file":"137.index.js","sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tresult = fn();\n\t\t}\n\t}\n\treturn result;\n};","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn Promise.all([\n\t\t__webpack_require__.e(495),\n\t\t__webpack_require__.e(710)\n\t]).then(next);\n};","// noinspection JSUnusedGlobalSymbols\nexport enum MOUSE_BUTTON {\n    MAIN = 0,\n    MIDDLE = 1,\n    SECONDARY = 2\n}\n\nexport enum POINTER_EVENT {\n    MOVE,\n    DOWN,\n    UP,\n}\n\nexport enum KEY_EVENT {\n    DOWN,\n    UP,\n}\n","import { Vector3 } from 'three'\nimport { Sample } from '../audio/Sample'\nimport { EntityManager } from '../game/EntityManager'\nimport { EntityType } from '../game/model/EntityType'\nimport { PriorityEntry } from '../game/model/job/PriorityEntry'\nimport { Surface } from '../game/model/map/Surface'\nimport { SurfaceType } from '../game/model/map/SurfaceType'\nimport { Terrain } from '../game/model/map/Terrain'\nimport { AllRaiderTools, RaiderTool } from '../game/model/raider/RaiderTool'\nimport { AllRaiderTrainings, RaiderTraining } from '../game/model/raider/RaiderTraining'\nimport { MapSurfaceRect } from '../gui/radar/MapSurfaceRect'\nimport { TILESIZE } from '../params'\nimport { Cursor } from '../screen/Cursor'\nimport { EventKey } from './EventKeyEnum'\nimport { GameEvent } from './GameEvent'\n\nexport class LocalEvent extends GameEvent {\n\n    constructor(eventKey: EventKey) {\n        super(eventKey)\n        this.isLocal = true\n    }\n\n}\n\nexport enum SelectPanelType {\n\n    NONE,\n    RAIDER,\n    VEHICLE,\n    BUILDING,\n    SURFACE,\n\n}\n\nexport class SelectionChanged extends LocalEvent {\n\n    selectPanelType: SelectPanelType = SelectPanelType.NONE\n    isGround: boolean\n    isPowerPath: boolean\n    canPlaceFence: boolean\n    isFloor: boolean\n    isSite: boolean\n    hasRubble: boolean\n    isDrillable: boolean\n    isReinforcable: boolean\n    someCarries: boolean\n    everyHasMaxLevel: boolean\n    canDoTraining: Map<RaiderTraining, boolean> = new Map()\n    everyHasTool: Map<RaiderTool, boolean> = new Map()\n    buildingCanUpgrade: boolean\n    buildingCanSwitchPower: boolean\n    vehicleHasCallManJob: boolean\n    allVehicleEmpty: boolean\n\n    constructor(entityMgr: EntityManager) {\n        super(EventKey.SELECTION_CHANGED)\n        if (!entityMgr) return\n        this.selectPanelType = entityMgr.selection.getSelectPanelType()\n        this.isGround = entityMgr.selection.surface?.surfaceType === SurfaceType.GROUND\n        this.isPowerPath = entityMgr.selection.surface?.surfaceType === SurfaceType.POWER_PATH\n        this.isFloor = entityMgr.selection.surface?.surfaceType.floor\n        this.isSite = entityMgr.selection.surface?.surfaceType === SurfaceType.POWER_PATH_CONSTRUCTION || entityMgr.selection.surface?.surfaceType === SurfaceType.POWER_PATH_BUILDING_SITE\n        this.hasRubble = entityMgr.selection.surface?.hasRubble()\n        this.isDrillable = entityMgr.selection.surface?.isDigable()\n        this.isReinforcable = entityMgr.selection.surface?.isReinforcable()\n        this.canPlaceFence = entityMgr.selection.surface?.canPlaceFence() && entityMgr && entityMgr.buildings.some((b) => b.entityType === EntityType.POWER_STATION && b.isUsable())\n        this.someCarries = !!entityMgr.selection.raiders.some((r) => !!r.carries)\n        this.everyHasMaxLevel = !!entityMgr.selection.raiders.every((r) => r.level >= r.stats.Levels)\n        AllRaiderTrainings.forEach((training) => this.canDoTraining.set(training, entityMgr && entityMgr.getTrainingSites(training).length > 0 && entityMgr.selection.raiders.some((r) => !r.hasTraining(training))))\n        AllRaiderTools.forEach((tool) => this.everyHasTool.set(tool, !!entityMgr.selection.raiders.every((r) => r.hasTool(tool))))\n        this.buildingCanUpgrade = entityMgr.selection.building?.canUpgrade()\n        this.buildingCanSwitchPower = !entityMgr.selection.building?.stats.SelfPowered && !entityMgr.selection.building?.stats.PowerBuilding\n        this.vehicleHasCallManJob = entityMgr.selection.vehicles.every((v) => !!v.callManJob)\n        this.allVehicleEmpty = entityMgr.selection.vehicles.every((v) => !v.driver)\n    }\n\n}\n\nexport class DeselectAll extends SelectionChanged {\n\n    constructor() {\n        super(null)\n    }\n\n}\n\nexport class AirLevelChanged extends LocalEvent {\n\n    airLevel: number\n\n    constructor(airLevel: number) {\n        super(EventKey.AIR_LEVEL_CHANGED)\n        this.airLevel = airLevel\n    }\n\n}\n\nexport class ChangeCursor extends LocalEvent {\n\n    cursor: Cursor\n    timeout: number\n\n    constructor(cursor: Cursor, timeout: number = null) {\n        super(EventKey.CHANGE_CURSOR)\n        this.cursor = cursor\n        this.timeout = timeout\n    }\n\n}\n\nexport class SetupPriorityList extends LocalEvent {\n\n    priorityList: PriorityEntry[]\n\n    constructor(priorityList: PriorityEntry[]) {\n        super(EventKey.SETUP_PRIORITY_LIST)\n        this.priorityList = priorityList\n    }\n\n}\n\nexport class BuildingsChangedEvent extends LocalEvent {\n\n    usableBuildingsByTypeAndLevel: Map<EntityType, Map<number, number>> = new Map()\n\n    constructor(entityMgr: EntityManager) {\n        super(EventKey.BUILDINGS_CHANGED)\n        entityMgr.buildings.forEach((b) => {\n            if (b.isUsable()) {\n                const perLevel = this.usableBuildingsByTypeAndLevel.getOrUpdate(b.entityType, () => new Map())\n                perLevel.set(b.level, perLevel.getOrUpdate(b.level, () => 0) + 1)\n            }\n        })\n    }\n\n    static countUsable(event: BuildingsChangedEvent, building: EntityType, minLevel: number = 0) {\n        let result = 0\n        event.usableBuildingsByTypeAndLevel.getOrUpdate(building, () => new Map()).forEach((count, level) => {\n            if (level >= minLevel) result += count\n        })\n        return result\n    }\n\n}\n\nexport class RaidersChangedEvent extends LocalEvent {\n\n    numRaiders: number\n    training: RaiderTraining\n\n    constructor(entityMgr: EntityManager, training: RaiderTraining = null) {\n        super(EventKey.RAIDERS_CHANGED)\n        this.numRaiders = entityMgr.raiders.length\n        this.training = training\n    }\n\n}\n\nexport class VehiclesChangedEvent extends LocalEvent {\n\n    constructor() {\n        super(EventKey.VEHICLES_CHANGED)\n    }\n\n}\n\nexport class PlaySoundEvent extends LocalEvent {\n\n    sample: Sample\n\n    constructor(sample: Sample) {\n        super(EventKey.PLAY_SOUND)\n        this.sample = sample\n    }\n\n}\n\nexport class UpdateRadarTerrain extends LocalEvent {\n\n    surfaces: MapSurfaceRect[] = []\n    tileX: number\n    tileY: number\n\n    constructor(terrain: Terrain, mapFocus: Vector3) {\n        super(EventKey.UPDATE_RADAR_TERRAIN)\n        terrain.forEachSurface((s) => {\n            if (s.discovered) {\n                this.surfaces.push(new MapSurfaceRect(s))\n            }\n        })\n        this.tileX = Math.floor(mapFocus.x / TILESIZE)\n        this.tileY = Math.floor(mapFocus.z / TILESIZE)\n    }\n\n}\n\nexport class UpdateRadarSurface extends LocalEvent {\n\n    surfaceRect: MapSurfaceRect\n\n    constructor(surface: Surface) {\n        super(EventKey.UPDATE_RADAR_SURFACE)\n        this.surfaceRect = new MapSurfaceRect(surface)\n    }\n\n}\n","export enum EntityType {\n\n    // RAIDER\n    PILOT,\n\n    // BUILDING\n    TOOLSTATION,\n    TELEPORT_PAD,\n    DOCKS,\n    POWER_STATION,\n    BARRACKS,\n    UPGRADE,\n    GEODOME,\n    ORE_REFINERY,\n    GUNSTATION,\n    TELEPORT_BIG,\n\n    // MONSTER\n    BAT,\n    SMALL_SPIDER,\n    ROCK_MONSTER,\n    ICE_MONSTER,\n    LAVA_MONSTER,\n\n    // MATERIAL\n    DYNAMITE,\n    ELECTRIC_FENCE,\n    CRYSTAL,\n    ORE,\n    BRICK,\n    BARRIER,\n\n    // VEHICLE\n    HOVERBOARD,\n    SMALL_DIGGER,\n    SMALL_TRUCK,\n    SMALL_CAT,\n    SMALL_MLP,\n    SMALL_HELI,\n    BULLDOZER,\n    WALKER_DIGGER,\n    LARGE_MLP,\n    LARGE_DIGGER,\n    LARGE_CAT,\n\n    // OTHERS\n    TV_CAMERA,\n\n}\n\nexport function getEntityTypeByName(type: string): EntityType {\n    if ('Pilot'.equalsIgnoreCase(type)) {\n        return EntityType.PILOT\n    } else if ('Toolstation'.equalsIgnoreCase(type)) {\n        return EntityType.TOOLSTATION\n    } else if ('TeleportPad'.equalsIgnoreCase(type)) {\n        return EntityType.TELEPORT_PAD\n    } else if ('Docks'.equalsIgnoreCase(type)) {\n        return EntityType.DOCKS\n    } else if ('PowerStation'.equalsIgnoreCase(type)) {\n        return EntityType.POWER_STATION\n    } else if ('Barracks'.equalsIgnoreCase(type)) {\n        return EntityType.BARRACKS\n    } else if ('Upgrade'.equalsIgnoreCase(type)) {\n        return EntityType.UPGRADE\n    } else if ('GEO-Dome'.equalsIgnoreCase(type)) {\n        return EntityType.GEODOME\n    } else if ('OreRefinery'.equalsIgnoreCase(type)) {\n        return EntityType.ORE_REFINERY\n    } else if ('GunStation'.equalsIgnoreCase(type)) {\n        return EntityType.GUNSTATION\n    } else if ('TeleportBIG'.equalsIgnoreCase(type)) {\n        return EntityType.TELEPORT_BIG\n    } else if ('Bat'.equalsIgnoreCase(type)) {\n        return EntityType.BAT\n    } else if ('SmallSpider'.equalsIgnoreCase(type)) {\n        return EntityType.SMALL_SPIDER\n    } else if ('RockMonster'.equalsIgnoreCase(type)) {\n        return EntityType.ROCK_MONSTER\n    } else if ('IceMonster'.equalsIgnoreCase(type)) {\n        return EntityType.ICE_MONSTER\n    } else if ('LavaMonster'.equalsIgnoreCase(type)) {\n        return EntityType.LAVA_MONSTER\n    } else if ('Dynamite'.equalsIgnoreCase(type)) {\n        return EntityType.DYNAMITE\n    } else if ('EletricFence'.equalsIgnoreCase(type)) {\n        return EntityType.ELECTRIC_FENCE\n    } else if ('PowerCrystal'.equalsIgnoreCase(type)) {\n        return EntityType.CRYSTAL\n    } else if ('Ore'.equalsIgnoreCase(type)) {\n        return EntityType.ORE\n    } else if ('Brick'.equalsIgnoreCase(type)) {\n        return EntityType.BRICK\n    } else if ('Barrier'.equalsIgnoreCase(type)) {\n        return EntityType.BARRIER\n    } else if ('Hoverboard'.equalsIgnoreCase(type)) {\n        return EntityType.HOVERBOARD\n    } else if ('SmallDigger'.equalsIgnoreCase(type)) {\n        return EntityType.SMALL_DIGGER\n    } else if ('SamllTruck'.equalsIgnoreCase(type)) {\n        return EntityType.SMALL_TRUCK\n    } else if ('SmallCat'.equalsIgnoreCase(type)) {\n        return EntityType.SMALL_CAT\n    } else if ('SmallMLP'.equalsIgnoreCase(type)) {\n        return EntityType.SMALL_MLP\n    } else if ('SmallHeli'.equalsIgnoreCase(type)) {\n        return EntityType.SMALL_HELI\n    } else if ('Bulldozer'.equalsIgnoreCase(type)) {\n        return EntityType.BULLDOZER\n    } else if ('WalkerDigger'.equalsIgnoreCase(type)) {\n        return EntityType.WALKER_DIGGER\n    } else if ('LargeMLP'.equalsIgnoreCase(type)) {\n        return EntityType.LARGE_MLP\n    } else if ('LargeDigger'.equalsIgnoreCase(type)) {\n        return EntityType.LARGE_DIGGER\n    } else if ('LargeCat'.equalsIgnoreCase(type)) {\n        return EntityType.LARGE_CAT\n    } else if ('TVCamera'.equalsIgnoreCase(type)) {\n        return EntityType.TV_CAMERA\n    } else {\n        console.error('Could not identify entity type from string: ' + type)\n        return null\n    }\n}\n","import { Cursor } from '../../../screen/Cursor'\n\nexport class SurfaceType {\n\n    name: string // human readable, maybe used as label later on\n    shaping: boolean = false\n    matIndex: string = '00'\n    floor: boolean = false\n    selectable: boolean = false\n    digable: boolean = false\n    reinforcable: boolean = false\n    cursor: Cursor = Cursor.Pointer_Standard\n    cursorFulfiller: Cursor = Cursor.Pointer_Standard\n    statsDrillName: string = null\n    canCarryFence: boolean = false\n    connectsPath: boolean = false\n    mapSurfaceColor: string = '#00FFFF'\n\n    constructor(options: Partial<SurfaceType> = {}) {\n        Object.assign(this, options)\n    }\n\n    static readonly GROUND = new SurfaceType({\n        name: 'ground',\n        floor: true,\n        selectable: true,\n        canCarryFence: true,\n        cursorFulfiller: Cursor.Pointer_LegoManGo,\n        mapSurfaceColor: '#280048',\n    })\n    static readonly SOLID_ROCK = new SurfaceType({\n        name: 'solid rock',\n        shaping: true,\n        matIndex: '5',\n        cursor: Cursor.Pointer_SurfaceType_Immovable,\n        mapSurfaceColor: '#500090',\n    })\n    static readonly HARD_ROCK = new SurfaceType({\n        name: 'hard rock',\n        shaping: true,\n        matIndex: '4',\n        selectable: true,\n        digable: true,\n        reinforcable: true,\n        cursor: Cursor.Pointer_SurfaceType_Hard,\n        statsDrillName: 'HardDrillTime',\n        mapSurfaceColor: '#7000B0',\n    })\n    static readonly LOOSE_ROCK = new SurfaceType({\n        name: 'loose rock',\n        shaping: true,\n        matIndex: '3',\n        selectable: true,\n        digable: true,\n        reinforcable: true,\n        cursor: Cursor.Pointer_SurfaceType_Medium,\n        statsDrillName: 'LooseDrillTime',\n        mapSurfaceColor: '#9000D0',\n    })\n    static readonly DIRT = new SurfaceType({\n        name: 'dirt',\n        shaping: true,\n        matIndex: '2',\n        selectable: true,\n        digable: true,\n        reinforcable: true,\n        cursor: Cursor.Pointer_SurfaceType_Loose,\n        statsDrillName: 'SoilDrillTime',\n        mapSurfaceColor: '#B000F0',\n    })\n    static readonly SLUG_HOLE = new SurfaceType({\n        name: 'slug hole',\n        floor: true,\n        matIndex: '30',\n        mapSurfaceColor: '#280048',\n    })\n    static readonly LAVA = new SurfaceType({name: 'lava', floor: true, matIndex: '46'})\n    static readonly ORE_SEAM = new SurfaceType({\n        name: 'ore seam',\n        matIndex: '40',\n        selectable: true,\n        digable: true,\n        reinforcable: true,\n        cursor: Cursor.Pointer_SurfaceType_OreSeam,\n        statsDrillName: 'SeamDrillTime',\n    })\n    static readonly WATER = new SurfaceType({name: 'water', floor: true, matIndex: '45', mapSurfaceColor: '#000080'})\n    static readonly CRYSTAL_SEAM = new SurfaceType({\n        name: 'energy crystal seam',\n        matIndex: '20',\n        selectable: true,\n        digable: true,\n        reinforcable: true,\n        cursor: Cursor.Pointer_SurfaceType_CrystalSeam,\n        statsDrillName: 'SeamDrillTime',\n    })\n    static readonly RECHARGE_SEAM = new SurfaceType({\n        name: 'recharge seam',\n        matIndex: '67',\n        cursor: Cursor.Pointer_SurfaceType_RechargeSeam,\n    })\n    static readonly POWER_PATH = new SurfaceType({\n        name: 'power path all',\n        floor: true,\n        matIndex: '60',\n        selectable: true,\n        canCarryFence: true,\n        connectsPath: true,\n        mapSurfaceColor: '#FFFF00',\n    })\n    static readonly POWER_PATH_BUILDING_SITE = new SurfaceType({\n        name: 'power path building site',\n        floor: true,\n        matIndex: '61',\n        selectable: true,\n        canCarryFence: true,\n    })\n    static readonly POWER_PATH_BUILDING = new SurfaceType({\n        name: 'power path building',\n        floor: true,\n        matIndex: '76',\n        connectsPath: true,\n        mapSurfaceColor: '#B8BBB8',\n    })\n    static readonly POWER_PATH_CONSTRUCTION = new SurfaceType({\n        name: 'power path construction',\n        floor: true,\n        matIndex: '76',\n        selectable: true,\n        connectsPath: true,\n        mapSurfaceColor: '#B8BBB8',\n    })\n    static readonly RUBBLE1 = new SurfaceType({\n        name: 'rubble 1',\n        floor: true,\n        matIndex: '13',\n        selectable: true,\n        canCarryFence: true,\n        cursorFulfiller: Cursor.Pointer_Clear,\n        mapSurfaceColor: '#280048',\n    })\n    static readonly RUBBLE2 = new SurfaceType({\n        name: 'rubble 2',\n        floor: true,\n        matIndex: '12',\n        selectable: true,\n        canCarryFence: true,\n        cursorFulfiller: Cursor.Pointer_Clear,\n        mapSurfaceColor: '#280048',\n    })\n    static readonly RUBBLE3 = new SurfaceType({\n        name: 'rubble 3',\n        floor: true,\n        matIndex: '11',\n        selectable: true,\n        canCarryFence: true,\n        cursorFulfiller: Cursor.Pointer_Clear,\n        mapSurfaceColor: '#280048',\n    })\n    static readonly RUBBLE4 = new SurfaceType({\n        name: 'rubble 4',\n        floor: true,\n        matIndex: '10',\n        selectable: true,\n        canCarryFence: true,\n        cursorFulfiller: Cursor.Pointer_Clear,\n        mapSurfaceColor: '#280048',\n    })\n\n    static getByNum(typeNum: number) {\n        switch (typeNum) {\n            case 0:\n                return SurfaceType.POWER_PATH_BUILDING\n            case 1:\n                return SurfaceType.SOLID_ROCK\n            case 2:\n                return SurfaceType.HARD_ROCK\n            case 3:\n                return SurfaceType.LOOSE_ROCK\n            case 4:\n            case 5: // soil(5) was removed pre-release, so replace it with dirt(4)\n                return SurfaceType.DIRT\n            case 6:\n                return SurfaceType.LAVA\n            case 8:\n                return SurfaceType.ORE_SEAM\n            case 9:\n                return SurfaceType.WATER\n            case 10:\n                return SurfaceType.CRYSTAL_SEAM\n            case 11:\n                return SurfaceType.RECHARGE_SEAM\n            case 30:\n            case 40:\n                return SurfaceType.SLUG_HOLE\n            case 100:\n                return SurfaceType.RUBBLE4\n            case 101:\n                return SurfaceType.RUBBLE3\n            case 102:\n                return SurfaceType.RUBBLE2\n            case 103:\n                return SurfaceType.RUBBLE1\n            default:\n                console.error('Unexpected surface type num: ' + typeNum)\n                return SurfaceType.SOLID_ROCK\n        }\n    }\n}\n","export enum RaiderTool {\n    NONE,\n    DRILL,\n    HAMMER,\n    SHOVEL,\n    SPANNER,\n    FREEZERGUN,\n    LASER,\n    PUSHERGUN,\n    BIRDSCARER,\n}\n\nexport const AllRaiderTools: RaiderTool[] = [\n    RaiderTool.DRILL,\n    RaiderTool.HAMMER,\n    RaiderTool.SHOVEL,\n    RaiderTool.SPANNER,\n    RaiderTool.FREEZERGUN,\n    RaiderTool.LASER,\n    RaiderTool.PUSHERGUN,\n    RaiderTool.BIRDSCARER,\n]\n","import { EntityType } from '../EntityType'\n\nexport enum RaiderTraining {\n    NONE,\n    DRIVER,\n    ENGINEER,\n    GEOLOGIST,\n    PILOT,\n    SAILOR,\n    DEMOLITION,\n}\n\nexport const AllRaiderTrainings: RaiderTraining[] = [\n    RaiderTraining.DRIVER,\n    RaiderTraining.ENGINEER,\n    RaiderTraining.GEOLOGIST,\n    RaiderTraining.PILOT,\n    RaiderTraining.SAILOR,\n    RaiderTraining.DEMOLITION,\n]\n\nexport const RaiderTrainingSites: EntityType[] = []\nRaiderTrainingSites[RaiderTraining.DRIVER] = EntityType.BARRACKS\nRaiderTrainingSites[RaiderTraining.DRIVER] = EntityType.BARRACKS\nRaiderTrainingSites[RaiderTraining.ENGINEER] = EntityType.UPGRADE\nRaiderTrainingSites[RaiderTraining.GEOLOGIST] = EntityType.GEODOME\nRaiderTrainingSites[RaiderTraining.PILOT] = EntityType.TELEPORT_PAD\nRaiderTrainingSites[RaiderTraining.SAILOR] = EntityType.DOCKS\nRaiderTrainingSites[RaiderTraining.DEMOLITION] = EntityType.TOOLSTATION\n\nexport const RaiderTrainingStatsProperty: string[] = []\nRaiderTrainingStatsProperty[RaiderTraining.DRIVER] = 'TrainDriver'\nRaiderTrainingStatsProperty[RaiderTraining.ENGINEER] = 'TrainRepair'\nRaiderTrainingStatsProperty[RaiderTraining.GEOLOGIST] = 'TrainScanner'\nRaiderTrainingStatsProperty[RaiderTraining.PILOT] = 'TrainPilot'\nRaiderTrainingStatsProperty[RaiderTraining.SAILOR] = 'TrainSailor'\nRaiderTrainingStatsProperty[RaiderTraining.DEMOLITION] = 'TrainDynamite'\n","export class Rect {\n\n    x: number = 0\n    y: number = 0\n    w: number = 0\n    h: number = 0\n\n    constructor(arr: number[]) {\n        [this.x, this.y, this.w, this.h] = arr\n    }\n\n}\n","import { Rect } from '../core/Rect'\nimport { BaseConfig } from './BaseConfig'\n\nexport class DialogCfg extends BaseConfig {\n\n    image: string = null\n    titleWindow: Rect = null\n    textWindow: Rect = null\n    okWindow: Rect = null\n    cancelWindow: Rect = null\n    contrastOverlay: string = null // not used in the game\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n    parseValue(lCfgKeyName: string, cfgValue: any): any {\n        if (lCfgKeyName.endsWith('window')) {\n            return new Rect(cfgValue)\n        }\n        return super.parseValue(lCfgKeyName, cfgValue)\n    }\n\n}\n","import { ButtonCfg } from '../../cfg/ButtonCfg'\nimport { DialogCfg } from '../../cfg/DialogCfg'\nimport { PanelCfg } from '../../cfg/PanelCfg'\nimport { BitmapFont } from '../../core/BitmapFont'\nimport { Rect } from '../../core/Rect'\nimport { GuiResourceCache } from '../GuiResourceCache'\n\nexport class BriefingPanelCfg extends PanelCfg {\n\n    // XXX find config values for this class\n\n    titleFont: BitmapFont\n    title: string\n    titleWindow: Rect\n    textFont: BitmapFont\n    textWindow: Rect\n    nextButtonCfg: ButtonCfg\n    backButtonCfg: ButtonCfg\n\n    constructor() {\n        super([])\n        this.titleFont = GuiResourceCache.getBitmapFont('Interface/Fonts/MbriefFont2.bmp')\n        this.title = GuiResourceCache.cfg('Main', 'MissionBriefingText')\n        const dialogCfg = new DialogCfg(GuiResourceCache.cfg('Dialog'))\n        this.titleWindow = dialogCfg.titleWindow\n        this.textFont = GuiResourceCache.getBitmapFont('Interface/Fonts/MbriefFont.bmp')\n        this.textWindow = dialogCfg.textWindow\n        this.textWindow.y -= 10\n        this.nextButtonCfg = {\n            buttonType: 'Next briefing paragraph',\n            relX: 394,\n            relY: 214,\n            normalFile: GuiResourceCache.cfg('Main', 'NextButton640x480'),\n        }\n        this.backButtonCfg = {\n            buttonType: 'Previous briefing paragraph',\n            relX: 54,\n            relY: 214,\n            normalFile: GuiResourceCache.cfg('Main', 'BackArrow'),\n        }\n    }\n\n}\n","import { ObjectiveImageCfg } from '../../cfg/ObjectiveImageCfg'\nimport { BaseElement } from '../base/BaseElement'\nimport { Button } from '../base/Button'\nimport { Panel } from '../base/Panel'\nimport { GuiResourceCache } from '../GuiResourceCache'\nimport { BriefingPanelCfg } from './BriefingPanelCfg'\n\nexport class BriefingPanel extends Panel {\n\n    cfg: BriefingPanelCfg = null\n    imgTitle: SpriteImage = null\n    titleRelX: number = 0\n    titleRelY: number = 0\n    btnNext: Button = null\n    btnBack: Button = null\n    imgBack: SpriteImage = null\n    imgParagraphList: SpriteImage[] = []\n    paragraph: number = 0\n    imgParagraph: SpriteImage = null\n    onSetSpaceToContinue: (state: boolean) => any = (state: boolean) => console.log('Message: press space to continue = ' + state)\n    onStartMission: () => any = () => console.log('Start mission')\n\n    constructor(parent: BaseElement) {\n        super(parent)\n        this.cfg = new BriefingPanelCfg()\n        this.imgTitle = this.cfg.titleFont.createTextImage(this.cfg.title)\n        this.titleRelX = this.cfg.titleWindow.x + (this.cfg.titleWindow.w - this.imgTitle.width) / 2\n        this.titleRelY = this.cfg.titleWindow.y\n        this.btnNext = this.addChild(new Button(this, this.cfg.nextButtonCfg))\n        this.btnNext.onClick = () => this.nextParagraph()\n        this.btnBack = this.addChild(new Button(this, this.cfg.backButtonCfg))\n        this.btnBack.onClick = () => this.prevParagraph()\n        this.hidden = true\n    }\n\n    reset() {\n        super.reset()\n        this.hidden = true\n        this.setParagraph(0)\n    }\n\n    setup(objectiveText: string, objectiveBackImgCfg: ObjectiveImageCfg) {\n        this.imgBack = GuiResourceCache.getImageOrNull(objectiveBackImgCfg.filename)\n        this.xIn = objectiveBackImgCfg.x\n        this.yIn = objectiveBackImgCfg.y\n        this.width = this.imgBack.width\n        this.height = this.imgBack.height\n        this.updatePosition()\n        this.imgParagraphList = objectiveText.split('\\\\a').map(txt => this.cfg.textFont.createTextImage(txt, this.cfg.textWindow.w, false))\n    }\n\n    setParagraph(paragraph: number) {\n        if (paragraph < 0) return\n        if (paragraph > this.imgParagraphList.length - 1) {\n            this.onStartMission()\n            return\n        }\n        this.paragraph = paragraph\n        this.imgParagraph = this.imgParagraphList[this.paragraph]\n        this.btnNext.hidden = this.paragraph >= this.imgParagraphList.length - 1\n        this.btnBack.hidden = this.paragraph < 1\n        this.notifyRedraw()\n    }\n\n    nextParagraph() {\n        this.setParagraph(this.paragraph + 1)\n    }\n\n    prevParagraph() {\n        this.setParagraph(this.paragraph - 1)\n    }\n\n    show() {\n        super.show()\n        this.setParagraph(0)\n        this.btnNext.hidden = this.paragraph >= this.imgParagraphList.length - 1\n        this.btnBack.hidden = this.paragraph < 1\n        this.onSetSpaceToContinue(true)\n    }\n\n    hide() {\n        super.hide()\n        this.onSetSpaceToContinue(false)\n    }\n\n    onRedraw(context: SpriteContext) {\n        if (this.hidden) return\n        if (this.imgBack) context.drawImage(this.imgBack, this.x, this.y)\n        if (this.imgTitle) context.drawImage(this.imgTitle, this.x + this.titleRelX, this.y + this.titleRelY)\n        if (this.imgParagraph) context.drawImage(this.imgParagraph, this.x + this.cfg.textWindow.x, this.y + this.cfg.textWindow.y)\n        super.onRedraw(context)\n    }\n\n}\n","import { MenuCycleItemCfg } from '../../cfg/MenuCycleItemCfg'\nimport { BaseElement } from '../base/BaseElement'\nimport { MenuLayer } from './MenuLayer'\n\nexport class MenuCycleItem extends BaseElement {\n\n    imgTextNormal: SpriteImage\n    imgTextHover: SpriteImage\n    imgLabelOnNormal: SpriteImage // TODO only toggle state with clicks on label\n    imgLabelOffNormal: SpriteImage // TODO use button?\n    imgLabelOnHover: SpriteImage\n    imgLabelOffHover: SpriteImage\n\n    labelX: number = 0\n    state: boolean = false\n\n    constructor(parent: MenuLayer, itemCfg: MenuCycleItemCfg) {\n        super(parent)\n        this.relX = itemCfg.x\n        this.relY = itemCfg.y\n        this.labelX = itemCfg.width\n        this.imgTextNormal = parent.loFont.createTextImage(itemCfg.description)\n        this.imgTextHover = parent.hiFont.createTextImage(itemCfg.description)\n        this.imgLabelOffNormal = parent.loFont.createTextImage(itemCfg.labelOff)\n        this.imgLabelOffHover = parent.hiFont.createTextImage(itemCfg.labelOff)\n        this.imgLabelOnNormal = parent.loFont.createTextImage(itemCfg.labelOn)\n        this.imgLabelOnHover = parent.hiFont.createTextImage(itemCfg.labelOn)\n        this.width = itemCfg.width + Math.max(this.imgLabelOnHover.width, this.imgLabelOffHover.width)\n        this.height = this.imgTextNormal.height\n        this.onClick = () => {\n            this.state = !this.state\n            console.log('TODO: cycle item clicked; state: ' + this.state)\n        }\n    }\n\n    checkHover(cx, cy): boolean {\n        const stateChanged = super.checkHover(cx, cy)\n        if (stateChanged) this.notifyRedraw()\n        return stateChanged\n    }\n\n    checkClick(cx, cy): boolean {\n        const stateChanged = super.checkClick(cx, cy)\n        if (stateChanged) this.notifyRedraw()\n        return stateChanged\n    }\n\n    checkRelease(cx, cy): boolean {\n        const stateChanged = super.checkRelease(cx, cy)\n        if (stateChanged) this.notifyRedraw()\n        return stateChanged\n    }\n\n    release(): boolean {\n        const stateChanged = super.release()\n        if (stateChanged) this.notifyRedraw()\n        return stateChanged\n    }\n\n    onRedraw(context: SpriteContext) {\n        if (this.hidden) return\n        let img = this.imgTextNormal\n        let imgLabel = this.state ? this.imgLabelOnNormal : this.imgLabelOffNormal\n        if (this.hover) {\n            img = this.imgTextHover\n            imgLabel = this.state ? this.imgLabelOnHover : this.imgLabelOffHover\n        }\n        context.drawImage(img, this.x, this.y)\n        context.drawImage(imgLabel, this.x + this.labelX, this.y)\n        super.onRedraw(context)\n    }\n\n}\n","import { MenuLabelItemCfg } from '../../cfg/MenuLabelItemCfg'\nimport { BaseElement } from '../base/BaseElement'\nimport { MenuLayer } from './MenuLayer'\n\nexport class MenuLabelItem extends BaseElement {\n\n    target: string\n    loImg: SpriteImage\n    hiImg: SpriteImage\n\n    constructor(parent: MenuLayer, itemCfg: MenuLabelItemCfg, autoCenter: boolean) {\n        super(parent)\n        this.target = itemCfg.target\n        this.loImg = parent.loFont.createTextImage(itemCfg.label)\n        this.hiImg = parent.hiFont.createTextImage(itemCfg.label)\n        this.width = this.loImg.width\n        this.height = this.loImg.height\n        this.relX = autoCenter ? -parent.relX + (parent.menuImage.width - this.width) / 2 : itemCfg.x\n        this.relY = itemCfg.y\n    }\n\n    checkHover(cx, cy): boolean {\n        const stateChanged = super.checkHover(cx, cy)\n        if (stateChanged) this.notifyRedraw()\n        return stateChanged\n    }\n\n    checkClick(cx, cy): boolean {\n        const stateChanged = super.checkClick(cx, cy)\n        if (stateChanged) this.notifyRedraw()\n        return stateChanged\n    }\n\n    checkRelease(cx, cy): boolean {\n        const stateChanged = super.checkRelease(cx, cy)\n        if (stateChanged) this.notifyRedraw()\n        return stateChanged\n    }\n\n    release(): boolean {\n        const stateChanged = super.release()\n        if (stateChanged) this.notifyRedraw()\n        return stateChanged\n    }\n\n    onRedraw(context: SpriteContext) {\n        if (this.hidden) return\n        if (this.hover) {\n            context.drawImage(this.hiImg, this.x, this.y)\n        } else {\n            context.drawImage(this.loImg, this.x, this.y)\n        }\n        super.onRedraw(context)\n    }\n\n}\n","import { BaseButtonCfg } from '../../cfg/BaseButtonCfg'\nimport { MenuSliderItemCfg } from '../../cfg/MenuSliderItemCfg'\nimport { BaseElement } from '../base/BaseElement'\nimport { Button } from '../base/Button'\nimport { GuiResourceCache } from '../GuiResourceCache'\nimport { MenuLayer } from './MenuLayer'\n\nexport class MenuSliderItem extends BaseElement {\n\n    imgTextNormal: SpriteImage\n    imgTextHover: SpriteImage\n    imgLeft: SpriteImage\n    imgNormal: SpriteImage\n    imgHover: SpriteImage\n    imgRight: SpriteImage\n    sliderX: number = 0\n    min: number = 0\n    max: number = 1\n    value: number = 0\n    onValueChanged: (value: number) => any = (value) => console.log('value changed to: ' + value)\n\n    constructor(parent: MenuLayer, itemCfg: MenuSliderItemCfg) {\n        super(parent)\n        this.relX = itemCfg.x\n        this.relY = itemCfg.y\n        this.sliderX = itemCfg.width\n        this.imgLeft = GuiResourceCache.getImage(itemCfg.imgLeft)\n        this.imgNormal = GuiResourceCache.getImage(itemCfg.imgOff)\n        this.imgHover = GuiResourceCache.getImage(itemCfg.imgOn)\n        this.imgRight = GuiResourceCache.getImage(itemCfg.imgRight)\n        const leftBtn = this.addChild(new Button(this, new BaseButtonCfg()))\n        leftBtn.imgNormal = GuiResourceCache.getImage(itemCfg.btnLeftNormal)\n        leftBtn.imgHover = GuiResourceCache.getImage(itemCfg.btnLeftHover)\n        leftBtn.relX = this.sliderX - this.imgLeft.width - leftBtn.imgHover.width\n        leftBtn.width = leftBtn.imgHover.width\n        leftBtn.height = leftBtn.imgHover.height\n        leftBtn.updatePosition()\n        leftBtn.onClick = () => {\n            if (this.value > this.min) {\n                this.value--\n                this.onValueChanged(this.value)\n            }\n        }\n        const rightBtn = this.addChild(new Button(this, new BaseButtonCfg()))\n        rightBtn.imgNormal = GuiResourceCache.getImage(itemCfg.btnRightNormal)\n        rightBtn.imgHover = GuiResourceCache.getImage(itemCfg.btnRightHover)\n        rightBtn.relX = this.sliderX + this.imgNormal.width + this.imgRight.width * 2\n        rightBtn.width = rightBtn.imgHover.width\n        rightBtn.height = rightBtn.imgHover.height\n        rightBtn.updatePosition()\n        rightBtn.onClick = () => {\n            if (this.value < this.max) {\n                this.value++\n                this.onValueChanged(this.value)\n            }\n        }\n        this.width = itemCfg.width + leftBtn.imgHover.width + this.imgLeft.width + this.imgNormal.width + this.imgRight.width * 2 + rightBtn.imgHover.width\n        this.min = itemCfg.min\n        this.max = itemCfg.max || 1\n        this.value = this.min // TODO set default value\n        this.imgTextNormal = parent.loFont.createTextImage(itemCfg.description)\n        this.imgTextHover = parent.hiFont.createTextImage(itemCfg.description)\n        this.height = this.imgTextNormal.height\n    }\n\n    checkHover(cx, cy): boolean {\n        const stateChanged = super.checkHover(cx, cy)\n        if (stateChanged) this.notifyRedraw()\n        return stateChanged\n    }\n\n    onRedraw(context: SpriteContext) {\n        if (this.hidden) return\n        let img = this.imgTextNormal\n        if (this.hover) {\n            img = this.imgTextHover\n        }\n        context.drawImage(img, this.x, this.y)\n        let posX = this.x + this.sliderX\n        context.drawImage(this.imgLeft, posX, this.y)\n        context.drawImage(this.imgNormal, posX, this.y)\n        const dw = Math.round(this.value / this.max * this.imgHover.width)\n        context.drawImage(this.imgHover, 0, 0, dw, this.imgHover.height, posX, this.y, dw, this.imgHover.height)\n        posX += this.imgNormal.width\n        context.drawImage(this.imgRight, posX, this.y)\n        super.onRedraw(context)\n    }\n\n}\n","import { MenuEntryCfg } from '../../cfg/MenuEntryCfg'\nimport { BitmapFont } from '../../core/BitmapFont'\nimport { SPRITE_RESOLUTION_HEIGHT, SPRITE_RESOLUTION_WIDTH } from '../../params'\nimport { BaseElement } from '../base/BaseElement'\nimport { GuiResourceCache } from '../GuiResourceCache'\nimport { MenuCycleItem } from './MenuCycleItem'\nimport { MenuLabelItem } from './MenuLabelItem'\nimport { MenuSliderItem } from './MenuSliderItem'\n\nexport class MenuLayer extends BaseElement {\n\n    menuImage: SpriteImage\n    titleImage: SpriteImage\n    loFont: BitmapFont\n    hiFont: BitmapFont\n    itemsTrigger: MenuLabelItem[] = []\n    itemsNext: MenuLabelItem[] = []\n\n    constructor(parent: BaseElement, menuCfg: MenuEntryCfg) {\n        super(parent)\n        this.relX = menuCfg.position[0]\n        this.relY = menuCfg.position[1]\n        this.menuImage = GuiResourceCache.getImageOrNull(menuCfg.menuImage[0]) // menuImage has 4 parameter here\n        this.titleImage = GuiResourceCache.getBitmapFont(menuCfg.menuFont).createTextImage(menuCfg.fullName)\n        this.loFont = GuiResourceCache.getBitmapFont(menuCfg.loFont)\n        this.hiFont = GuiResourceCache.getBitmapFont(menuCfg.hiFont)\n        menuCfg.itemsLabel.forEach((itemCfg) => {\n            const item = this.addChild(new MenuLabelItem(this, itemCfg, menuCfg.autoCenter))\n            if (itemCfg.actionName.toLowerCase() === 'trigger') {\n                this.itemsTrigger.push(item)\n            } else {\n                this.itemsNext.push(item)\n            }\n        })\n        menuCfg.itemsCycle.forEach((itemCfg) => this.addChild(new MenuCycleItem(this, itemCfg)))\n        menuCfg.itemsSlider.forEach((itemCfg) => this.addChild(new MenuSliderItem(this, itemCfg)))\n        this.hidden = true\n    }\n\n    reset() {\n        super.reset()\n        this.hidden = true\n    }\n\n    onRedraw(context: SpriteContext) {\n        if (this.hidden) return\n        context.drawImage(this.menuImage, (SPRITE_RESOLUTION_WIDTH - this.menuImage.width) / 2, (SPRITE_RESOLUTION_HEIGHT - this.menuImage.height) / 2)\n        context.drawImage(this.titleImage, (SPRITE_RESOLUTION_WIDTH - this.titleImage.width) / 2, this.y)\n        super.onRedraw(context)\n    }\n\n}\n","import { MenuCfg } from '../../cfg/MenuCfg'\nimport { BaseElement } from '../base/BaseElement'\nimport { Panel } from '../base/Panel'\nimport { MenuLayer } from './MenuLayer'\n\nexport class MenuBasePanel extends Panel {\n\n    layersByKey: Map<string, MenuLayer> = new Map()\n\n    constructor(parent: BaseElement, cfg: MenuCfg) {\n        super(parent)\n        this.hidden = true\n        cfg.menus.forEach((menuCfg, index) => this.layersByKey.set('menu' + (index + 1), this.addChild(new MenuLayer(this, menuCfg))))\n        this.layersByKey.forEach((layer) => layer.itemsNext.forEach((item) => item.onClick = () => this.selectLayer(item.target)))\n    }\n\n    reset() {\n        super.reset()\n        this.hidden = true\n    }\n\n    show() {\n        this.hidden = false\n        this.selectLayer('menu1')\n    }\n\n    hide() {\n        super.hide()\n        this.notifyRedraw()\n    }\n\n    selectLayer(key: string) {\n        const layer = this.layersByKey.get(key.toLowerCase())\n        this.layersByKey.forEach(l => l !== layer && l.hide())\n        layer.show()\n        this.notifyRedraw()\n    }\n\n}\n","import { MenuCfg } from '../../cfg/MenuCfg'\nimport { BaseElement } from '../base/BaseElement'\nimport { MenuBasePanel } from './MenuBasePanel'\n\nexport class OptionsPanel extends MenuBasePanel {\n\n    onRepeatBriefing: () => any = () => console.log('repeat mission briefing')\n    onContinueMission: () => any = () => console.log('continue mission')\n\n    constructor(parent: BaseElement, cfg: MenuCfg) {\n        super(parent, cfg)\n        this.layersByKey.get('menu1').itemsTrigger[0].onClick = () => this.onRepeatBriefing()\n        this.layersByKey.get('menu1').itemsTrigger[1].onClick = () => this.onContinueMission()\n    }\n\n}\n","import { MenuCfg } from '../../cfg/MenuCfg'\nimport { BaseElement } from '../base/BaseElement'\nimport { MenuBasePanel } from './MenuBasePanel'\n\nexport class PausePanel extends MenuBasePanel {\n\n    onContinueGame: () => any = () => console.log('continue mission')\n    onRepeatBriefing: () => any = () => console.log('repeat mission briefing')\n    onAbortGame: () => any = () => console.log('abort mission')\n    onRestartGame: () => any = () => console.log('restart mission')\n\n    constructor(parent: BaseElement, cfg: MenuCfg) {\n        super(parent, cfg)\n        this.layersByKey.get('menu1').itemsTrigger[0].onClick = () => this.onContinueGame() // Pause\n        this.layersByKey.get('menu2').itemsTrigger[0].onClick = () => this.onRepeatBriefing() // Options\n        this.layersByKey.get('menu3').itemsTrigger[0].onClick = () => this.onAbortGame() // Quit\n        this.layersByKey.get('menu4').itemsTrigger[0].onClick = () => this.onRestartGame() // Restart\n    }\n\n}\n","import { MenuCfg } from '../cfg/MenuCfg'\nimport { ObjectiveImageCfg } from '../cfg/ObjectiveImageCfg'\nimport { KEY_EVENT } from '../event/EventTypeEnum'\nimport { GameKeyboardEvent } from '../event/GameKeyboardEvent'\nimport { GamePointerEvent } from '../event/GamePointerEvent'\nimport { DEV_MODE } from '../params'\nimport { WorkerMessageType } from '../resource/wadworker/WorkerMessageType'\nimport { Panel } from './base/Panel'\nimport { BriefingPanel } from './briefing/BriefingPanel'\nimport { GuiResourceCache } from './GuiResourceCache'\nimport { GuiWorker } from './GuiWorker'\nimport { GuiWorkerMessage } from './GuiWorkerMessage'\nimport { OptionsPanel } from './overlay/OptionsPanel'\nimport { PausePanel } from './overlay/PausePanel'\n\nexport class OverlayWorker extends GuiWorker {\n\n    panelBriefing: BriefingPanel\n    panelOptions: OptionsPanel\n    panelPause: PausePanel\n\n    constructor(worker: Worker) {\n        super(worker)\n        this.panelPause = this.addPanel(new PausePanel(this.rootElement, GuiResourceCache.getResource('PausedMenu') as MenuCfg))\n        this.panelOptions = this.addPanel(new OptionsPanel(this.rootElement, GuiResourceCache.getResource('OptionsMenu') as MenuCfg))\n        this.panelBriefing = this.addPanel(new BriefingPanel(this.rootElement))\n        // link items\n        this.panelPause.onContinueGame = () => this.setActivePanel(null)\n        this.panelPause.onRepeatBriefing = () => this.setActivePanel(this.panelBriefing)\n        this.panelPause.onAbortGame = () => this.sendResponse({type: WorkerMessageType.GAME_ABORT})\n        this.panelPause.onRestartGame = () => this.sendResponse({type: WorkerMessageType.GAME_RESTART})\n        this.panelOptions.onRepeatBriefing = () => this.setActivePanel(this.panelBriefing)\n        this.panelOptions.onContinueMission = () => this.setActivePanel(null)\n        this.panelBriefing.onSetSpaceToContinue = (state: boolean) => this.sendResponse({\n            type: WorkerMessageType.SPACE_TO_CONINUE,\n            messageState: state,\n        })\n        this.panelBriefing.onStartMission = () => this.setActivePanel(null)\n    }\n\n    setCanvas(canvas: OffscreenCanvas) {\n        super.setCanvas(canvas)\n        this.panelPause.width = this.canvas.width\n        this.panelPause.height = this.canvas.height\n        this.panelOptions.width = this.canvas.width\n        this.panelOptions.height = this.canvas.height\n    }\n\n    onProcessMessage(msg: GuiWorkerMessage): boolean {\n        if (msg.type === WorkerMessageType.OVERLAY_SETUP) {\n            this.setup(msg.objectiveText, msg.objectiveBackImgCfg)\n        } else if (msg.type === WorkerMessageType.SHOW_OPTIONS) {\n            this.setActivePanel(this.panelOptions)\n        } else {\n            return false\n        }\n        return true\n    }\n\n    setActivePanel(panel: Panel) {\n        this.panels.forEach(p => p !== panel && p.hide())\n        panel?.show()\n        this.redraw()\n    }\n\n    setup(objectiveText: string, objectiveBackImgCfg: ObjectiveImageCfg) {\n        this.panelBriefing.setup(objectiveText, objectiveBackImgCfg)\n        if (!DEV_MODE) this.setActivePanel(this.panelBriefing)\n    }\n\n    handlePointerEvent(event: GamePointerEvent): boolean {\n        if (this.panels.every(p => p.hidden)) return false\n        return super.handlePointerEvent(event) || true // catch em all\n    }\n\n    handleKeyEvent(event: GameKeyboardEvent): boolean {\n        let result = false\n        const lEventKey = event.key.toLowerCase()\n        if (event.eventEnum === KEY_EVENT.UP) {\n            if (lEventKey === 'escape') {\n                if (this.panelBriefing.hidden && this.panelOptions.hidden) {\n                    this.setActivePanel(this.panelPause.hidden ? this.panelPause : null)\n                    result = true\n                }\n            } else if (lEventKey === ' ') { // space\n                if (!this.panelBriefing.hidden) {\n                    this.panelBriefing.nextParagraph()\n                    result = true\n                }\n            }\n        }\n        return result\n    }\n\n}\n\nlet workerInstance: GuiWorker = null\n\nconst worker: Worker = self as any\n\nworker.addEventListener('message', (event) => {\n    const msg: GuiWorkerMessage = event.data\n    if (msg.type === WorkerMessageType.INIT) {\n        GuiResourceCache.resourceByName = msg.resourceByName\n        GuiResourceCache.configuration = msg.cfg\n        GuiResourceCache.stats = msg.stats\n        workerInstance = new OverlayWorker(worker)\n    } else {\n        workerInstance.processMessage(msg)\n    }\n})\n","export const DEV_MODE = process.env.WEBPACK_MODE === 'development'\nexport const WAD_CACHE_DB_NAME = 'RockRaidersWeb'\nexport const JOB_SCHEDULE_INTERVAL = 1000 // milliseconds\nexport const CHECK_CLEAR_RUBBLE_INTERVAL = 5000 // milliseconds\nexport const CHECK_SPAWN_RAIDER_TIMER = 1000 // milliseconds\nexport const MAX_RAIDER_BASE = 12\nexport const MAX_RAIDER_REQUEST = 9\nexport const ADDITIONAL_RAIDER_PER_SUPPORT = 10\nexport const UPDATE_OXYGEN_TIMER = 5000 // milliseconds\nexport const PANEL_ANIMATION_MULTIPLIER = 3\nexport const HEIGHT_MULTIPLIER = 0.1\nexport const SEQUENCE_TEXTURE_FRAMERATE = 5\nexport const KEY_PAN_SPEED = 20\n\n// native constants (do not change)\n\nexport const SPRITE_RESOLUTION_WIDTH = 640\nexport const SPRITE_RESOLUTION_HEIGHT = 480\nexport const TILESIZE = 40\nexport const NATIVE_FRAMERATE = 30\nexport const NATIVE_UPDATE_INTERVAL = 1000 / NATIVE_FRAMERATE\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [495,710], () => (__webpack_require__(804)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".index.js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t137: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkrock_raiders_web\"] = self[\"webpackChunkrock_raiders_web\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"sourceRoot":""}