{"version":3,"sources":["webpack://rock-raiders-web/./src/cfg/BaseButtonCfg.ts","webpack://rock-raiders-web/./src/cfg/BaseConfig.ts","webpack://rock-raiders-web/./src/cfg/PanelCfg.ts","webpack://rock-raiders-web/./src/core/Util.ts","webpack://rock-raiders-web/./src/event/EventKeyEnum.ts","webpack://rock-raiders-web/./src/core/ImageHelper.js","webpack://rock-raiders-web/./src/core/BitmapFont.ts","webpack://rock-raiders-web/./src/resource/ResourceCache.ts","webpack://rock-raiders-web/./src/gui/GuiResourceCache.ts","webpack://rock-raiders-web/./src/gui/base/BaseElement.ts","webpack://rock-raiders-web/./src/gui/base/Button.ts","webpack://rock-raiders-web/./src/gui/base/Panel.ts","webpack://rock-raiders-web/./src/resource/wadworker/WorkerMessageType.ts","webpack://rock-raiders-web/./src/worker/WorkerPublishEvent.ts","webpack://rock-raiders-web/./src/worker/WorkerResponse.ts","webpack://rock-raiders-web/./src/worker/GuiWorker.ts","webpack://rock-raiders-web/./src/worker/OffscreenWorker.ts"],"names":["BaseButtonCfg","buttonType","normalFile","highlightFile","pressedFile","disabledFile","relX","relY","width","height","tooltip","BaseConfig","config","cfgObj","Object","keys","forEach","cfgKey","lCfgKeyName","startsWith","substring","toLowerCase","replace","some","objKey","assignValue","console","warn","constructor","name","cfgValue","currentValue","this","currentIsArray","Array","isArray","parsedValue","parseValue","parsedIsArray","PanelCfg","filename","xOut","yOut","xIn","yIn","iGet","obj","keyname","filter","key","map","clearTimeoutSafe","timeout","clearTimeout","prototype","remove","element","index","indexOf","splice","last","length","undefined","count","callback","counter","e","partition","left","right","a","push","Map","getOrUpdate","updateCallback","value","get","set","String","equalsIgnoreCase","other","EventKey","createContext","error","result","y","x","fillStyle","fillRect","createDummyContext","canvas","document","createElement","setAttribute","OffscreenCanvas","context","getContext","createDummyImgData","ImageData","px","py","setPixel","imgData","r","g","b","n","data","getPixel","BitmapFont","fontImageData","cols","rows","letters","chars","maxCharWidth","getActualCharacterWidth","rowPixelIndex","colPixelIndex","charHeight","i","extractData","Math","floor","actualWidth","startX","startY","alpha","p","text","maxWidth","autoCenter","determineRows","max","row","rowX","round","rowY","letterX","c","letterImgData","charAt","img","putImageData","spaceWidth","rowText","rowWidth","split","word","wordWidth","letter","letterImg","ResourceCache","configuration","resourceName","lName","toString","resourceByName","imageName","getImageData","getImage","fontCache","getResource","getBitmapFont","GuiResourceCache","BaseElement","parent","children","hidden","disabled","hover","pressed","onPublishEvent","event","log","eventKey","reset","child","updatePosition","onRedraw","drawHover","drawTooltip","isInactive","hide","show","cx","cy","inRect","isInRect","stateChanged","checkHover","checkClick","onClick","checkRelease","release","notifyRedraw","publishEvent","registerEventListener","Button","btnCfg","super","imgNormal","imgHover","imgPressed","imgDisabled","drawImage","Panel","panelCfg","animationTimeout","movedIn","onDone","toggleState","updateAnimation","targetX","targetY","speed","diffX","diffY","abs","sign","sqrt","panel","setTimeout","WorkerMessageType","WorkerPublishEvent","type","messageState","gameEvent","GuiWorker","worker","eventListener","clearRect","scale","redraw","response","postMessage","sendResponse","msg","setCanvas","consumed","handlePointerEvent","inputEvent","sendEventResponse","eventId","eventConsumed","handleKeyEvent","handleWheelEvent","onProcessMessage","rootElement","panels","addChild","canvasX","canvasY","sx","sy","hit","eventEnum","button"],"mappings":"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","file":"969.index.js","sourcesContent":["export class BaseButtonCfg {\n\n    buttonType?: string = null\n    normalFile?: string = null\n    highlightFile?: string = null\n    pressedFile?: string = null\n    disabledFile?: string = null\n    relX?: number = 0\n    relY?: number = 0\n    width?: number = 0\n    height?: number = 0\n    tooltip?: string = null\n}\n","export class BaseConfig {\n\n    static setFromCfg(config: BaseConfig, cfgObj: any) {\n        Object.keys(cfgObj).forEach((cfgKey) => {\n            const lCfgKeyName = (cfgKey.startsWith('!') ? cfgKey.substring(1) : cfgKey)\n                .toLowerCase()\n                .replace(/_/g, '') // Activity_Stand\n                .replace(/-/g, '') // Geo-dome\n            const found = Object.keys(config).some((objKey) => {\n                return config.assignValue(objKey, lCfgKeyName, cfgObj[cfgKey])\n            })\n            if (!found) {\n                console.warn('cfg key: ' + cfgKey + ' does not exist in cfg: ' + config?.constructor?.name)\n            }\n        })\n        return config\n    }\n\n    assignValue(objKey, lCfgKeyName, cfgValue): boolean {\n        if (objKey.toLowerCase() === lCfgKeyName) {\n            const currentValue = this[objKey]\n            const currentIsArray = Array.isArray(currentValue)\n            let parsedValue = this.parseValue(lCfgKeyName, cfgValue)\n            const parsedIsArray = Array.isArray(parsedValue)\n            if (currentValue && currentIsArray !== parsedIsArray) {\n                if (currentIsArray) {\n                    parsedValue = [parsedValue]\n                    // } else {\n                    //     console.warn('Array overwrite conflict for key ' + objKey + ' with existing value (' + currentValue + ') and new value (' + parsedValue + ')')\n                }\n            }\n            this[objKey] = parsedValue\n            return true\n        }\n    }\n\n    parseValue(lCfgKeyName: string, cfgValue: any): any {\n        return cfgValue\n    }\n\n}\n","export class PanelCfg {\n\n    filename: string\n    xOut: number\n    yOut: number\n    xIn: number\n    yIn: number\n\n    constructor(cfgValue: any) {\n        [this.filename, this.xOut, this.yOut, this.xIn, this.yIn] = cfgValue\n    }\n\n}\n","export function getPath(url: string): string {\n    if (!url) return url\n    let strUrl = url.toString().replace(/\\\\/g, '/')\n    if (strUrl.startsWith('/')) strUrl = strUrl.substring(1)\n    const lastInd = strUrl.lastIndexOf('/')\n    strUrl = strUrl.substring(0, lastInd + 1)\n    if (strUrl.startsWith('/')) strUrl = strUrl.substring(1)\n    return strUrl\n}\n\nexport function getFilename(url: string): string {\n    if (!url) return url\n    let strUrl = url.toString().replace(/\\\\/g, '/')\n    if (strUrl.startsWith('/')) strUrl = strUrl.substring(1)\n    const lastInd = strUrl.lastIndexOf('/')\n    return strUrl.substring(lastInd + 1)\n}\n\nexport function iGet(obj, ...keys: string[]): any {\n    keys.forEach((keyname) => {\n        obj = Object.keys(obj)\n            .filter((key) => key.toLowerCase() === keyname.toLowerCase())\n            .map((key) => obj[key])\n        obj = obj ? obj[0] : obj\n    })\n    return obj\n}\n\nexport function decodeString(data) {\n    return new TextDecoder().decode(data).replace(/\\0/g, '')\n}\n\nexport function decodeFilepath(data) {\n    return decodeString(data).replace(/\\\\/g, '/')\n}\n\nexport function getRandomInclusive(min, max) {\n    min = Math.ceil(min)\n    max = Math.floor(max)\n    return Math.floor(Math.random() * (max - min + 1)) + min\n}\n\nexport function getRandom(max) {\n    return getRandomInclusive(0, max)\n}\n\nexport function getRandomSign() {\n    return -1 + getRandomInclusive(0, 1) * 2\n}\n\nexport function clearTimeoutSafe(timeout: NodeJS.Timeout) {\n    if (timeout) clearTimeout(timeout)\n    return null\n}\n\nexport function clearIntervalSafe(interval: NodeJS.Timeout) {\n    if (interval) clearInterval(interval)\n    return null\n}\n\ndeclare global {\n\n    interface Array<T> {\n        remove(element: T): void\n\n        last(): T\n\n        count(callback: (element: T) => boolean): number\n\n        partition(filter: (element: T) => boolean): [T[], T[]]\n    }\n\n    interface Map<K, V> {\n        getOrUpdate(key: K, updateCallback: () => V): V\n    }\n\n    interface String {\n        equalsIgnoreCase(other: string): boolean\n    }\n\n}\n\nArray.prototype.remove = function <T>(element: T): void {\n    const index = this.indexOf(element)\n    if (index !== -1) this.splice(index, 1)\n}\n\nArray.prototype.last = function <T>(): T {\n    return this.length > 0 ? this[this.length - 1] : undefined\n}\n\nArray.prototype.count = function <T>(callback: (element: T) => boolean): number {\n    let counter = 0\n    this.forEach((e) => callback(e) && counter++)\n    return counter\n}\n\nArray.prototype.partition = function <T>(filter: (element: T) => boolean): [T[], T[]] {\n    const left: T[] = [], right: T[] = []\n    this.forEach((a) => filter(a) ? left.push(a) : right.push(a))\n    return [left, right]\n}\n\n// noinspection JSUnusedGlobalSymbols\nMap.prototype.getOrUpdate = function <K, V>(key: K, updateCallback: () => V): V {\n    let value = this.get(key)\n    if (value === undefined) {\n        value = updateCallback()\n        this.set(key, value)\n    }\n    return value\n}\n\nString.prototype.equalsIgnoreCase = function (other: string): boolean {\n    return this.toLowerCase() === other?.toLowerCase()\n}\n","export enum EventKey {\n\n    SELECTION_CHANGED,\n    BUILDINGS_CHANGED,\n    RAIDERS_CHANGED,\n    MATERIAL_AMOUNT_CHANGED,\n\n    JOB_CREATE,\n    JOB_DELETE,\n    REQUESTED_RAIDERS_CHANGED,\n    CAVERN_DISCOVERED,\n    ORE_FOUND,\n    AIR_LEVEL_CHANGED,\n    CHANGE_PRIORITY_LIST,\n    SETUP_PRIORITY_LIST,\n    CHANGE_CURSOR,\n\n    COMMAND_CHANGE_RAIDER_SPAWN_REQUEST,\n    COMMAND_CREATE_POWER_PATH,\n    COMMAND_PLACE_FENCE,\n    COMMAND_MAKE_RUBBLE,\n    COMMAND_CREATE_CLEAR_RUBBLE_JOB,\n    COMMAND_CREATE_DRILL_JOB,\n    COMMAND_CREATE_REINFORCE_JOB,\n    COMMAND_CREATE_DYNAMITE_JOB,\n    COMMAND_CANCEL_SURFACE_JOBS,\n    COMMAND_CHANGE_BUILDING_POWER_STATE,\n    COMMAND_UPGRADE_BUILDING,\n    COMMAND_BUILDING_BEAMUP,\n    COMMAND_RAIDER_EAT,\n    COMMAND_PICK_TOOL,\n    COMMAND_RAIDER_UPGRADE,\n    COMMAND_RAIDER_BEAMUP,\n    COMMAND_TRAIN_RAIDER,\n    COMMAND_RAIDER_DROP,\n    COMMAND_SELECT_BUILD_MODE,\n    COMMAND_CANCEL_BUILD_MODE,\n\n    LOCATION_DEATH,\n    LOCATION_MONSTER,\n    LOCATION_CRYSTAL_FOUND,\n    LOCATION_UNDER_ATTACK,\n    LOCATION_LANDSLIDE,\n    LOCATION_POWER_DRAIN,\n    LOCATION_SLUG_EMERGE,\n    LOCATION_RAIDER_DISCOVERED,\n\n}\n","/**\n * creates a new context with the specified dimensions.\n * @param width: the desired width of the new context\n * @param height: the desired height of the new context\n * @returns RenderingContext the newly created canvas\n */\nexport function createContext(width, height) {\n    if (width < 1 || height < 1) {\n        console.error('Can\\'t create context with size ' + width + ' x ' + height);\n        return createDummyContext(64, 64);\n    }\n    let canvas\n    if (typeof document !== 'undefined') {\n        canvas = document.createElement('canvas')\n        canvas.setAttribute('width', width);\n        canvas.setAttribute('height', height);\n    } else {\n        canvas = new OffscreenCanvas(width, height)\n    }\n    const context = canvas.getContext('2d');\n    context.width = width;\n    context.height = height;\n    return context;\n}\n\n/**\n * This method is intended to increase stability by providing an (ugly) placeholder image in case the right one is missing\n * @param width: expected width of the original image\n * @param height: expected height of the original image\n */\nexport function createDummyContext(width, height) {\n    const result = createContext(width, height);\n    for (let y = 0; y < height; y += 16) {\n        for (let x = 0; x < width; x += 16) {\n            if (x / 16 % 2 === y / 16 % 2) {\n                result.fillStyle = 'rgb(0,255,255)';\n            } else {\n                result.fillStyle = 'rgb(255,0,255)';\n            }\n            result.fillRect(x, y, 16, 16);\n        }\n    }\n    return result;\n}\n\nexport function createDummyImgData(width, height) {\n    const result = new ImageData(width, height);\n    for (let y = 0; y < height; y += 16) {\n        for (let x = 0; x < width; x += 16) {\n            const e = x / 16 % 2 === y / 16 % 2;\n            for (let px = x; px < x + 16; px++) {\n                for (let py = y; py < y + 16; py++) {\n                    setPixel(result, px, py, e ? 0 : 255, e ? 255 : 0, 255);\n                }\n            }\n        }\n    }\n    return result;\n}\n\nexport function setPixel(imgData, x, y, r, g, b, a = 255) {\n    const n = (y * imgData.width + x) * 4;\n    imgData.data[n] = r;\n    imgData.data[n + 1] = g;\n    imgData.data[n + 2] = b;\n    imgData.data[n + 3] = a;\n}\n\nexport function getPixel(imgData, x, y) {\n    const n = (y * imgData.width + x) * 4;\n    return {r: imgData.data[n], g: imgData.data[n + 1], b: imgData.data[n + 2], a: imgData.data[n + 3]};\n}\n","import { createContext, createDummyImgData, getPixel, setPixel } from './ImageHelper'\n\nexport class BitmapFont {\n\n    charHeight: number\n    letters: ImageData[] = []\n\n    constructor(fontImageData: ImageData, cols = 10, rows = 19) { // font images always consist of 10 columns and 19 rows with last row empty\n        // actually chars are font dependent and have to be externalized in future\n        // maybe CP850 was used... not sure, doesn't fit...\n        const chars = [' ', '!', '\"', '#', '$', '%', '⌵', '`', '(', ')',\n            '*', '+', ',', '-', '.', '/', '0', '1', '2', '3',\n            '4', '5', '6', '7', '8', '9', ':', ';', '<', '=',\n            '>', '?', '@', 'A', 'B', 'C', 'D', 'E', 'F', 'G',\n            'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q',\n            'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '[',\n            '\\\\', ']', '^', '_', '\\'', 'a', 'b', 'c', 'd', 'e',\n            'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\n            'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y',\n            'z', 'Ä', 'Å', 'Á', 'À', 'Â', 'Ã', 'Ą', 'ä', 'å',\n            'á', 'à', 'â', 'ã', 'ą', 'Ë', 'E̊', 'É', 'È', 'É',\n            'Ę', 'ë', 'e̊', 'é', 'è', 'e̊', 'ę̊', '', '', '',\n            '', '', '', '', '', 'Ö', '', '', '', '',\n            'ö', '', '', '', '', 'Ü', '', '', '', 'ü',\n            '', '', '', '', '', '', '', '', '', '',\n            '', '', '', '', '', '', '', '', '', '',\n            '', '', '', 'ß', '', '', '', 'Ñ', '', 'ñ',\n            '',\n        ] // XXX complete this character list\n\n        const maxCharWidth = fontImageData.width / cols\n        this.charHeight = fontImageData.height / rows\n\n        function getActualCharacterWidth(imgData) {\n            for (let y = 0; y < imgData.height / rows; y++) { // find non-empty row first\n                let rowPixelIndex = y * 4 * imgData.width\n                if (imgData.data[rowPixelIndex] !== 255 && imgData.data[rowPixelIndex + 2] !== 255) { // red/blue pixels indicate end of character\n                    for (let x = 0; x < maxCharWidth; x++) {\n                        let colPixelIndex = x * 4\n                        if (imgData.data[colPixelIndex] === 255 || imgData.data[colPixelIndex + 2] === 255) { // red/blue pixels indicate end of character\n                            return x\n                        }\n                    }\n                    return maxCharWidth\n                }\n            }\n            return 0\n        }\n\n        for (let i = 0; i < chars.length; i++) {\n            let imgData = this.extractData(fontImageData, (i % 10) * maxCharWidth, Math.floor(i / 10) * this.charHeight, maxCharWidth, this.charHeight)\n            let actualWidth = getActualCharacterWidth(imgData)\n            if (actualWidth > 0) {\n                imgData = this.extractData(imgData, 0, 0, actualWidth, this.charHeight)\n            } else {\n                imgData = createDummyImgData(maxCharWidth, this.charHeight)\n            }\n            this.letters[chars[i]] = imgData\n        }\n    }\n\n    extractData(imgData, startX, startY, width, height): ImageData {\n        const alpha = getPixel(imgData, startX + width - 1, startY + height - 1)\n        const result = new ImageData(width, height)\n        for (let x = 0; x < width; x++) {\n            for (let y = 0; y < height; y++) {\n                const p = getPixel(imgData, startX + x, startY + y)\n                if (p.r === alpha.r && p.g === alpha.g && p.b === alpha.b) p.a = 0 // apply alpha channel\n                setPixel(result, x, y, p.r, p.g, p.b, p.a)\n            }\n        }\n        return result\n    }\n\n    createTextImage(text: string, maxWidth?: number, autoCenter: boolean = true): HTMLCanvasElement {\n        if (text === undefined || text === null || text.length < 1) {\n            // empty text requested, context with width 0 is not allowed, but 1 with alpha is close enough\n            return createContext(1, 1).canvas\n        }\n        text = text.replace(/_/g, ' ')\n        const rows = this.determineRows(text, maxWidth)\n        const width = Math.max(...(rows.map(r => r.width)))\n        const result = new ImageData(width, this.charHeight * rows.length)\n        rows.forEach((row, index) => {\n            const rowX = autoCenter ? Math.round((width - row.width) / 2) : 0\n            const rowY = index * this.charHeight\n            let letterX = 0\n            for (let c = 0; c < row.text.length; c++) {\n                const letterImgData = this.letters[row.text.charAt(c)]\n                if (letterImgData) {\n                    for (let x = letterX; x < letterX + letterImgData.width; x++) {\n                        for (let y = 0; y < letterImgData.height; y++) {\n                            const p = getPixel(letterImgData, x - letterX, y)\n                            setPixel(result, rowX + x, rowY + y, p.r, p.g, p.b, p.a)\n                        }\n                    }\n                    letterX += letterImgData.width\n                } // missing letter issue already reported above\n            }\n        })\n        const img: CanvasRenderingContext2D = createContext(result.width, result.height)\n        img.putImageData(result, 0, 0)\n        return img.canvas\n    }\n\n    private determineRows(text: string, maxWidth?: number): { text: string, width: number }[] {\n        const spaceWidth = this.letters[' '].width\n        const rows: { text: string, width: number }[] = []\n        let rowText = ''\n        let rowWidth = 0\n        text.split(' ').map(word => {\n            let wordWidth = 0\n            for (let c = 0; c < word.length; c++) {\n                const letter = word.charAt(c)\n                const letterImg = this.letters[letter]\n                if (letterImg) {\n                    wordWidth += letterImg.width\n                } else {\n                    console.error('Letter \\'' + letter + '\\' not found in charset! Ignoring it')\n                }\n            }\n            if (rowWidth > 0) {\n                if (!maxWidth || rowWidth + spaceWidth + wordWidth < maxWidth) {\n                    rowText += ' ' + word\n                    rowWidth += spaceWidth + wordWidth\n                } else {\n                    rows.push({text: rowText, width: rowWidth})\n                    rowText = word\n                    rowWidth = wordWidth\n                }\n            } else {\n                rowText += word\n                rowWidth += wordWidth\n            }\n            return wordWidth\n        })\n        if (rowWidth > 0) rows.push({text: rowText, width: rowWidth})\n        return rows\n    }\n}\n","import { GameStatsCfg } from '../cfg/GameStatsCfg'\nimport { BitmapFont } from '../core/BitmapFont'\nimport { createContext, createDummyImgData } from '../core/ImageHelper'\nimport { iGet } from '../core/Util'\n\nexport class ResourceCache {\n\n    static configuration: any = {}\n    static resourceByName: Map<string, any> = new Map()\n    static fontCache: Map<string, BitmapFont> = new Map()\n    static stats: GameStatsCfg\n\n    static cfg(...keys: string[]): any {\n        return iGet(this.configuration, ...keys)\n    }\n\n    static getResource(resourceName: string): any {\n        const lName = resourceName?.toString()?.toLowerCase() || null\n        return this.resourceByName.get(lName) || null\n    }\n\n    static getImageData(imageName: string): ImageData {\n        if (!imageName) throw 'imageName must not be undefined, null or empty - was ' + imageName\n        return this.resourceByName.getOrUpdate((imageName.toLowerCase()), () => {\n            console.error('Image \\'' + imageName + '\\' unknown! Using placeholder image instead')\n            return createDummyImgData(64, 64)\n        })\n    }\n\n    static getImage(imageName: string): HTMLCanvasElement {\n        const imgData = this.getImageData(imageName)\n        const context: CanvasRenderingContext2D = createContext(imgData.width, imgData.height)\n        context.putImageData(imgData, 0, 0)\n        return context.canvas\n    }\n\n    static getImageOrNull(imageName: string): HTMLCanvasElement | null {\n        return imageName ? this.getImage(imageName) : null\n    }\n\n    static getBitmapFont(name: string): BitmapFont {\n        return this.fontCache.getOrUpdate(name, () => {\n            const fontImageData = this.getResource(name)\n            if (!fontImageData) throw 'Could not load font image data for: ' + name\n            return new BitmapFont(fontImageData)\n        })\n    }\n\n    static getDefaultFont() {\n        return this.getBitmapFont('Interface/Fonts/Font5_Hi.bmp')\n    }\n\n}\n","import { ResourceCache } from '../resource/ResourceCache'\n\nexport class GuiResourceCache extends ResourceCache {\n}\n","import { EventKey } from '../../event/EventKeyEnum'\nimport { LocalEvent } from '../../event/LocalEvents'\n\nexport class BaseElement {\n\n    parent: BaseElement = null\n    x: number = 0\n    y: number = 0\n    relX: number = 0\n    relY: number = 0\n    width: number = 0\n    height: number = 0\n    children: BaseElement[] = []\n    hidden: boolean = false\n    disabled: boolean = false\n    hover: boolean = false\n    pressed: boolean = false\n    onPublishEvent: (event: LocalEvent) => any = (event) => console.log('TODO publish event: ' + EventKey[event.eventKey])\n\n    constructor(parent: BaseElement) {\n        this.parent = parent\n    }\n\n    reset() {\n        this.hidden = false\n        this.disabled = false\n        this.hover = false\n        this.pressed = false\n        this.children.forEach((c) => c.reset())\n    }\n\n    addChild<T extends BaseElement>(child: T): T {\n        child.parent = this\n        this.children.push(child)\n        child.updatePosition()\n        return child\n    }\n\n    onRedraw(context: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D) {\n        if (this.hidden) return\n        this.children.forEach((child) => child.onRedraw(context))\n        this.children.forEach((child) => child.drawHover(context))\n        this.children.forEach((child) => child.drawTooltip(context))\n    }\n\n    drawHover(context: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D) {\n    }\n\n    // noinspection JSUnusedLocalSymbols\n    drawTooltip(context: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D) {\n    }\n\n    onClick() {\n    }\n\n    isInactive(): boolean {\n        for (let parent = this.parent; !!parent; parent = parent.parent) if (parent.isInactive()) return true\n        return this.hidden || this.disabled\n    }\n\n    hide() {\n        this.hidden = true\n        this.children.forEach((child) => child.hide())\n    }\n\n    show() {\n        this.hidden = false\n        this.children.forEach((child) => child.show())\n    }\n\n    updatePosition() {\n        this.x = this.parent ? this.parent.x + this.relX : this.relX\n        this.y = this.parent ? this.parent.y + this.relY : this.relY\n        this.children.forEach((child) => child.updatePosition())\n    }\n\n    isInRect(cx, cy) {\n        return cx >= this.x && cy >= this.y && cx < this.x + this.width && cy < this.y + this.height\n    }\n\n    checkHover(cx, cy): boolean {\n        if (this.isInactive()) return false\n        const inRect = this.isInRect(cx, cy)\n        let stateChanged = this.hover !== inRect\n        this.hover = inRect\n        this.pressed = this.pressed && this.hover\n        // TODO start tooltip timeout (if not already started)\n        this.children.forEach((child) => stateChanged = child.checkHover(cx, cy) || stateChanged)\n        return stateChanged\n    }\n\n    checkClick(cx, cy): boolean {\n        if (this.isInactive()) return false\n        const inRect = this.isInRect(cx, cy)\n        let stateChanged = this.pressed !== inRect\n        this.pressed = inRect\n        this.children.forEach((child) => stateChanged = child.checkClick(cx, cy) || stateChanged)\n        return stateChanged\n    }\n\n    checkRelease(cx, cy): boolean {\n        if (this.isInactive()) return false\n        const inRect = this.isInRect(cx, cy)\n        if (inRect && this.pressed) this.onClick()\n        let stateChanged = false\n        this.children.forEach((child) => stateChanged = child.checkRelease(cx, cy) || stateChanged)\n        stateChanged = this.pressed || stateChanged\n        this.pressed = false\n        return stateChanged\n    }\n\n    release(): boolean {\n        let stateChanged = this.pressed || this.hover\n        this.pressed = false\n        this.hover = false\n        this.children.forEach((child) => stateChanged = child.release() || stateChanged)\n        return stateChanged\n    }\n\n    notifyRedraw() {\n        this.parent?.notifyRedraw()\n    }\n\n    publishEvent(event: LocalEvent) {\n        if (this.parent) this.parent.publishEvent(event)\n        else this.onPublishEvent(event)\n    }\n\n    registerEventListener(eventKey: EventKey, callback: (GameEvent) => any) {\n        this.parent.registerEventListener(eventKey, callback)\n    }\n\n}\n","import { ButtonCfg } from '../../cfg/ButtonCfg'\nimport { GuiResourceCache } from '../GuiResourceCache'\nimport { BaseElement } from './BaseElement'\n\nexport class Button extends BaseElement {\n\n    buttonType: string = null\n    imgNormal: HTMLCanvasElement = null\n    imgHover: HTMLCanvasElement = null\n    imgPressed: HTMLCanvasElement = null\n    imgDisabled: HTMLCanvasElement = null\n    tooltip: string = null\n\n    constructor(parent: BaseElement, btnCfg: ButtonCfg) {\n        super(parent)\n        this.buttonType = btnCfg.buttonType\n        this.imgNormal = GuiResourceCache.getImageOrNull(btnCfg.normalFile)\n        this.imgHover = GuiResourceCache.getImageOrNull(btnCfg.highlightFile)\n        this.imgPressed = GuiResourceCache.getImageOrNull(btnCfg.pressedFile)\n        this.imgDisabled = GuiResourceCache.getImageOrNull(btnCfg.disabledFile)\n        this.relX = btnCfg.relX\n        this.relY = btnCfg.relY\n        this.width = btnCfg.width || this.imgNormal?.width || this.imgPressed?.width\n        this.height = btnCfg.height || this.imgNormal?.height || this.imgPressed?.height\n        this.tooltip = btnCfg.tooltip?.replace(/_/g, ' ') // TODO refactor cfg handling\n        this.updatePosition()\n    }\n\n    onClick() {\n        console.log('button pressed: ' + this.buttonType)\n    }\n\n    checkHover(cx, cy): boolean {\n        const stateChanged = super.checkHover(cx, cy)\n        if (stateChanged) this.notifyRedraw()\n        return stateChanged\n    }\n\n    checkClick(cx, cy): boolean {\n        const stateChanged = super.checkClick(cx, cy)\n        if (stateChanged) this.notifyRedraw()\n        return stateChanged\n    }\n\n    checkRelease(cx, cy): boolean {\n        const stateChanged = super.checkRelease(cx, cy)\n        if (stateChanged) this.notifyRedraw()\n        return stateChanged\n    }\n\n    release(): boolean {\n        const stateChanged = super.release()\n        if (stateChanged) this.notifyRedraw()\n        return stateChanged\n    }\n\n    onRedraw(context: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D) {\n        if (this.hidden) return\n        let img = this.imgNormal\n        if (this.disabled) {\n            img = this.imgDisabled || this.imgPressed || this.imgNormal\n        } else if (this.pressed) {\n            img = this.imgPressed || this.imgNormal\n        } else if (this.hover) {\n            img = this.imgHover || this.imgNormal\n        }\n        if (img) context.drawImage(img, this.x, this.y)\n        super.onRedraw(context)\n    }\n\n}\n\n","import { PanelCfg } from '../../cfg/PanelCfg'\nimport { clearTimeoutSafe } from '../../core/Util'\nimport { NATIVE_FRAMERATE, PANEL_ANIMATION_MULTIPLIER } from '../../params'\nimport { GuiResourceCache } from '../GuiResourceCache'\nimport { BaseElement } from './BaseElement'\n\nexport class Panel extends BaseElement {\n\n    img: HTMLCanvasElement = null\n    xOut: number = 0\n    yOut: number = 0\n    xIn: number = 0\n    yIn: number = 0\n    animationTimeout = null\n    movedIn: boolean = true // xIn, yIn is the collapsed position out of screen\n\n    constructor(parent: BaseElement, panelCfg?: PanelCfg) {\n        super(parent)\n        if (panelCfg) {\n            this.img = GuiResourceCache.getImage(panelCfg.filename)\n            this.xOut = panelCfg.xOut\n            this.yOut = panelCfg.yOut\n            this.xIn = panelCfg.xIn\n            this.yIn = panelCfg.yIn\n            this.relX = this.xIn\n            this.relY = this.yIn\n        }\n    }\n\n    reset() {\n        super.reset()\n        this.animationTimeout = clearTimeoutSafe(this.animationTimeout)\n        this.relX = this.xIn\n        this.relY = this.yIn\n        this.movedIn = true\n        this.updatePosition()\n    }\n\n    isInactive(): boolean {\n        return this.animationTimeout || super.isInactive()\n    }\n\n    setMovedIn(movedIn: boolean, onDone: () => any = null) {\n        if (this.movedIn !== movedIn) {\n            this.toggleState(onDone)\n        } else if (onDone) {\n            onDone()\n        }\n    }\n\n    toggleState(onDone: () => any = null) {\n        this.animationTimeout = clearTimeoutSafe(this.animationTimeout)\n        if (this.movedIn) {\n            this.movedIn = false\n            this.updateAnimation(this.xOut, this.yOut, PANEL_ANIMATION_MULTIPLIER, onDone)\n        } else {\n            this.movedIn = true\n            this.updateAnimation(this.xIn, this.yIn, PANEL_ANIMATION_MULTIPLIER, onDone)\n        }\n    }\n\n    protected updateAnimation(targetX: number, targetY: number, speed: number, onDone: () => any) {\n        const diffX = targetX - this.relX\n        const diffY = targetY - this.relY\n        if (Math.abs(diffX) <= speed && Math.abs(diffY) <= speed) {\n            this.relX = targetX\n            this.relY = targetY\n            this.animationTimeout = null\n            if (onDone) onDone()\n        } else {\n            this.relX += Math.round(Math.sign(diffX) * Math.sqrt(Math.abs(diffX)) * speed)\n            this.relY += Math.round(Math.sign(diffY) * Math.sqrt(Math.abs(diffY)) * speed)\n            const panel = this\n            this.animationTimeout = setTimeout(() => panel.updateAnimation(targetX, targetY, speed, onDone), 1000 / NATIVE_FRAMERATE)\n        }\n        this.updatePosition()\n        this.notifyRedraw()\n    }\n\n    onRedraw(context: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D) {\n        if (this.hidden) return\n        if (this.img) context.drawImage(this.img, this.x, this.y)\n        super.onRedraw(context)\n    }\n\n}\n\n","export enum WorkerMessageType {\n\n    // wad worker\n    MSG,\n    CFG,\n    CACHE_MISS,\n    SFX,\n    ASSET,\n    DONE,\n\n    // gui/scene worker\n    INIT,\n    CANVAS,\n    REDRAW,\n    RESET,\n    EVENT_POINTER,\n    EVENT_KEY,\n    EVENT_WHEEL,\n    RESPONSE_EVENT,\n    OVERLAY_SETUP,\n    SPACE_TO_CONINUE,\n    SHOW_OPTIONS,\n    GAME_ABORT,\n    GAME_RESTART,\n    GAME_EVENT,\n\n}\n","import { GameEvent } from '../event/GameEvent'\nimport { WorkerMessageType } from '../resource/wadworker/WorkerMessageType'\nimport { WorkerResponse } from './WorkerResponse'\n\nexport class WorkerPublishEvent extends WorkerResponse {\n\n    gameEvent: GameEvent\n\n    constructor(gameEvent: GameEvent) {\n        super(WorkerMessageType.GAME_EVENT)\n        this.gameEvent = gameEvent\n    }\n\n}\n","import { WorkerMessageType } from '../resource/wadworker/WorkerMessageType'\n\nexport class WorkerResponse {\n\n    type: WorkerMessageType\n    messageState?: boolean = null\n\n    constructor(type: WorkerMessageType) {\n        this.type = type\n    }\n\n}\n","import { EventKey } from '../event/EventKeyEnum'\nimport { MOUSE_BUTTON, POINTER_EVENT } from '../event/EventTypeEnum'\nimport { GamePointerEvent } from '../event/GamePointerEvent'\nimport { GameWheelEvent } from '../event/GameWheelEvent'\nimport { LocalEvent } from '../event/LocalEvents'\nimport { BaseElement } from '../gui/base/BaseElement'\nimport { Panel } from '../gui/base/Panel'\nimport { SPRITE_RESOLUTION_HEIGHT, SPRITE_RESOLUTION_WIDTH } from '../params'\nimport { OffscreenWorker } from './OffscreenWorker'\n\nexport abstract class GuiWorker extends OffscreenWorker {\n\n    rootElement: BaseElement = new BaseElement(null)\n    panels: Panel[] = []\n\n    protected constructor(worker: Worker) {\n        super(worker)\n        this.rootElement.notifyRedraw = () => this.redraw()\n        this.rootElement.publishEvent = (event: LocalEvent) => {\n            this.publishEvent(event)\n        }\n        this.rootElement.registerEventListener = (eventKey: EventKey, callback: (GameEvent) => any) => {\n            this.registerEventListener(eventKey, callback)\n        }\n    }\n\n    redraw() {\n        super.redraw()\n        this.rootElement.onRedraw(this.context)\n    }\n\n    reset() {\n        super.reset()\n        this.panels.forEach((p) => p.reset())\n    }\n\n    addPanel<T extends Panel>(panel: T): T {\n        this.rootElement.addChild(panel)\n        this.panels.push(panel)\n        return panel\n    }\n\n    handlePointerEvent(event: GamePointerEvent): boolean {\n        const [cx, cy] = [event.canvasX, event.canvasY]\n        const [sx, sy] = [cx / (this.canvas.width / SPRITE_RESOLUTION_WIDTH), cy / (this.canvas.height / SPRITE_RESOLUTION_HEIGHT)]\n            .map((c) => Math.round(c))\n        const hit = this.context && this.context.getImageData(cx, cy, 1, 1).data[3] > 0\n        if (hit) {\n            if (event.eventEnum === POINTER_EVENT.MOVE) {\n                this.rootElement.checkHover(sx, sy)\n            } else if (event.eventEnum === POINTER_EVENT.DOWN) {\n                if (event.button === MOUSE_BUTTON.MAIN) this.rootElement.checkClick(sx, sy)\n            } else if (event.eventEnum === POINTER_EVENT.UP) {\n                if (event.button === MOUSE_BUTTON.MAIN) this.rootElement.checkRelease(sx, sy)\n            }\n        } else if (event.eventEnum === POINTER_EVENT.MOVE) {\n            this.rootElement.release()\n        }\n        return hit\n    }\n\n    handleWheelEvent(event: GameWheelEvent): boolean {\n        return !this.context || this.context.getImageData(event.canvasX, event.canvasY, 1, 1).data[3] > 0\n    }\n\n}\n","import { EventKey } from '../event/EventKeyEnum'\nimport { GameEvent } from '../event/GameEvent'\nimport { GameKeyboardEvent } from '../event/GameKeyboardEvent'\nimport { GamePointerEvent } from '../event/GamePointerEvent'\nimport { GameWheelEvent } from '../event/GameWheelEvent'\nimport { IEventHandler } from '../event/IEventHandler'\nimport { SPRITE_RESOLUTION_HEIGHT, SPRITE_RESOLUTION_WIDTH } from '../params'\nimport { WorkerMessageType } from '../resource/wadworker/WorkerMessageType'\nimport { GuiWorkerMessage } from './GuiWorkerMessage'\nimport { OffscreenWorkerMessage } from './OffscreenWorkerMessage'\nimport { WorkerEventResponse } from './WorkerEventResponse'\nimport { WorkerPublishEvent } from './WorkerPublishEvent'\nimport { WorkerResponse } from './WorkerResponse'\n\nexport abstract class OffscreenWorker implements IEventHandler {\n\n    worker: Worker\n\n    canvas: OffscreenCanvas = null\n    context: OffscreenCanvasRenderingContext2D = null\n\n    eventListener = new Map<EventKey, ((event: GameEvent) => any)[]>()\n\n    protected constructor(worker: Worker) {\n        this.worker = worker\n    }\n\n    redraw() {\n        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height)\n    }\n\n    reset() {\n    }\n\n    setCanvas(canvas: OffscreenCanvas) {\n        this.canvas = canvas\n        this.context = canvas.getContext('2d')\n        this.context.scale(this.canvas.width / SPRITE_RESOLUTION_WIDTH, this.canvas.height / SPRITE_RESOLUTION_HEIGHT)\n        this.redraw()\n    }\n\n    handlePointerEvent(event: GamePointerEvent): boolean {\n        return false\n    }\n\n    handleKeyEvent(event: GameKeyboardEvent): boolean {\n        return false\n    }\n\n    handleWheelEvent(event: GameWheelEvent): boolean {\n        return false\n    }\n\n    sendResponse(response: WorkerResponse) {\n        this.worker.postMessage(response)\n    }\n\n    sendEventResponse(response: WorkerEventResponse) {\n        this.sendResponse(response)\n    }\n\n    processMessage(msg: GuiWorkerMessage) {\n        if (msg.type === WorkerMessageType.CANVAS) {\n            this.setCanvas(msg.canvas)\n        } else if (msg.type === WorkerMessageType.EVENT_POINTER) {\n            const consumed = this.handlePointerEvent(msg.inputEvent as GamePointerEvent)\n            this.sendEventResponse({\n                type: WorkerMessageType.RESPONSE_EVENT,\n                eventId: msg.eventId,\n                eventConsumed: consumed,\n            })\n        } else if (msg.type === WorkerMessageType.EVENT_KEY) {\n            const consumed = this.handleKeyEvent(msg.inputEvent as GameKeyboardEvent)\n            this.sendEventResponse({\n                type: WorkerMessageType.RESPONSE_EVENT,\n                eventId: msg.eventId,\n                eventConsumed: consumed,\n            })\n        } else if (msg.type === WorkerMessageType.EVENT_WHEEL) {\n            const consumed = this.handleWheelEvent(msg.inputEvent as GameWheelEvent)\n            this.sendEventResponse({\n                type: WorkerMessageType.RESPONSE_EVENT,\n                eventId: msg.eventId,\n                eventConsumed: consumed,\n            })\n        } else if (msg.type === WorkerMessageType.RESET) {\n            this.reset()\n        } else if (msg.type === WorkerMessageType.REDRAW) {\n            this.redraw()\n        } else if (msg.type === WorkerMessageType.GAME_EVENT) {\n            const event = msg.gameEvent\n            this.eventListener.getOrUpdate(event.eventKey, () => []).forEach((callback) => callback(event))\n        } else if (!this.onProcessMessage(msg)) {\n            console.warn('Worker ignores message of type: ' + WorkerMessageType[msg.type])\n        }\n        return true\n    }\n\n    publishEvent(event: GameEvent): void {\n        this.sendResponse(new WorkerPublishEvent(event))\n    }\n\n    registerEventListener(eventKey: EventKey, callback: (GameEvent) => any): void {\n        this.eventListener.getOrUpdate(eventKey, () => []).push(callback)\n    }\n\n    abstract onProcessMessage(msg: OffscreenWorkerMessage): boolean\n\n}\n"],"sourceRoot":""}