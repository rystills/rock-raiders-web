{"version":3,"sources":["webpack://rock-raiders-web/./src/audio/Sample.ts","webpack://rock-raiders-web/./src/audio/SoundManager.ts","webpack://rock-raiders-web/./src/core/ImageHelper.ts","webpack://rock-raiders-web/./src/event/EventKeyEnum.ts","webpack://rock-raiders-web/./src/event/GameEvent.ts","webpack://rock-raiders-web/./src/core/BitmapFont.ts","webpack://rock-raiders-web/./src/screen/AnimatedCursor.ts","webpack://rock-raiders-web/./src/resource/ResourceCache.ts","webpack://rock-raiders-web/./src/resource/wadworker/WorkerMessageType.ts","webpack://rock-raiders-web/./src/screen/Cursor.ts"],"names":["Sample","SoundManager","sample","this","playSound","sfxName","getSoundBuffer","then","audioBuffer","source","audioContext","createBufferSource","buffer","connect","destination","start","e","console","error","toLowerCase","cachedSound","audioBufferCache","get","Promise","resolve","sfxContent","data","slice","window","decodeAudioData","set","Map","createContext","width","height","result","y","x","fillStyle","fillRect","createDummyContext","canvas","document","createElement","setAttribute","OffscreenCanvas","context","getContext","createDummyImgData","ImageData","px","py","setPixel","imgData","r","g","b","a","n","getPixel","EventKey","GameEvent","eventKey","guiForward","BitmapFont","fontImageData","cols","rows","letters","chars","maxCharWidth","getActualCharacterWidth","rowPixelIndex","colPixelIndex","charHeight","i","length","extractData","Math","floor","actualWidth","startX","startY","alpha","p","text","maxWidth","autoCenter","replace","determineRows","max","map","forEach","row","index","rowX","round","rowY","letterX","c","letterImgData","charAt","img","putImageData","spaceWidth","rowText","rowWidth","split","word","wordWidth","letter","letterImg","push","AnimatedCursor","cursorImage","cursorUrls","animationInterval","animationIndex","Array","isArray","toDataURL","cssTarget","setInterval","cursor","ResourceCache","keys","configuration","resourceName","lName","toString","resourceByName","imageName","getOrUpdate","getImageData","getImage","name","fontCache","getResource","getBitmapFont","cfg","Cursor","C","getCursorImage","cursorToUrl","pointersCfg","blankPointerFilename","blankPointerImageData","cursorCfg","cursorImages","animContext","drawImage","sfxByKey","WorkerMessageType","allCursor","Pointer_Blank","Pointer_Standard","Pointer_Drill","Pointer_CantDrill","Pointer_Clear","Pointer_Go","Pointer_CantGo","Pointer_Teleport","Pointer_CantTeleport","Pointer_Reinforce","Pointer_CantReinforce","Pointer_Selected","Pointer_RadarPan","Pointer_TrackObject","Pointer_Zoom","Pointer_CantZoom","Pointer_Help","Pointer_CantHelp","Pointer_PutDown","Pointer_GetIn","Pointer_GetOut","Pointer_Okay","Pointer_NotOkay","Pointer_CanBuild","Pointer_CannotBuild","Pointer_Dynamite","Pointer_CantDynamite","Pointer_PickUp","Pointer_CantPickUp","Pointer_PickUpOre","Pointer_LegoManCantDig","Pointer_VehicleCantDig","Pointer_LegoManDig","Pointer_VehicleDig","Pointer_LegoManCantPickUp","Pointer_VehicleCantPickUp","Pointer_LegoManPickUp","Pointer_VehiclePickUp","Pointer_LegoManCantGo","Pointer_VehicleCantGo","Pointer_LegoManGo","Pointer_VehicleGo","Pointer_LegoManClear","Pointer_VehicleClear","Pointer_SurfaceType_Immovable","Pointer_SurfaceType_Hard","Pointer_SurfaceType_Medium","Pointer_SurfaceType_Loose","Pointer_SurfaceType_Soil","Pointer_SurfaceType_OreSeam","Pointer_SurfaceType_CrystalSeam","Pointer_SurfaceType_RechargeSeam"],"mappings":"kHACA,IAAYA,E,iBAAZ,SAAYA,GAER,6BAEA,2BAEA,6BACA,qCACA,qCACA,+BAEA,yCACA,2CACA,iCACA,yCAEA,8CACA,8BACA,8BACA,kDACA,8BACA,oCACA,8CACA,0CACA,8CACA,4BACA,8BACA,wCACA,4BAEA,4BACA,kCAEA,oCACA,4CACA,oCAEA,4CACA,oCACA,8BAEA,sCACA,kCACA,kCACA,gCACA,sCACA,0CACA,4BACA,wCACA,oCACA,oCACA,gCAEA,kCACA,kCACA,sCACA,sCACA,wCACA,kCACA,oCACA,wCACA,kCACA,kCACA,0CACA,0CACA,kCACA,kCACA,sCACA,oCACA,gCACA,gCACA,gCACA,8BACA,8BACA,gCACA,gCAEA,gCACA,kCACA,8BACA,4BAEA,oCACA,4CACA,0CACA,8BACA,oCACA,sCACA,oCACA,8BAEA,8BACA,gCACA,4BACA,8BACA,4BACA,4BACA,8BAEA,4BACA,4BACA,8BACA,kCACA,0BACA,gCACA,oCACA,gCACA,gCACA,gCAEA,wCACA,gDACA,gCACA,8BAEA,4BACA,gCACA,+BAEA,mCAEA,mCACA,mCACA,mCACA,uCACA,+CAEA,iCACA,+BAEA,2CACA,mDAEA,mCACA,mCAoHA,yEAEA,2DACA,2DACA,2DACA,2DACA,2DACA,2DACA,2DACA,2DACA,2DACA,6DACA,6DACA,6DACA,6DACA,6DACA,6DACA,6DACA,6DACA,6DACA,6DACA,6DACA,6DACA,6DACA,6DACA,6DACA,6DACA,6DACA,6DACA,6DACA,6DACA,6DACA,6DACA,6DACA,6DAEA,2CACA,6CACA,2CACA,yCACA,uCAEA,qDACA,2CAEA,+CACA,iDACA,+CACA,2CACA,2CACA,6CACA,6CACA,mDACA,2CACA,iDACA,2CACA,6CAEA,qCAEA,iDAEA,iDAEA,mCACA,iDACA,+CAEA,iDACA,iDACA,qCACA,mDACA,2CACA,yCACA,yCACA,iDACA,+CACA,iDAEA,yCACA,iCACA,mCAEA,mCACA,+CACA,uCACA,qDACA,6CACA,uDACA,2DACA,qCACA,uCACA,2CACA,iCACA,uCACA,iCACA,yDAEA,uCACA,2CACA,6CACA,qDACA,qDACA,mCACA,uCACA,uCACA,2CACA,uCACA,qDACA,yDACA,mCACA,uCACA,2CACA,iDACA,qDACA,uCACA,2CACA,6CACA,iDACA,6CACA,iDACA,6CACA,iDACA,2CACA,+CACA,yCACA,6CACA,yCACA,6CACA,mDACA,uDACA,yCACA,2CACA,+CACA,yDACA,6DACA,uDACA,2DACA,yCACA,iDACA,qDACA,6CACA,iDACA,uDACA,+CACA,mDACA,iDACA,iDACA,mDACA,6CACA,2CACA,+CACA,2CACA,+CACA,6CACA,iDACA,6CACA,iDACA,+CACA,mDACA,+CACA,mDACA,2CACA,+CACA,6CACA,iDACA,2CACA,+CACA,6CACA,iDACA,iDACA,qDACA,qDACA,yDACA,uDACA,2DACA,+CACA,mDACA,iDACA,qDACA,uDACA,2DACA,qDACA,yDACA,mDACA,uDACA,iDACA,qDACA,mDACA,uDACA,yDACA,yDACA,6DACA,uCACA,iDAEA,yCACA,yCACA,uDACA,mDACA,+CACA,iDACA,qCACA,2CACA,uCACA,+CACA,2CAEA,qDACA,2CACA,+CACA,6CACA,2CACA,iDACA,2CACA,yDACA,2DACA,+CACA,6DACA,2CACA,mDACA,mDACA,2DACA,+CAEA,qCACA,2CACA,iCACA,uCACA,mDACA,6CACA,2CACA,2CAEA,6CACA,qDAEA,uCACA,qDAEA,qDACA,yCACA,uCACA,uCA7eJ,CAAYA,MAAM,M,kECEX,MAAMC,EAKT,kBAAkBC,GACdC,KAAKC,UAAU,IAAOF,IAG1B,iBAAiBG,GACb,IACIF,KAAKG,eAAeD,GAASE,MAAMC,IAC/B,IACI,MAAMC,EAASR,EAAaS,aAAaC,qBACzCF,EAAOG,OAASJ,EAChBC,EAAOI,QAAQZ,EAAaS,aAAaI,aACzCL,EAAOM,QACT,MAAOC,GACLC,QAAQC,MAAMF,OAGxB,MAAOA,GACLC,QAAQC,MAAMF,IAItB,sBAAsBX,GAClBA,EAAUA,EAAQc,cAClB,MAAMC,EAAcnB,EAAaoB,iBAAiB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","file":"495.index.js","sourcesContent":["// noinspection JSUnusedGlobalSymbols\nexport enum Sample {\n\n    SFX_Bodge,\n\n    SFX_Drip,\n\n    SFX_Drill,\n    SFX_DrillFade,\n    SFX_RockBreak,\n    SFX_FallIn,\n\n    SFX_RockMonster,\n    SFX_RockMonster2,\n    SFX_Ambient,\n    SFX_Ambientloop,\n\n    SFX_ButtonPressed,\n    SFX_Radar,\n    SFX_Siren,\n    SFX_CrystalRecharge,\n    SFX_Laser,\n    SFX_LaserHit,\n    SFX_LazerRecharge,\n    SFX_TopPriority,\n    SFX_ImmovableRock,\n    SFX_Wall,\n    SFX_Floor,\n    SFX_BoulderHit,\n    SFX_Lava,\n\n    SFX_Okay,\n    SFX_NotOkay,\n\n    SFX_RockWipe,\n    SFX_CaptainSlide,\n    SFX_Dynamite,\n\n    SFX_PlaceCrystal,\n    SFX_PlaceOre,\n    SFX_Place,\n\n    SND_Landslide,\n    SND_CRserv1,\n    SND_CRserv2,\n    SND_Refine,\n    SND_Docksload,\n    SND_Docksunload,\n    SND_Drop,\n    SND_upgradelc1,\n    SND_Explode1,\n    SND_Explode2,\n    SND_Rumble,\n\n    SND_RMGrunt,\n    SND_RMstomp,\n    SND_RMrokstep,\n    SND_RMrokslid,\n    SND_RMsoftstep,\n    SND_RMcrack,\n    SND_RMbigrok,\n    SND_RMsmalrock,\n    SND_RMroar1,\n    SND_RMroar2,\n    SND_RMfootbreak,\n    SND_RMfistbreak,\n    SND_RMscoop,\n    SND_RMswipe,\n    SND_RMCrumble,\n    SND_RMImpact,\n    SND_RMeat1,\n    SND_RMeat2,\n    SND_RMeat3,\n    SND_Snore,\n    SND_RMEAT,\n    SND_RMREST,\n    SND_RMhurl,\n\n    SND_SLUGIN,\n    SND_SLUGOUT,\n    SND_Sonic,\n    SND_SUCK,\n\n    SND_teleport,\n    SND_BARRIERplace,\n    SND_BARRIERwood,\n    SND_elecy,\n    SND_starttel,\n    SND_plazsmall,\n    SND_plazlarg,\n    SND_BTHUD,\n\n    SND_SHAKE,\n    SND_Slipup,\n    SND_bump,\n    SND_Groan,\n    SND_hupp,\n    SND_haaa,\n    SND_PANTS,\n\n    SND_dump,\n    SND_land,\n    SND_chuck,\n    SND_deposit,\n    SND_dig,\n    SND_hammer,\n    SND_dynamite,\n    SND_screw1,\n    SND_screw2,\n    SND_screw3,\n\n    SND_pilotdrill,\n    SND_Pilotdrillfade,\n    SND_TeleUp,\n    SND_LASER,\n\n    SND_Hurt,\n    SND_Yippee,\n    SND_Panic,\n\n    SND_AirBeat,\n\n    SND_WALKER1,\n    SND_WALKER2,\n    SND_WALKER3,\n    SND_WALKDRILL,\n    SND_WALKDRILLFADE,\n\n    SND_SHOVEL,\n    SND_SMACK,\n\n    SND_BIGDIGDRILL,\n    SND_BIGDIGDRILLFADE,\n\n    SND_Bsplosh,\n    SND_Ssplosh,\n\n//     Stream_Objective_Levels::Level01,\n//     Stream_Objective_Levels::Level02,\n//     Stream_Objective_Levels::Level03,\n//     Stream_Objective_Levels::Level04,\n//     Stream_Objective_Levels::Level05,\n//     Stream_Objective_Levels::Level06,\n//     Stream_Objective_Levels::Level07,\n//     Stream_Objective_Levels::Level08,\n//     Stream_Objective_Levels::Level09,\n//     Stream_Objective_Levels::Level10,\n//     Stream_Objective_Levels::Level11,\n//     Stream_Objective_Levels::Level12,\n//     Stream_Objective_Levels::Level13,\n//     Stream_Objective_Levels::Level14,\n//     Stream_Objective_Levels::Level15,\n//     Stream_Objective_Levels::Level16,\n//     Stream_Objective_Levels::Level17,\n//     Stream_Objective_Levels::Level18,\n//     Stream_Objective_Levels::Level19,\n//     Stream_Objective_Levels::Level20,\n//     Stream_Objective_Levels::Level21,\n//     Stream_Objective_Levels::Level22,\n//     Stream_Objective_Levels::Level23,\n//     Stream_Objective_Levels::Level24,\n//     Stream_Objective_Levels::Level25,\n//\n//     Stream_Objective_Levels::DigTuto_01,\n//     Stream_Objective_Levels::DigTuto_02,\n//     Stream_Objective_Levels::DigTuto_03,\n//     Stream_Objective_Levels::MoveTuto_01,\n//     Stream_Objective_Levels::MoveTuto_02,\n//     Stream_Objective_Levels::BuildTuto_01,\n//     Stream_Objective_Levels::BuildTuto_01,\n//     Stream_Objective_Levels::DefenceTuto_01,\n//\n// Stream_Objective_Levels::Tutorial02,\n//     Stream_Objective_Levels::Tutorial05,\n//     Stream_Objective_Levels::Tutorial07,\n//     Stream_Objective_Levels::Tutorial01,\n//     Stream_Objective_Levels::Tutorial04,\n//     Stream_Objective_Levels::Tutorial03,\n//     Stream_Objective_Levels::Tutorial06,\n//     Stream_Objective_Levels::Tutorial08,\n//\n//     Stream_ObjectiveFailed_Levels::Level01,\n//     Stream_ObjectiveFailed_Levels::Level02,\n//     Stream_ObjectiveFailed_Levels::Level03,\n//     Stream_ObjectiveFailed_Levels::Level04,\n//     Stream_ObjectiveFailed_Levels::Level05,\n//     Stream_ObjectiveFailed_Levels::Level06,\n//     Stream_ObjectiveFailed_Levels::Level07,\n//     Stream_ObjectiveFailed_Levels::Level08,\n//     Stream_ObjectiveFailed_Levels::Level09,\n//     Stream_ObjectiveFailed_Levels::Level10,\n//     Stream_ObjectiveFailed_Levels::Level11,\n//     Stream_ObjectiveFailed_Levels::Level12,\n//     Stream_ObjectiveFailed_Levels::Level13,\n//     Stream_ObjectiveFailed_Levels::Level14,\n//     Stream_ObjectiveFailed_Levels::Level15,\n//     Stream_ObjectiveFailed_Levels::Level16,\n//     Stream_ObjectiveFailed_Levels::Level17,\n//     Stream_ObjectiveFailed_Levels::Level18,\n//     Stream_ObjectiveFailed_Levels::Level19,\n//     Stream_ObjectiveFailed_Levels::Level20,\n//     Stream_ObjectiveFailed_Levels::Level21,\n//     Stream_ObjectiveFailed_Levels::Level22,\n//     Stream_ObjectiveFailed_Levels::Level23,\n//     Stream_ObjectiveFailed_Levels::Level24,\n//     Stream_ObjectiveFailed_Levels::Level25,\n//\n//     Stream_ObjectiveAcheived_Levels::Level01,\n//     Stream_ObjectiveAcheived_Levels::Level02,\n//     Stream_ObjectiveAcheived_Levels::Level03,\n//     Stream_ObjectiveAcheived_Levels::Level04,\n//     Stream_ObjectiveAcheived_Levels::Level05,\n//     Stream_ObjectiveAcheived_Levels::Level06,\n//     Stream_ObjectiveAcheived_Levels::Level07,\n//     Stream_ObjectiveAcheived_Levels::Level08,\n//     Stream_ObjectiveAcheived_Levels::Level09,\n//     Stream_ObjectiveAcheived_Levels::Level10,\n//     Stream_ObjectiveAcheived_Levels::Level11,\n//     Stream_ObjectiveAcheived_Levels::Level12,\n//     Stream_ObjectiveAcheived_Levels::Level13,\n//     Stream_ObjectiveAcheived_Levels::Level14,\n//     Stream_ObjectiveAcheived_Levels::Level15,\n//     Stream_ObjectiveAcheived_Levels::Level16,\n//     Stream_ObjectiveAcheived_Levels::Level17,\n//     Stream_ObjectiveAcheived_Levels::Level18,\n//     Stream_ObjectiveAcheived_Levels::Level19,\n//     Stream_ObjectiveAcheived_Levels::Level20,\n//     Stream_ObjectiveAcheived_Levels::Level21,\n//     Stream_ObjectiveAcheived_Levels::Level22,\n//     Stream_ObjectiveAcheived_Levels::Level23,\n//     Stream_ObjectiveAcheived_Levels::Level24,\n//     Stream_ObjectiveAcheived_Levels::Level25,\n//\n//     Stream_ObjectiveAcheived_Levels::DigTuto_01,\n//     Stream_ObjectiveAcheived_Levels::DigTuto_02,\n//     Stream_ObjectiveAcheived_Levels::DigTuto_03,\n//     Stream_ObjectiveAcheived_Levels::MoveTuto_01,\n//     Stream_ObjectiveAcheived_Levels::MoveTuto_02,\n//     Stream_ObjectiveAcheived_Levels::BuildTuto_01,\n//     Stream_ObjectiveAcheived_Levels::BuildTuto_01,\n//     Stream_ObjectiveAcheived_Levels::DefenceTuto_01,\n//\n//     Stream_ObjectiveAcheived_Levels::Tutorial02,\n//     Stream_ObjectiveAcheived_Levels::Tutorial05,\n//     Stream_ObjectiveAcheived_Levels::Tutorial07,\n//     Stream_ObjectiveAcheived_Levels::Tutorial01,\n//     Stream_ObjectiveAcheived_Levels::Tutorial04 ,\n//     Stream_ObjectiveAcheived_Levels::Tutorial03,\n//     Stream_ObjectiveAcheived_Levels::Tutorial06,\n//     Stream_ObjectiveAcheived_Levels::Tutorial08,\n\n    Stream_ObjectiveFailedCrystals,\n\n    Stream_LevelName_Level1,\n    Stream_LevelName_Level2,\n    Stream_LevelName_Level3,\n    Stream_LevelName_Level4,\n    Stream_LevelName_Level5,\n    Stream_LevelName_Level6,\n    Stream_LevelName_Level7,\n    Stream_LevelName_Level8,\n    Stream_LevelName_Level9,\n    Stream_LevelName_Level10,\n    Stream_LevelName_Level11,\n    Stream_LevelName_Level12,\n    Stream_LevelName_Level13,\n    Stream_LevelName_Level14,\n    Stream_LevelName_Level15,\n    Stream_LevelName_Level16,\n    Stream_LevelName_Level17,\n    Stream_LevelName_Level18,\n    Stream_LevelName_Level19,\n    Stream_LevelName_Level20,\n    Stream_LevelName_Level21,\n    Stream_LevelName_Level22,\n    Stream_LevelName_Level23,\n    Stream_LevelName_Level24,\n    Stream_LevelName_Level25,\n    Stream_LevelName_TLevel1,\n    Stream_LevelName_TLevel2,\n    Stream_LevelName_TLevel3,\n    Stream_LevelName_TLevel4,\n    Stream_LevelName_TLevel5,\n    Stream_LevelName_TLevel6,\n    Stream_LevelName_TLevel7,\n    Stream_LevelName_TLevel8,\n\n    SND_SmallEngine,\n    SND_MediumEngine,\n    SND_LargeEngine,\n    SND_HeliEngine,\n    SND_Catamaran,\n\n    SND_PowerBuildingHum,\n    SND_BuildingHum,\n\n    ObjSFX_Hoverboard,\n    ObjSFX_SmallDigger,\n    ObjSFX_SmallTruck,\n    ObjSFX_SmallCat,\n    ObjSFX_SmallMLP,\n    ObjSFX_SmallHeli,\n    ObjSFX_BullDozer,\n    ObjSFX_WalkerDigger,\n    ObjSFX_LargeMLP,\n    ObjSFX_LargeDigger,\n    ObjSFX_LargeCat,\n    ObjSFX_LargeHeli,\n\n    ObjSFX_Pilot,\n\n    ObjSFX_RockMonster,\n\n    ObjSFX_SmallSpider,\n\n    ObjSFX_Slug,\n    ObjSFX_LavaMonster,\n    ObjSFX_IceMonster,\n\n    ObjSFX_Toolstation,\n    ObjSFX_TeleportPad,\n    ObjSFX_Docks,\n    ObjSFX_Powerstation,\n    ObjSFX_Barracks,\n    ObjSFX_Upgrade,\n    ObjSFX_Geodome,\n    ObjSFX_OreRefinery,\n    ObjSFX_Gunstation,\n    ObjSFX_TeleportBIG,\n\n    ObjSFX_Crystal,\n    ObjSFX_Ore,\n    ObjSFX_Stud,\n\n    TTSFX_Radar,\n    TTSFX_TrackObject,\n    TTSFX_MapView,\n    TTSFX_ActionStations,\n    TTSFX_Priorities,\n    TTSFX_PriorityDisable,\n    TTSFX_IncreasePrioirity,\n    TTSFX_ZoomIn,\n    TTSFX_ZoomOut,\n    TTSFX_RotateMap,\n    TTSFX_Goto,\n    TTSFX_Options,\n    TTSFX_Back,\n    TTSFX_ResetPrioirities,\n\n    IntSFX_TeleRR,\n    IntSFX_NoTeleRR,\n    IntSFX_Buildings,\n    IntSFX_SmallVehicles,\n    IntSFX_LargeVehicles,\n    IntSFX_Path,\n    IntSFX_NoPath,\n    IntSFX_Rubble,\n    IntSFX_NoRubble,\n    IntSFX_SellRR,\n    IntSFX_UnloadVehicle,\n    IntSFX_NoUnloadVehicle,\n    IntSFX_Drop,\n    IntSFX_PickUp,\n    IntSFX_NoPickUp,\n    IntSFX_LoadVehicle,\n    IntSFX_NoLoadVehicle,\n    IntSFX_GetOut,\n    IntSFX_NoGetOut,\n    IntSFX_GetDriver,\n    IntSFX_NoGetDriver,\n    IntSFX_DrillWall,\n    IntSFX_NoDrillWall,\n    IntSFX_Reinforce,\n    IntSFX_NoReinforce,\n    IntSFX_Dynamite,\n    IntSFX_NoDynamite,\n    IntSFX_Upgrade,\n    IntSFX_NoUpgrade,\n    IntSFX_EyeView,\n    IntSFX_NoEyeView,\n    IntSFX_ShoulderView,\n    IntSFX_NoShoulderView,\n    IntSFX_PowerOn,\n    IntSFX_PowerOff,\n    IntSFX_NoPowerOff,\n    IntSFX_UpgradeBuilding,\n    IntSFX_NoUpgradeBuilding,\n    IntSFX_RepairBuilding,\n    IntSFX_NoRepairBuilding,\n    IntSFX_TopView,\n    IntSFX_CancelDrill,\n    IntSFX_NoCancelDrill,\n    IntSFX_ElecFence,\n    IntSFX_NoElecFence,\n    IntSFX_CancelBuilding,\n    IntSFX_RemovePath,\n    IntSFX_NoRemovePath,\n    IntSFX_RemoveFence,\n    IntSFX_SellVehicle,\n    IntSFX_SellBuilding,\n    IntSFX_DropSonic,\n    IntSFX_ToolMenu,\n    IntSFX_NoToolMenu,\n    IntSFX_GetDrill,\n    IntSFX_NoGetDrill,\n    IntSFX_GetShovel,\n    IntSFX_NoGetShovel,\n    IntSFX_GetHammer,\n    IntSFX_NoGetHammer,\n    IntSFX_GetSpanner,\n    IntSFX_NoGetSpanner,\n    IntSFX_GetFreezer,\n    IntSFX_NoGetFreezer,\n    IntSFX_GetLaser,\n    IntSFX_NoGetLaser,\n    IntSFX_GetPusher,\n    IntSFX_NoGetPusher,\n    IntSFX_GetSonic,\n    IntSFX_NoGetSonic,\n    IntSFX_TrainMenu,\n    IntSFX_NoTrainMenu,\n    IntSFX_TrainDriver,\n    IntSFX_NoTrainDriver,\n    IntSFX_TrainEngineer,\n    IntSFX_NoTrainEngineer,\n    IntSFX_TrainGeologist,\n    IntSFX_NoTrainGeologist,\n    IntSFX_TrainPilot,\n    IntSFX_NoTrainPilot,\n    IntSFX_TrainSailor,\n    IntSFX_NoTrainSailor,\n    IntSFX_UpgradeVehicle,\n    IntSFX_NoUpgradeVehicle,\n    IntSFX_UpgradeEngine,\n    IntSFX_NoUpgradeEngine,\n    IntSFX_UpgradeDrill,\n    IntSFX_NoUpgradeDrill,\n    IntSFX_UpgradeScan,\n    IntSFX_NoUpgradeScan,\n    IntSFX_UpgradeCarry,\n    IntSFX_NoUpgradeCarry,\n    IntSFX_FeedRockRaiders,\n    IntSFX_TrainExplosives,\n    IntSFX_NoTrainExplosives,\n    IntSFX_NoFeed,\n    IntSFX_NoDropSonic,\n\n    InfoSFX_AirLow,\n    InfoSFX_AirOut,\n    InfoSFX_CrystalsFound,\n    InfoSFX_UnderAttack,\n    InfoSFX_NewCavern,\n    InfoSFX_PowerDrain,\n    InfoSFX_Slug,\n    InfoSFX_FoundRR,\n    InfoSFX_Death,\n    InfoSFX_Landslide,\n    InfoSFX_Monster,\n\n    SurfaceSFX_Immovable,\n    SurfaceSFX_Hard,\n    SurfaceSFX_Medium,\n    SurfaceSFX_Loose,\n    SurfaceSFX_Lava,\n    SurfaceSFX_OreSeam,\n    SurfaceSFX_Lake,\n    SurfaceSFX_CrystalSeam,\n    SurfaceSFX_RechargeSeam,\n    SurfaceSFX_Rubble,\n    SurfaceSFX_Reinforcement,\n    SurfaceSFX_Path,\n    SurfaceSFX_SlugHole,\n    SurfaceSFX_Building,\n    SurfaceSFX_Undiscovered,\n    SurfaceSFX_Cavern,\n\n    PriSFX_Drive,\n    PriSFX_Crystals,\n    PriSFX_Ore,\n    PriSFX_Repair,\n    PriSFX_Construction,\n    PriSFX_Reinforce,\n    PriSFX_Recharge,\n    PriSFX_Drilling,\n\n    DrillSFX_Grinder,\n    DrillSFX_GrinderFade,\n\n    SFX_MusicLoop,\n    SFX_AmbientMusicLoop,\n\n    FrontSFX_RockMonster,\n    FrontSFX_Truck,\n    FrontSFX_Sand,\n    FrontSFX_Slug,\n\n}\n","import { ResourceCache } from '../resource/ResourceCache'\nimport { Sample } from './Sample'\n\nexport class SoundManager {\n\n    static audioBufferCache: Map<string, AudioBuffer> = new Map()\n    static audioContext\n\n    static playSample(sample: Sample) {\n        this.playSound(Sample[sample])\n    }\n\n    static playSound(sfxName: string) {\n        try {\n            this.getSoundBuffer(sfxName).then((audioBuffer) => {\n                try {\n                    const source = SoundManager.audioContext.createBufferSource()\n                    source.buffer = audioBuffer\n                    source.connect(SoundManager.audioContext.destination)\n                    source.start()\n                } catch (e) {\n                    console.error(e)\n                }\n            })\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    static getSoundBuffer(sfxName: string): Promise<AudioBuffer> {\n        sfxName = sfxName.toLowerCase()\n        const cachedSound = SoundManager.audioBufferCache.get(sfxName)\n        if (cachedSound) return new Promise<AudioBuffer>((resolve) => resolve(cachedSound))\n        const sfxContent = ResourceCache.sfxByKey.get(sfxName)\n        if (!sfxContent) {\n            console.error('Could not find ' + sfxName + ' in: ', ResourceCache.sfxByKey)\n            return\n        }\n        const data = sfxContent.slice(0) // slice used to create copy, because array gets auto detached after decode\n        return new Promise<AudioBuffer>((resolve) => {\n            SoundManager.audioContext = SoundManager.audioContext || new (window['AudioContext'] || window['webkitAudioContext'])()\n            SoundManager.audioContext.decodeAudioData(data).then((audioBuffer) => {\n                SoundManager.audioBufferCache.set(sfxName, audioBuffer)\n                resolve(audioBuffer)\n            })\n        })\n    }\n\n}\n","/**\n * creates a new context with the specified dimensions.\n * @param width: the desired width of the new context\n * @param height: the desired height of the new context\n * @returns RenderingContext the newly created canvas\n */\nexport function createContext(width, height): SpriteContext {\n    if (width < 1 || height < 1) {\n        console.error('Can\\'t create context with size ' + width + ' x ' + height)\n        return createDummyContext(64, 64)\n    }\n    let canvas\n    if (typeof document !== 'undefined') {\n        canvas = document.createElement('canvas')\n        canvas.setAttribute('width', width)\n        canvas.setAttribute('height', height)\n    } else {\n        canvas = new OffscreenCanvas(width, height)\n    }\n    const context = canvas.getContext('2d')\n    context.width = width\n    context.height = height\n    return context\n}\n\n/**\n * This method is intended to increase stability by providing an (ugly) placeholder image in case the right one is missing\n * @param width: expected width of the original image\n * @param height: expected height of the original image\n */\nexport function createDummyContext(width, height): SpriteContext {\n    const result = createContext(width, height)\n    for (let y = 0; y < height; y += 16) {\n        for (let x = 0; x < width; x += 16) {\n            if (x / 16 % 2 === y / 16 % 2) {\n                result.fillStyle = 'rgb(0,255,255)'\n            } else {\n                result.fillStyle = 'rgb(255,0,255)'\n            }\n            result.fillRect(x, y, 16, 16)\n        }\n    }\n    return result\n}\n\nexport function createDummyImgData(width, height): ImageData {\n    const result = new ImageData(width, height)\n    for (let y = 0; y < height; y += 16) {\n        for (let x = 0; x < width; x += 16) {\n            const e = x / 16 % 2 === y / 16 % 2\n            for (let px = x; px < x + 16; px++) {\n                for (let py = y; py < y + 16; py++) {\n                    setPixel(result, px, py, e ? 0 : 255, e ? 255 : 0, 255)\n                }\n            }\n        }\n    }\n    return result\n}\n\nexport function setPixel(imgData, x, y, r, g, b, a = 255): void {\n    const n = (y * imgData.width + x) * 4\n    imgData.data[n] = r\n    imgData.data[n + 1] = g\n    imgData.data[n + 2] = b\n    imgData.data[n + 3] = a\n}\n\nexport function getPixel(imgData, x, y): { r: number, g: number, b: number, a: number } {\n    const n = (y * imgData.width + x) * 4\n    return {r: imgData.data[n], g: imgData.data[n + 1], b: imgData.data[n + 2], a: imgData.data[n + 3]}\n}\n","export enum EventKey {\n\n    SELECTION_CHANGED,\n    BUILDINGS_CHANGED,\n    RAIDERS_CHANGED,\n    VEHICLES_CHANGED,\n    MATERIAL_AMOUNT_CHANGED,\n\n    COMMAND_CHANGE_RAIDER_SPAWN_REQUEST,\n    COMMAND_CREATE_POWER_PATH,\n    COMMAND_PLACE_FENCE,\n    COMMAND_MAKE_RUBBLE,\n    COMMAND_CREATE_CLEAR_RUBBLE_JOB,\n    COMMAND_CREATE_DRILL_JOB,\n    COMMAND_CREATE_REINFORCE_JOB,\n    COMMAND_CREATE_DYNAMITE_JOB,\n    COMMAND_CANCEL_SURFACE_JOBS,\n    COMMAND_CHANGE_BUILDING_POWER_STATE,\n    COMMAND_UPGRADE_BUILDING,\n    COMMAND_BUILDING_BEAMUP,\n    COMMAND_RAIDER_EAT,\n    COMMAND_PICK_TOOL,\n    COMMAND_RAIDER_UPGRADE,\n    COMMAND_RAIDER_BEAMUP,\n    COMMAND_TRAIN_RAIDER,\n    COMMAND_RAIDER_DROP,\n    COMMAND_SELECT_BUILD_MODE,\n    COMMAND_CANCEL_BUILD_MODE,\n    COMMAND_CANCEL_CONSTRUCTION,\n    COMMAND_REQUEST_VEHICLE_SPAWN,\n    COMMAND_VEHICLE_GET_MAN,\n    COMMAND_VEHICLE_BEAMUP,\n    COMMAND_VEHICLE_DRIVER_GET_OUT,\n    COMMAND_CHANGE_PRIORITY_LIST,\n    COMMAND_CAMERA_CONTROL,\n\n    LOCATION_DEATH,\n    LOCATION_MONSTER,\n    LOCATION_CRYSTAL_FOUND,\n    LOCATION_UNDER_ATTACK,\n    LOCATION_LANDSLIDE,\n    LOCATION_POWER_DRAIN,\n    LOCATION_SLUG_EMERGE,\n    LOCATION_RAIDER_DISCOVERED,\n\n    JOB_CREATE,\n    JOB_DELETE,\n    REQUESTED_RAIDERS_CHANGED,\n    CAVERN_DISCOVERED,\n    ORE_FOUND,\n    AIR_LEVEL_CHANGED,\n    SETUP_PRIORITY_LIST,\n    CHANGE_CURSOR,\n    PLAY_SOUND,\n    UPDATE_RADAR_SURFACE,\n    UPDATE_RADAR_TERRAIN,\n    PAUSE_GAME,\n    UNPAUSE_GAME,\n    UPDATE_PRIORITIES,\n\n}\n","import { EventKey } from './EventKeyEnum'\n\nexport class GameEvent {\n\n    eventKey: EventKey\n    isLocal: boolean\n    guiForward: boolean\n\n    constructor(eventKey: EventKey) {\n        this.eventKey = eventKey\n        this.guiForward = true\n    }\n\n}\n","import { createContext, createDummyImgData, getPixel, setPixel } from './ImageHelper'\n\nexport class BitmapFont {\n\n    charHeight: number\n    letters: ImageData[] = []\n\n    constructor(fontImageData: ImageData, cols = 10, rows = 19) { // font images always consist of 10 columns and 19 rows with last row empty\n        // actually chars are font dependent and have to be externalized in future\n        // maybe CP850 was used... not sure, doesn't fit...\n        const chars = [' ', '!', '\"', '#', '$', '%', '⌵', '`', '(', ')',\n            '*', '+', ',', '-', '.', '/', '0', '1', '2', '3',\n            '4', '5', '6', '7', '8', '9', ':', ';', '<', '=',\n            '>', '?', '@', 'A', 'B', 'C', 'D', 'E', 'F', 'G',\n            'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q',\n            'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '[',\n            '\\\\', ']', '^', '_', '\\'', 'a', 'b', 'c', 'd', 'e',\n            'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\n            'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y',\n            'z', 'Ä', 'Å', 'Á', 'À', 'Â', 'Ã', 'Ą', 'ä', 'å',\n            'á', 'à', 'â', 'ã', 'ą', 'Ë', 'E̊', 'É', 'È', 'É',\n            'Ę', 'ë', 'e̊', 'é', 'è', 'e̊', 'ę̊', '', '', '',\n            '', '', '', '', '', 'Ö', '', '', '', '',\n            'ö', '', '', '', '', 'Ü', '', '', '', 'ü',\n            '', '', '', '', '', '', '', '', '', '',\n            '', '', '', '', '', '', '', '', '', '',\n            '', '', '', 'ß', '', '', '', 'Ñ', '', 'ñ',\n            '',\n        ] // XXX complete this character list\n\n        const maxCharWidth = fontImageData.width / cols\n        this.charHeight = fontImageData.height / rows\n\n        function getActualCharacterWidth(imgData) {\n            for (let y = 0; y < imgData.height / rows; y++) { // find non-empty row first\n                let rowPixelIndex = y * 4 * imgData.width\n                if (imgData.data[rowPixelIndex] !== 255 && imgData.data[rowPixelIndex + 2] !== 255) { // red/blue pixels indicate end of character\n                    for (let x = 0; x < maxCharWidth; x++) {\n                        let colPixelIndex = x * 4\n                        if (imgData.data[colPixelIndex] === 255 || imgData.data[colPixelIndex + 2] === 255) { // red/blue pixels indicate end of character\n                            return x\n                        }\n                    }\n                    return maxCharWidth\n                }\n            }\n            return 0\n        }\n\n        for (let i = 0; i < chars.length; i++) {\n            let imgData = this.extractData(fontImageData, (i % 10) * maxCharWidth, Math.floor(i / 10) * this.charHeight, maxCharWidth, this.charHeight)\n            let actualWidth = getActualCharacterWidth(imgData)\n            if (actualWidth > 0) {\n                imgData = this.extractData(imgData, 0, 0, actualWidth, this.charHeight)\n            } else {\n                imgData = createDummyImgData(maxCharWidth, this.charHeight)\n            }\n            this.letters[chars[i]] = imgData\n        }\n    }\n\n    extractData(imgData, startX, startY, width, height): ImageData {\n        const alpha = getPixel(imgData, startX + width - 1, startY + height - 1)\n        const result = new ImageData(width, height)\n        for (let x = 0; x < width; x++) {\n            for (let y = 0; y < height; y++) {\n                const p = getPixel(imgData, startX + x, startY + y)\n                if (p.r === alpha.r && p.g === alpha.g && p.b === alpha.b) p.a = 0 // apply alpha channel\n                setPixel(result, x, y, p.r, p.g, p.b, p.a)\n            }\n        }\n        return result\n    }\n\n    createTextImage(text: string, maxWidth?: number, autoCenter: boolean = true): SpriteImage {\n        if (text === undefined || text === null || text.length < 1) {\n            // empty text requested, context with width 0 is not allowed, but 1 with alpha is close enough\n            return createContext(1, 1).canvas\n        }\n        text = text.replace(/_/g, ' ')\n        const rows = this.determineRows(text, maxWidth)\n        const width = Math.max(...(rows.map(r => r.width)))\n        const result = new ImageData(width, this.charHeight * rows.length)\n        rows.forEach((row, index) => {\n            const rowX = autoCenter ? Math.round((width - row.width) / 2) : 0\n            const rowY = index * this.charHeight\n            let letterX = 0\n            for (let c = 0; c < row.text.length; c++) {\n                const letterImgData = this.letters[row.text.charAt(c)]\n                if (letterImgData) {\n                    for (let x = letterX; x < letterX + letterImgData.width; x++) {\n                        for (let y = 0; y < letterImgData.height; y++) {\n                            const p = getPixel(letterImgData, x - letterX, y)\n                            setPixel(result, rowX + x, rowY + y, p.r, p.g, p.b, p.a)\n                        }\n                    }\n                    letterX += letterImgData.width\n                } // missing letter issue already reported above\n            }\n        })\n        const img = createContext(result.width, result.height)\n        img.putImageData(result, 0, 0)\n        return img.canvas\n    }\n\n    private determineRows(text: string, maxWidth?: number): { text: string, width: number }[] {\n        const spaceWidth = this.letters[' '].width\n        const rows: { text: string, width: number }[] = []\n        let rowText = ''\n        let rowWidth = 0\n        text.split(' ').map(word => {\n            let wordWidth = 0\n            for (let c = 0; c < word.length; c++) {\n                const letter = word.charAt(c)\n                const letterImg = this.letters[letter]\n                if (letterImg) {\n                    wordWidth += letterImg.width\n                } else {\n                    console.error('Letter \\'' + letter + '\\' not found in charset! Ignoring it')\n                }\n            }\n            if (rowWidth > 0) {\n                if (!maxWidth || rowWidth + spaceWidth + wordWidth < maxWidth) {\n                    rowText += ' ' + word\n                    rowWidth += spaceWidth + wordWidth\n                } else {\n                    rows.push({text: rowText, width: rowWidth})\n                    rowText = word\n                    rowWidth = wordWidth\n                }\n            } else {\n                rowText += word\n                rowWidth += wordWidth\n            }\n            return wordWidth\n        })\n        if (rowWidth > 0) rows.push({text: rowText, width: rowWidth})\n        return rows\n    }\n}\n","import { clearIntervalSafe } from '../core/Util'\nimport { NATIVE_FRAMERATE } from '../params'\n\nexport class AnimatedCursor {\n\n    cursorUrls: string[] = []\n    animationInterval = null\n    animationIndex: number = 0\n\n    constructor(cursorImage: HTMLCanvasElement | HTMLCanvasElement[]) {\n        this.cursorUrls = (Array.isArray(cursorImage) ? cursorImage : [cursorImage]).map((c) => 'url(' + c.toDataURL() + '), auto')\n    }\n\n    enableAnimation(cssTarget: CSSStyleDeclaration) {\n        this.animationIndex = 0\n        if (this.cursorUrls.length > 1) {\n            this.animationInterval = clearIntervalSafe(this.animationInterval)\n            this.animationInterval = setInterval(() => {\n                this.animationIndex = (this.animationIndex + 1) % this.cursorUrls.length\n                cssTarget.cursor = this.cursorUrls[this.animationIndex]\n            }, 1000 / NATIVE_FRAMERATE)\n        } else {\n            cssTarget.cursor = this.cursorUrls[this.animationIndex]\n        }\n    }\n\n    disableAnimation() {\n        this.animationInterval = clearIntervalSafe(this.animationInterval)\n    }\n\n}\n","import { GameStatsCfg } from '../cfg/GameStatsCfg'\nimport { BitmapFont } from '../core/BitmapFont'\nimport { createContext, createDummyImgData } from '../core/ImageHelper'\nimport { iGet } from '../core/Util'\nimport { AnimatedCursor } from '../screen/AnimatedCursor'\nimport { allCursor, Cursor } from '../screen/Cursor'\n\nexport class ResourceCache {\n\n    static configuration: any = {}\n    static resourceByName: Map<string, any> = new Map()\n    static fontCache: Map<string, BitmapFont> = new Map()\n    static stats: GameStatsCfg\n    static cursorToUrl: Map<Cursor, AnimatedCursor> = new Map()\n    static sfxByKey: Map<string, any> = new Map()\n\n    static cfg(...keys: string[]): any {\n        return iGet(this.configuration, ...keys)\n    }\n\n    static getResource(resourceName: string): any {\n        const lName = resourceName?.toString()?.toLowerCase() || null\n        return this.resourceByName.get(lName) || null\n    }\n\n    static getImageData(imageName: string): ImageData {\n        if (!imageName) throw 'imageName must not be undefined, null or empty - was ' + imageName\n        return this.resourceByName.getOrUpdate((imageName.toLowerCase()), () => {\n            console.error('Image \\'' + imageName + '\\' unknown! Using placeholder image instead')\n            return createDummyImgData(64, 64)\n        })\n    }\n\n    static getImage(imageName: string): SpriteImage {\n        const imgData = this.getImageData(imageName)\n        const context = createContext(imgData.width, imgData.height)\n        context.putImageData(imgData, 0, 0)\n        return context.canvas\n    }\n\n    static getImageOrNull(imageName: string): SpriteImage | null {\n        return imageName ? this.getImage(imageName) : null\n    }\n\n    static getBitmapFont(name: string): BitmapFont {\n        return this.fontCache.getOrUpdate(name, () => {\n            const fontImageData = this.getResource(name)\n            if (!fontImageData) throw 'Could not load font image data for: ' + name\n            return new BitmapFont(fontImageData)\n        })\n    }\n\n    static getDefaultFont(): BitmapFont {\n        return this.getBitmapFont('Interface/Fonts/Font5_Hi.bmp')\n    }\n\n    static loadDefaultCursor() {\n        const imageName = iGet(this.cfg('Pointers'), Cursor[Cursor.Pointer_Standard])\n        const cursorImage = this.getCursorImage(imageName)\n        this.cursorToUrl.set(Cursor.Pointer_Standard, new AnimatedCursor(cursorImage))\n    }\n\n    static loadAllCursor() {\n        const pointersCfg = this.cfg('Pointers')\n        const blankPointerFilename = iGet(pointersCfg, Cursor[Cursor.Pointer_Blank])\n        const blankPointerImageData = this.getImageData(blankPointerFilename)\n        allCursor.forEach((cursor) => {\n            const cursorCfg = iGet(pointersCfg, Cursor[cursor])\n            if (Array.isArray(cursorCfg)) {\n                const cursorImages = (this.getResource(cursorCfg[0]) as ImageData[]).map((imgData) => {\n                    const canvas = document.createElement('canvas')\n                    canvas.setAttribute('width', blankPointerImageData.width.toString())\n                    canvas.setAttribute('height', blankPointerImageData.height.toString())\n                    const context = canvas.getContext('2d')\n                    context.putImageData(blankPointerImageData, 0, 0)\n                    const animContext = createContext(imgData.width, imgData.height)\n                    animContext.putImageData(imgData, 0, 0)\n                    context.drawImage(animContext.canvas, Math.round((blankPointerImageData.width - imgData.width) / 2), Math.round((blankPointerImageData.height - imgData.height) / 2))\n                    return context.canvas\n                })\n                this.cursorToUrl.set(cursor, new AnimatedCursor(cursorImages))\n            } else {\n                const cursorImage = this.getCursorImage(cursorCfg)\n                this.cursorToUrl.set(cursor, new AnimatedCursor(cursorImage))\n            }\n        })\n    }\n\n    static getCursorImage(imageName: string): HTMLCanvasElement {\n        const imgData = this.getImageData(imageName)\n        const canvas = document.createElement('canvas')\n        canvas.setAttribute('width', imgData.width.toString())\n        canvas.setAttribute('height', imgData.height.toString())\n        canvas.getContext('2d').putImageData(imgData, 0, 0)\n        return canvas\n    }\n\n    static getCursor(cursor: Cursor): AnimatedCursor {\n        return this.cursorToUrl.get(cursor)\n    }\n\n}\n","export enum WorkerMessageType {\n\n    // wad worker\n    MSG,\n    CFG,\n    CACHE_MISS,\n    SFX,\n    ASSET,\n    DONE,\n\n    // gui/scene worker\n    INIT,\n    CANVAS,\n    REDRAW,\n    RESET,\n    EVENT_POINTER,\n    EVENT_KEY,\n    EVENT_WHEEL,\n    RESPONSE_EVENT,\n    OVERLAY_SETUP,\n    SPACE_TO_CONINUE,\n    SHOW_OPTIONS,\n    GAME_ABORT,\n    GAME_RESTART,\n    GAME_EVENT,\n\n}\n","export enum Cursor {\n\n    Pointer_Blank,\n    Pointer_Standard,\n    Pointer_Drill,\n    Pointer_CantDrill,\n    Pointer_Clear,\n    Pointer_Go,\n    Pointer_CantGo,\n    Pointer_Teleport,\n    Pointer_CantTeleport,\n    Pointer_Reinforce,\n    Pointer_CantReinforce,\n    Pointer_Selected,\n    Pointer_RadarPan,\n    Pointer_TrackObject,\n    Pointer_Zoom,\n    Pointer_CantZoom,\n    Pointer_Help,\n    Pointer_CantHelp,\n    Pointer_PutDown,\n    Pointer_GetIn,\n    Pointer_GetOut,\n    Pointer_Okay,\n    Pointer_NotOkay,\n    Pointer_CanBuild,\n    Pointer_CannotBuild,\n    Pointer_Dynamite,\n    Pointer_CantDynamite,\n    Pointer_PickUp,\n    Pointer_CantPickUp,\n    Pointer_PickUpOre,\n    Pointer_LegoManCantDig,\n    Pointer_VehicleCantDig,\n    Pointer_LegoManDig,\n    Pointer_VehicleDig,\n    Pointer_LegoManCantPickUp,\n    Pointer_VehicleCantPickUp,\n    Pointer_LegoManPickUp,\n    Pointer_VehiclePickUp,\n    Pointer_LegoManCantGo,\n    Pointer_VehicleCantGo,\n    Pointer_LegoManGo,\n    Pointer_VehicleGo,\n    Pointer_LegoManClear,\n    Pointer_VehicleClear,\n    Pointer_SurfaceType_Immovable,\n    Pointer_SurfaceType_Hard,\n    Pointer_SurfaceType_Medium,\n    Pointer_SurfaceType_Loose,\n    Pointer_SurfaceType_Soil,\n    Pointer_SurfaceType_OreSeam,\n    Pointer_SurfaceType_CrystalSeam,\n    Pointer_SurfaceType_RechargeSeam,\n\n}\n\nexport const allCursor: Cursor[] = [\n\n    Cursor.Pointer_Blank,\n    Cursor.Pointer_Standard,\n    Cursor.Pointer_Drill,\n    Cursor.Pointer_CantDrill,\n    Cursor.Pointer_Clear,\n    Cursor.Pointer_Go,\n    Cursor.Pointer_CantGo,\n    Cursor.Pointer_Teleport,\n    Cursor.Pointer_CantTeleport,\n    Cursor.Pointer_Reinforce,\n    Cursor.Pointer_CantReinforce,\n    Cursor.Pointer_Selected,\n    Cursor.Pointer_RadarPan,\n    Cursor.Pointer_TrackObject,\n    Cursor.Pointer_Zoom,\n    Cursor.Pointer_CantZoom,\n    Cursor.Pointer_Help,\n    Cursor.Pointer_CantHelp,\n    Cursor.Pointer_PutDown,\n    Cursor.Pointer_GetIn,\n    Cursor.Pointer_GetOut,\n    Cursor.Pointer_Okay,\n    Cursor.Pointer_NotOkay,\n    Cursor.Pointer_CanBuild,\n    Cursor.Pointer_CannotBuild,\n    Cursor.Pointer_Dynamite,\n    Cursor.Pointer_CantDynamite,\n    Cursor.Pointer_PickUp,\n    Cursor.Pointer_CantPickUp,\n    Cursor.Pointer_PickUpOre,\n    Cursor.Pointer_LegoManCantDig,\n    Cursor.Pointer_VehicleCantDig,\n    Cursor.Pointer_LegoManDig,\n    Cursor.Pointer_VehicleDig,\n    Cursor.Pointer_LegoManCantPickUp,\n    Cursor.Pointer_VehicleCantPickUp,\n    Cursor.Pointer_LegoManPickUp,\n    Cursor.Pointer_VehiclePickUp,\n    Cursor.Pointer_LegoManCantGo,\n    Cursor.Pointer_VehicleCantGo,\n    Cursor.Pointer_LegoManGo,\n    Cursor.Pointer_VehicleGo,\n    Cursor.Pointer_LegoManClear,\n    Cursor.Pointer_VehicleClear,\n    Cursor.Pointer_SurfaceType_Immovable,\n    Cursor.Pointer_SurfaceType_Hard,\n    Cursor.Pointer_SurfaceType_Medium,\n    Cursor.Pointer_SurfaceType_Loose,\n    Cursor.Pointer_SurfaceType_Soil,\n    Cursor.Pointer_SurfaceType_OreSeam,\n    Cursor.Pointer_SurfaceType_CrystalSeam,\n    Cursor.Pointer_SurfaceType_RechargeSeam,\n\n]\n"],"sourceRoot":""}