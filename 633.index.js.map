{"version":3,"sources":["webpack://rock-raiders-web/webpack/runtime/chunk loaded","webpack://rock-raiders-web/webpack/runtime/startup chunk dependencies","webpack://rock-raiders-web/./src/event/EventTypeEnum.ts","webpack://rock-raiders-web/./src/params.ts","webpack://rock-raiders-web/./src/core/Rect.ts","webpack://rock-raiders-web/./src/cfg/DialogCfg.ts","webpack://rock-raiders-web/./src/gui/briefing/BriefingPanelCfg.ts","webpack://rock-raiders-web/./src/gui/briefing/BriefingPanel.ts","webpack://rock-raiders-web/./src/gui/overlay/MenuCycleItem.ts","webpack://rock-raiders-web/./src/gui/overlay/MenuLabelItem.ts","webpack://rock-raiders-web/./src/gui/overlay/MenuSliderItem.ts","webpack://rock-raiders-web/./src/gui/overlay/MenuLayer.ts","webpack://rock-raiders-web/./src/gui/overlay/MenuBasePanel.ts","webpack://rock-raiders-web/./src/gui/overlay/OptionsPanel.ts","webpack://rock-raiders-web/./src/gui/overlay/PausePanel.ts","webpack://rock-raiders-web/./src/worker/OverlayWorker.ts","webpack://rock-raiders-web/webpack/bootstrap","webpack://rock-raiders-web/webpack/runtime/define property getters","webpack://rock-raiders-web/webpack/runtime/ensure chunk","webpack://rock-raiders-web/webpack/runtime/get javascript chunk filename","webpack://rock-raiders-web/webpack/runtime/global","webpack://rock-raiders-web/webpack/runtime/hasOwnProperty shorthand","webpack://rock-raiders-web/webpack/runtime/publicPath","webpack://rock-raiders-web/webpack/runtime/importScripts chunk loading","webpack://rock-raiders-web/webpack/startup"],"names":["deferred","next","MOUSE_BUTTON","POINTER_EVENT","KEY_EVENT","DEV_MODE","PANEL_ANIMATION_MULTIPLIER","SPRITE_RESOLUTION_WIDTH","SPRITE_RESOLUTION_HEIGHT","NATIVE_FRAMERATE","Rect","arr","x","y","w","h","this","DialogCfg","BaseConfig","cfgObj","super","image","titleWindow","textWindow","okWindow","cancelWindow","contrastOverlay","lCfgKeyName","cfgValue","endsWith","parseValue","BriefingPanelCfg","PanelCfg","titleFont","GuiResourceCache","title","dialogCfg","textFont","nextButtonCfg","buttonType","relX","relY","normalFile","backButtonCfg","BriefingPanel","Panel","parent","cfg","imgTitle","titleRelX","titleRelY","btnNext","btnBack","imgBack","imgParagraphList","paragraph","imgParagraph","onSetSpaceToContinue","state","console","log","createTextImage","width","addChild","Button","onClick","nextParagraph","prevParagraph","hidden","reset","setParagraph","objectiveText","objectiveBackImgCfg","filename","xIn","yIn","height","updatePosition","split","map","txt","length","hide","notifyRedraw","show","context","drawImage","onRedraw","MenuCycleItem","BaseElement","itemCfg","labelX","imgTextNormal","loFont","description","imgTextHover","hiFont","imgLabelOffNormal","labelOff","imgLabelOffHover","imgLabelOnNormal","labelOn","imgLabelOnHover","Math","max","cx","cy","stateChanged","checkHover","checkClick","checkRelease","release","img","imgLabel","hover","MenuLabelItem","autoCenter","target","loImg","label","hiImg","menuImage","MenuSliderItem","sliderX","min","value","onValueChanged","imgLeft","imgNormal","imgOff","imgHover","imgOn","imgRight","leftBtn","BaseButtonCfg","btnLeftNormal","btnLeftHover","rightBtn","btnRightNormal","btnRightHover","posX","dw","round","MenuLayer","menuCfg","itemsTrigger","itemsNext","position","titleImage","menuFont","fullName","itemsLabel","forEach","item","actionName","toLowerCase","push","itemsCycle","itemsSlider","MenuBasePanel","layersByKey","Map","menus","index","set","layer","selectLayer","key","get","l","OptionsPanel","onRepeatBriefing","PausePanel","onAbortGame","onRestartGame","OverlayWorker","GuiWorker","worker","panelPause","addPanel","rootElement","panelOptions","panelBriefing","setActivePanel","sendResponse","type","WorkerMessageType","messageState","canvas","setCanvas","msg","setup","panel","panels","p","redraw","event","every","handlePointerEvent","result","lEventKey","eventEnum","workerInstance","self","addEventListener","data","resourceByName","stats","processMessage","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","__webpack_exports__","O","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","splice","d","definition","o","defineProperty","enumerable","f","e","chunkId","Promise","all","reduce","promises","u","g","globalThis","Function","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","Error","replace","installedChunks","633","chunkLoadingGlobal","parentChunkLoadingFunction","bind","moreModules","runtime","pop","then"],"mappings":"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","file":"633.index.js","sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tresult = fn();\n\t\t}\n\t}\n\treturn result;\n};","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn __webpack_require__.e(969).then(next);\n};","// noinspection JSUnusedGlobalSymbols\nexport enum MOUSE_BUTTON {\n    MAIN = 0,\n    MIDDLE = 1,\n    SECONDARY = 2\n}\n\nexport enum POINTER_EVENT {\n    MOVE,\n    DOWN,\n    UP,\n}\n\nexport enum KEY_EVENT {\n    DOWN,\n    UP,\n}\n","export const DEV_MODE = process.env.WEBPACK_MODE === 'development'\nexport const WAD_CACHE_DB_NAME = 'RockRaidersWeb'\nexport const JOB_SCHEDULE_INTERVAL = 1000 // milliseconds\nexport const CHECK_CLEARRUBBLE_INTERVAL = 5000 // milliseconds\nexport const JOB_ACTION_RANGE = 5\nexport const CHECK_SPANW_RAIDER_TIMER = 1000 // milliseconds\nexport const MAX_RAIDER_BASE = 12\nexport const MAX_RAIDER_REQUEST = 9\nexport const ADDITIONAL_RAIDER_PER_SUPPORT = 10\nexport const UPDATE_OXYGEN_TIMER = 5000 // milliseconds\nexport const PANEL_ANIMATION_MULTIPLIER = 3\nexport const HEIGHT_MULTIPLER = 0.1\nexport const SEQUENCE_TEXTURE_FRAMERATE = 5\n\n// native constants (do not change)\n\nexport const SPRITE_RESOLUTION_WIDTH = 640\nexport const SPRITE_RESOLUTION_HEIGHT = 480\nexport const TILESIZE = 40\nexport const NATIVE_FRAMERATE = 30\n","export class Rect {\n\n    x: number = 0\n    y: number = 0\n    w: number = 0\n    h: number = 0\n\n    constructor(arr: number[]) {\n        [this.x, this.y, this.w, this.h] = arr\n    }\n\n}\n","import { Rect } from '../core/Rect'\nimport { BaseConfig } from './BaseConfig'\n\nexport class DialogCfg extends BaseConfig {\n\n    image: string = null\n    titleWindow: Rect = null\n    textWindow: Rect = null\n    okWindow: Rect = null\n    cancelWindow: Rect = null\n    contrastOverlay: string = null // not used in the game\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n    parseValue(lCfgKeyName: string, cfgValue: any): any {\n        if (lCfgKeyName.endsWith('window')) {\n            return new Rect(cfgValue)\n        }\n        return super.parseValue(lCfgKeyName, cfgValue)\n    }\n\n}\n","import { ButtonCfg } from '../../cfg/ButtonCfg'\nimport { DialogCfg } from '../../cfg/DialogCfg'\nimport { PanelCfg } from '../../cfg/PanelCfg'\nimport { BitmapFont } from '../../core/BitmapFont'\nimport { Rect } from '../../core/Rect'\nimport { GuiResourceCache } from '../GuiResourceCache'\n\nexport class BriefingPanelCfg extends PanelCfg {\n\n    // XXX find config values for this class\n\n    titleFont: BitmapFont\n    title: string\n    titleWindow: Rect\n    textFont: BitmapFont\n    textWindow: Rect\n    nextButtonCfg: ButtonCfg\n    backButtonCfg: ButtonCfg\n\n    constructor() {\n        super([])\n        this.titleFont = GuiResourceCache.getBitmapFont('Interface/Fonts/MbriefFont2.bmp')\n        this.title = GuiResourceCache.cfg('Main', 'MissionBriefingText')\n        const dialogCfg = new DialogCfg(GuiResourceCache.cfg('Dialog'))\n        this.titleWindow = dialogCfg.titleWindow\n        this.textFont = GuiResourceCache.getBitmapFont('Interface/Fonts/MbriefFont.bmp')\n        this.textWindow = dialogCfg.textWindow\n        this.textWindow.y -= 10\n        this.nextButtonCfg = {\n            buttonType: 'Next briefing paragraph',\n            relX: 394,\n            relY: 214,\n            normalFile: GuiResourceCache.cfg('Main', 'NextButton640x480'),\n        }\n        this.backButtonCfg = {\n            buttonType: 'Previous briefing paragraph',\n            relX: 54,\n            relY: 214,\n            normalFile: GuiResourceCache.cfg('Main', 'BackArrow'),\n        }\n    }\n\n}\n","import { ObjectiveImageCfg } from '../../cfg/ObjectiveImageCfg'\nimport { BaseElement } from '../base/BaseElement'\nimport { Button } from '../base/Button'\nimport { Panel } from '../base/Panel'\nimport { GuiResourceCache } from '../GuiResourceCache'\nimport { BriefingPanelCfg } from './BriefingPanelCfg'\n\nexport class BriefingPanel extends Panel {\n\n    cfg: BriefingPanelCfg = null\n    imgTitle: HTMLCanvasElement = null\n    titleRelX: number = 0\n    titleRelY: number = 0\n    btnNext: Button = null\n    btnBack: Button = null\n    imgBack: HTMLCanvasElement = null\n    imgParagraphList: HTMLCanvasElement[] = []\n    paragraph: number = 0\n    imgParagraph: HTMLCanvasElement = null\n    onSetSpaceToContinue: (state: boolean) => any = (state: boolean) => console.log('Message: press space to continue = ' + state)\n\n    constructor(parent: BaseElement) {\n        super(parent)\n        this.cfg = new BriefingPanelCfg()\n        this.imgTitle = this.cfg.titleFont.createTextImage(this.cfg.title)\n        this.titleRelX = this.cfg.titleWindow.x + (this.cfg.titleWindow.w - this.imgTitle.width) / 2\n        this.titleRelY = this.cfg.titleWindow.y\n        this.btnNext = this.addChild(new Button(this, this.cfg.nextButtonCfg))\n        this.btnNext.onClick = () => this.nextParagraph()\n        this.btnBack = this.addChild(new Button(this, this.cfg.backButtonCfg))\n        this.btnBack.onClick = () => this.prevParagraph()\n        this.hidden = true\n    }\n\n    reset() {\n        super.reset()\n        this.hidden = true\n        this.setParagraph(0)\n    }\n\n    setup(objectiveText: string, objectiveBackImgCfg: ObjectiveImageCfg) {\n        this.imgBack = GuiResourceCache.getImageOrNull(objectiveBackImgCfg.filename)\n        this.xIn = objectiveBackImgCfg.x\n        this.yIn = objectiveBackImgCfg.y\n        this.width = this.imgBack.width\n        this.height = this.imgBack.height\n        this.updatePosition()\n        this.imgParagraphList = objectiveText.split('\\\\a').map(txt => this.cfg.textFont.createTextImage(txt, this.cfg.textWindow.w, false))\n    }\n\n    setParagraph(paragraph: number) {\n        if (paragraph < 0) return\n        if (paragraph > this.imgParagraphList.length - 1) {\n            this.hide()\n            this.notifyRedraw()\n            return\n        }\n        this.paragraph = paragraph\n        this.imgParagraph = this.imgParagraphList[this.paragraph]\n        this.btnNext.hidden = this.paragraph >= this.imgParagraphList.length - 1\n        this.btnBack.hidden = this.paragraph < 1\n        this.notifyRedraw()\n    }\n\n    nextParagraph() {\n        this.setParagraph(this.paragraph + 1)\n    }\n\n    prevParagraph() {\n        this.setParagraph(this.paragraph - 1)\n    }\n\n    show() {\n        super.show()\n        this.setParagraph(0)\n        this.btnNext.hidden = this.paragraph >= this.imgParagraphList.length - 1\n        this.btnBack.hidden = this.paragraph < 1\n        this.onSetSpaceToContinue(true)\n    }\n\n    hide() {\n        super.hide()\n        this.onSetSpaceToContinue(false)\n    }\n\n    onRedraw(context: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D) {\n        if (this.hidden) return\n        if (this.imgBack) context.drawImage(this.imgBack, this.x, this.y)\n        if (this.imgTitle) context.drawImage(this.imgTitle, this.x + this.titleRelX, this.y + this.titleRelY)\n        if (this.imgParagraph) context.drawImage(this.imgParagraph, this.x + this.cfg.textWindow.x, this.y + this.cfg.textWindow.y)\n        super.onRedraw(context)\n    }\n\n}\n","import { MenuCycleItemCfg } from '../../cfg/MenuCycleItemCfg'\nimport { BaseElement } from '../base/BaseElement'\nimport { MenuLayer } from './MenuLayer'\n\nexport class MenuCycleItem extends BaseElement {\n\n    imgTextNormal: HTMLCanvasElement\n    imgTextHover: HTMLCanvasElement\n    imgLabelOnNormal: HTMLCanvasElement // TODO only toggle state with clicks on label\n    imgLabelOffNormal: HTMLCanvasElement // TODO use button?\n    imgLabelOnHover: HTMLCanvasElement\n    imgLabelOffHover: HTMLCanvasElement\n\n    labelX: number = 0\n    state: boolean = false\n\n    constructor(parent: MenuLayer, itemCfg: MenuCycleItemCfg) {\n        super(parent)\n        this.relX = itemCfg.x\n        this.relY = itemCfg.y\n        this.labelX = itemCfg.width\n        this.imgTextNormal = parent.loFont.createTextImage(itemCfg.description)\n        this.imgTextHover = parent.hiFont.createTextImage(itemCfg.description)\n        this.imgLabelOffNormal = parent.loFont.createTextImage(itemCfg.labelOff)\n        this.imgLabelOffHover = parent.hiFont.createTextImage(itemCfg.labelOff)\n        this.imgLabelOnNormal = parent.loFont.createTextImage(itemCfg.labelOn)\n        this.imgLabelOnHover = parent.hiFont.createTextImage(itemCfg.labelOn)\n        this.width = itemCfg.width + Math.max(this.imgLabelOnHover.width, this.imgLabelOffHover.width)\n        this.height = this.imgTextNormal.height\n    }\n\n    onClick() {\n        this.state = !this.state\n        console.log('TODO: cycle item clicked; state: ' + this.state)\n    }\n\n    checkHover(cx, cy): boolean {\n        const stateChanged = super.checkHover(cx, cy)\n        if (stateChanged) this.notifyRedraw()\n        return stateChanged\n    }\n\n    checkClick(cx, cy): boolean {\n        const stateChanged = super.checkClick(cx, cy)\n        if (stateChanged) this.notifyRedraw()\n        return stateChanged\n    }\n\n    checkRelease(cx, cy): boolean {\n        const stateChanged = super.checkRelease(cx, cy)\n        if (stateChanged) this.notifyRedraw()\n        return stateChanged\n    }\n\n    release(): boolean {\n        const stateChanged = super.release()\n        if (stateChanged) this.notifyRedraw()\n        return stateChanged\n    }\n\n    onRedraw(context: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D) {\n        if (this.hidden) return\n        let img = this.imgTextNormal\n        let imgLabel = this.state ? this.imgLabelOnNormal : this.imgLabelOffNormal\n        if (this.hover) {\n            img = this.imgTextHover\n            imgLabel = this.state ? this.imgLabelOnHover : this.imgLabelOffHover\n        }\n        context.drawImage(img, this.x, this.y)\n        context.drawImage(imgLabel, this.x + this.labelX, this.y)\n        super.onRedraw(context)\n    }\n\n}\n","import { MenuLabelItemCfg } from '../../cfg/MenuLabelItemCfg'\nimport { BaseElement } from '../base/BaseElement'\nimport { MenuLayer } from './MenuLayer'\n\nexport class MenuLabelItem extends BaseElement {\n\n    target: string\n    loImg: HTMLCanvasElement\n    hiImg: HTMLCanvasElement\n\n    constructor(parent: MenuLayer, itemCfg: MenuLabelItemCfg, autoCenter: boolean) {\n        super(parent)\n        this.target = itemCfg.target\n        this.loImg = parent.loFont.createTextImage(itemCfg.label)\n        this.hiImg = parent.hiFont.createTextImage(itemCfg.label)\n        this.width = this.loImg.width\n        this.height = this.loImg.height\n        this.relX = autoCenter ? -parent.relX + (parent.menuImage.width - this.width) / 2 : itemCfg.x\n        this.relY = itemCfg.y\n    }\n\n    checkHover(cx, cy): boolean {\n        const stateChanged = super.checkHover(cx, cy)\n        if (stateChanged) this.notifyRedraw()\n        return stateChanged\n    }\n\n    checkClick(cx, cy): boolean {\n        const stateChanged = super.checkClick(cx, cy)\n        if (stateChanged) this.notifyRedraw()\n        return stateChanged\n    }\n\n    checkRelease(cx, cy): boolean {\n        const stateChanged = super.checkRelease(cx, cy)\n        if (stateChanged) this.notifyRedraw()\n        return stateChanged\n    }\n\n    release(): boolean {\n        const stateChanged = super.release()\n        if (stateChanged) this.notifyRedraw()\n        return stateChanged\n    }\n\n    onRedraw(context: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D) {\n        if (this.hidden) return\n        if (this.hover) {\n            context.drawImage(this.hiImg, this.x, this.y)\n        } else {\n            context.drawImage(this.loImg, this.x, this.y)\n        }\n        super.onRedraw(context)\n    }\n\n}\n","import { BaseButtonCfg } from '../../cfg/BaseButtonCfg'\nimport { MenuSliderItemCfg } from '../../cfg/MenuSliderItemCfg'\nimport { BaseElement } from '../base/BaseElement'\nimport { Button } from '../base/Button'\nimport { GuiResourceCache } from '../GuiResourceCache'\nimport { MenuLayer } from './MenuLayer'\n\nexport class MenuSliderItem extends BaseElement {\n\n    imgTextNormal: HTMLCanvasElement\n    imgTextHover: HTMLCanvasElement\n    imgLeft: HTMLCanvasElement\n    imgNormal: HTMLCanvasElement\n    imgHover: HTMLCanvasElement\n    imgRight: HTMLCanvasElement\n    sliderX: number = 0\n    min: number = 0\n    max: number = 1\n    value: number = 0\n    onValueChanged: (value: number) => any = (value) => console.log('value changed to: ' + value)\n\n    constructor(parent: MenuLayer, itemCfg: MenuSliderItemCfg) {\n        super(parent)\n        this.relX = itemCfg.x\n        this.relY = itemCfg.y\n        this.sliderX = itemCfg.width\n        this.imgLeft = GuiResourceCache.getImage(itemCfg.imgLeft)\n        this.imgNormal = GuiResourceCache.getImage(itemCfg.imgOff)\n        this.imgHover = GuiResourceCache.getImage(itemCfg.imgOn)\n        this.imgRight = GuiResourceCache.getImage(itemCfg.imgRight)\n        const leftBtn = this.addChild(new Button(this, new BaseButtonCfg()))\n        leftBtn.imgNormal = GuiResourceCache.getImage(itemCfg.btnLeftNormal)\n        leftBtn.imgHover = GuiResourceCache.getImage(itemCfg.btnLeftHover)\n        leftBtn.relX = this.sliderX - this.imgLeft.width - leftBtn.imgHover.width\n        leftBtn.width = leftBtn.imgHover.width\n        leftBtn.height = leftBtn.imgHover.height\n        leftBtn.updatePosition()\n        leftBtn.onClick = () => {\n            if (this.value > this.min) {\n                this.value--\n                this.onValueChanged(this.value)\n            }\n        }\n        const rightBtn = this.addChild(new Button(this, new BaseButtonCfg()))\n        rightBtn.imgNormal = GuiResourceCache.getImage(itemCfg.btnRightNormal)\n        rightBtn.imgHover = GuiResourceCache.getImage(itemCfg.btnRightHover)\n        rightBtn.relX = this.sliderX + this.imgNormal.width + this.imgRight.width * 2\n        rightBtn.width = rightBtn.imgHover.width\n        rightBtn.height = rightBtn.imgHover.height\n        rightBtn.updatePosition()\n        rightBtn.onClick = () => {\n            if (this.value < this.max) {\n                this.value++\n                this.onValueChanged(this.value)\n            }\n        }\n        this.width = itemCfg.width + leftBtn.imgHover.width + this.imgLeft.width + this.imgNormal.width + this.imgRight.width * 2 + rightBtn.imgHover.width\n        this.min = itemCfg.min\n        this.max = itemCfg.max || 1\n        this.value = this.min // TODO set default value\n        this.imgTextNormal = parent.loFont.createTextImage(itemCfg.description)\n        this.imgTextHover = parent.hiFont.createTextImage(itemCfg.description)\n        this.height = this.imgTextNormal.height\n    }\n\n    checkHover(cx, cy): boolean {\n        const stateChanged = super.checkHover(cx, cy)\n        if (stateChanged) this.notifyRedraw()\n        return stateChanged\n    }\n\n    onRedraw(context: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D) {\n        if (this.hidden) return\n        let img = this.imgTextNormal\n        if (this.hover) {\n            img = this.imgTextHover\n        }\n        context.drawImage(img, this.x, this.y)\n        let posX = this.x + this.sliderX\n        context.drawImage(this.imgLeft, posX, this.y)\n        context.drawImage(this.imgNormal, posX, this.y)\n        const dw = Math.round(this.value / this.max * this.imgHover.width)\n        context.drawImage(this.imgHover, 0, 0, dw, this.imgHover.height, posX, this.y, dw, this.imgHover.height)\n        posX += this.imgNormal.width\n        context.drawImage(this.imgRight, posX, this.y)\n        super.onRedraw(context)\n    }\n\n}\n","import { MenuEntryCfg } from '../../cfg/MenuEntryCfg'\nimport { BitmapFont } from '../../core/BitmapFont'\nimport { SPRITE_RESOLUTION_HEIGHT, SPRITE_RESOLUTION_WIDTH } from '../../params'\nimport { BaseElement } from '../base/BaseElement'\nimport { GuiResourceCache } from '../GuiResourceCache'\nimport { MenuCycleItem } from './MenuCycleItem'\nimport { MenuLabelItem } from './MenuLabelItem'\nimport { MenuSliderItem } from './MenuSliderItem'\n\nexport class MenuLayer extends BaseElement {\n\n    menuImage: HTMLCanvasElement\n    titleImage: HTMLCanvasElement\n    loFont: BitmapFont\n    hiFont: BitmapFont\n    itemsTrigger: MenuLabelItem[] = []\n    itemsNext: MenuLabelItem[] = []\n\n    constructor(parent: BaseElement, menuCfg: MenuEntryCfg) {\n        super(parent)\n        this.relX = menuCfg.position[0]\n        this.relY = menuCfg.position[1]\n        this.menuImage = GuiResourceCache.getImageOrNull(menuCfg.menuImage[0]) // menuImage has 4 parameter here\n        this.titleImage = GuiResourceCache.getBitmapFont(menuCfg.menuFont).createTextImage(menuCfg.fullName)\n        this.loFont = GuiResourceCache.getBitmapFont(menuCfg.loFont)\n        this.hiFont = GuiResourceCache.getBitmapFont(menuCfg.hiFont)\n        menuCfg.itemsLabel.forEach((itemCfg) => {\n            const item = this.addChild(new MenuLabelItem(this, itemCfg, menuCfg.autoCenter))\n            if (itemCfg.actionName.toLowerCase() === 'trigger') {\n                this.itemsTrigger.push(item)\n            } else {\n                this.itemsNext.push(item)\n            }\n        })\n        menuCfg.itemsCycle.forEach((itemCfg) => this.addChild(new MenuCycleItem(this, itemCfg)))\n        menuCfg.itemsSlider.forEach((itemCfg) => this.addChild(new MenuSliderItem(this, itemCfg)))\n        this.hidden = true\n    }\n\n    reset() {\n        super.reset()\n        this.hidden = true\n    }\n\n    onRedraw(context: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D) {\n        if (this.hidden) return\n        context.drawImage(this.menuImage, (SPRITE_RESOLUTION_WIDTH - this.menuImage.width) / 2, (SPRITE_RESOLUTION_HEIGHT - this.menuImage.height) / 2)\n        context.drawImage(this.titleImage, (SPRITE_RESOLUTION_WIDTH - this.titleImage.width) / 2, this.y)\n        super.onRedraw(context)\n    }\n\n}\n","import { MenuCfg } from '../../cfg/MenuCfg'\nimport { BaseElement } from '../base/BaseElement'\nimport { Panel } from '../base/Panel'\nimport { MenuLayer } from './MenuLayer'\n\nexport class MenuBasePanel extends Panel {\n\n    layersByKey: Map<string, MenuLayer> = new Map()\n\n    constructor(parent: BaseElement, cfg: MenuCfg) {\n        super(parent)\n        this.hidden = true\n        cfg.menus.forEach((menuCfg, index) => this.layersByKey.set('menu' + (index + 1), this.addChild(new MenuLayer(this, menuCfg))))\n        this.layersByKey.forEach((layer) => layer.itemsNext.forEach((item) => item.onClick = () => this.selectLayer(item.target)))\n    }\n\n    reset() {\n        super.reset()\n        this.hidden = true\n    }\n\n    show() {\n        this.hidden = false\n        this.selectLayer('menu1')\n    }\n\n    hide() {\n        super.hide()\n        this.notifyRedraw()\n    }\n\n    selectLayer(key: string) {\n        const layer = this.layersByKey.get(key.toLowerCase())\n        this.layersByKey.forEach(l => l !== layer && l.hide())\n        layer.show()\n        this.notifyRedraw()\n    }\n\n}\n","import { MenuCfg } from '../../cfg/MenuCfg'\nimport { BaseElement } from '../base/BaseElement'\nimport { MenuBasePanel } from './MenuBasePanel'\n\nexport class OptionsPanel extends MenuBasePanel {\n\n    onRepeatBriefing: () => any = () => console.log('repeat mission briefing')\n\n    constructor(parent: BaseElement, cfg: MenuCfg) {\n        super(parent, cfg)\n        this.layersByKey.get('menu1').itemsTrigger[0].onClick = () => this.onRepeatBriefing()\n        this.layersByKey.get('menu1').itemsTrigger[1].onClick = () => this.hide()\n    }\n\n}\n","import { MenuCfg } from '../../cfg/MenuCfg'\nimport { BaseElement } from '../base/BaseElement'\nimport { MenuBasePanel } from './MenuBasePanel'\n\nexport class PausePanel extends MenuBasePanel {\n\n    onRepeatBriefing: () => any = () => console.log('repeat mission briefing')\n    onAbortGame: () => any = () => console.log('abort mission')\n    onRestartGame: () => any = () => console.log('restart mission')\n\n    constructor(parent: BaseElement, cfg: MenuCfg) {\n        super(parent, cfg)\n        this.layersByKey.get('menu1').itemsTrigger[0].onClick = () => this.hide() // Pause\n        this.layersByKey.get('menu2').itemsTrigger[0].onClick = () => this.onRepeatBriefing() // Options\n        this.layersByKey.get('menu3').itemsTrigger[0].onClick = () => this.onAbortGame() // Quit\n        this.layersByKey.get('menu4').itemsTrigger[0].onClick = () => this.onRestartGame() // Restart\n    }\n\n}\n","import { MenuCfg } from '../cfg/MenuCfg'\nimport { ObjectiveImageCfg } from '../cfg/ObjectiveImageCfg'\nimport { KEY_EVENT } from '../event/EventTypeEnum'\nimport { GameKeyboardEvent } from '../event/GameKeyboardEvent'\nimport { GamePointerEvent } from '../event/GamePointerEvent'\nimport { Panel } from '../gui/base/Panel'\nimport { BriefingPanel } from '../gui/briefing/BriefingPanel'\nimport { GuiResourceCache } from '../gui/GuiResourceCache'\nimport { OptionsPanel } from '../gui/overlay/OptionsPanel'\nimport { PausePanel } from '../gui/overlay/PausePanel'\nimport { DEV_MODE } from '../params'\nimport { WorkerMessageType } from '../resource/wadworker/WorkerMessageType'\nimport { GuiWorker } from './GuiWorker'\nimport { GuiWorkerMessage } from './GuiWorkerMessage'\n\nexport class OverlayWorker extends GuiWorker {\n\n    panelBriefing: BriefingPanel\n    panelOptions: OptionsPanel\n    panelPause: PausePanel\n\n    constructor(worker: Worker) {\n        super(worker)\n        this.panelPause = this.addPanel(new PausePanel(this.rootElement, GuiResourceCache.getResource('PausedMenu') as MenuCfg))\n        this.panelOptions = this.addPanel(new OptionsPanel(this.rootElement, GuiResourceCache.getResource('OptionsMenu') as MenuCfg))\n        this.panelBriefing = this.addPanel(new BriefingPanel(this.rootElement))\n        // link items\n        this.panelPause.onRepeatBriefing = () => this.setActivePanel(this.panelBriefing)\n        this.panelOptions.onRepeatBriefing = () => this.setActivePanel(this.panelBriefing)\n        this.panelBriefing.onSetSpaceToContinue = (state: boolean) => this.sendResponse({\n            type: WorkerMessageType.SPACE_TO_CONINUE,\n            messageState: state,\n        })\n        this.panelPause.onAbortGame = () => this.sendResponse({type: WorkerMessageType.GAME_ABORT})\n        this.panelPause.onRestartGame = () => this.sendResponse({type: WorkerMessageType.GAME_RESTART})\n    }\n\n    setCanvas(canvas: OffscreenCanvas) {\n        super.setCanvas(canvas)\n        this.panelPause.width = this.canvas.width\n        this.panelPause.height = this.canvas.height\n        this.panelOptions.width = this.canvas.width\n        this.panelOptions.height = this.canvas.height\n    }\n\n    onProcessMessage(msg: GuiWorkerMessage): boolean {\n        if (msg.type === WorkerMessageType.OVERLAY_SETUP) {\n            this.setup(msg.objectiveText, msg.objectiveBackImgCfg)\n        } else if (msg.type === WorkerMessageType.SHOW_OPTIONS) {\n            this.panelOptions.show()\n        } else {\n            return false\n        }\n        return true\n    }\n\n    setActivePanel(panel: Panel) {\n        this.panels.forEach(p => p !== panel && p.hide())\n        panel.show()\n        this.redraw()\n    }\n\n    setup(objectiveText: string, objectiveBackImgCfg: ObjectiveImageCfg) {\n        this.panelBriefing.setup(objectiveText, objectiveBackImgCfg)\n        if (!DEV_MODE) this.setActivePanel(this.panelBriefing)\n    }\n\n    handlePointerEvent(event: GamePointerEvent): boolean {\n        if (this.panels.every(p => p.hidden)) return false\n        return super.handlePointerEvent(event) || true // catch em all\n    }\n\n    handleKeyEvent(event: GameKeyboardEvent): boolean {\n        let result = false\n        const lEventKey = event.key.toLowerCase()\n        if (event.eventEnum === KEY_EVENT.UP) {\n            if (lEventKey === 'escape') {\n                if (this.panelBriefing.hidden && this.panelOptions.hidden) {\n                    if (this.panelPause.hidden) {\n                        // TODO actually pause the game\n                        this.setActivePanel(this.panelPause)\n                    } else {\n                        // TODO actually unpause the game\n                        this.panelPause.hide()\n                    }\n                    result = true\n                }\n            } else if (lEventKey === ' ') { // space\n                if (!this.panelBriefing.hidden) {\n                    this.panelBriefing.nextParagraph()\n                    result = true\n                }\n            }\n        }\n        return result\n    }\n\n}\n\nlet workerInstance: GuiWorker = null\n\nconst worker: Worker = self as any\n\nworker.addEventListener('message', (event) => {\n    const msg: GuiWorkerMessage = event.data\n    if (msg.type === WorkerMessageType.INIT) {\n        GuiResourceCache.resourceByName = msg.resourceByName\n        GuiResourceCache.configuration = msg.cfg\n        GuiResourceCache.stats = msg.stats\n        workerInstance = new OverlayWorker(worker)\n    } else {\n        workerInstance.processMessage(msg)\n    }\n})\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [969], () => (__webpack_require__(633)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".index.js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t633: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkrock_raiders_web\"] = self[\"webpackChunkrock_raiders_web\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"sourceRoot":""}