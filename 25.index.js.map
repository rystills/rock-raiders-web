{"version":3,"sources":["webpack://rock-raiders-web/./src/core/Util.ts","webpack://rock-raiders-web/./src/core/ImageHelper.ts","webpack://rock-raiders-web/./src/resource/FlhParser.ts","webpack://rock-raiders-web/./src/resource/wadworker/parser/BitmapWithPalette.ts","webpack://rock-raiders-web/./src/resource/wadworker/parser/EncodingHelper.ts","webpack://rock-raiders-web/./src/resource/wadworker/parser/CfgFileParser.ts","webpack://rock-raiders-web/./src/cfg/LevelObjectiveTextEntry.ts","webpack://rock-raiders-web/./src/resource/wadworker/parser/ObjectiveTextParser.ts","webpack://rock-raiders-web/./src/game/model/job/PriorityIdentifier.ts","webpack://rock-raiders-web/./src/resource/wadworker/WorkerMessageType.ts","webpack://rock-raiders-web/./src/resource/wadworker/parser/WadParser.ts","webpack://rock-raiders-web/./src/cfg/BaseConfig.ts","webpack://rock-raiders-web/./src/cfg/ConfigColor.ts","webpack://rock-raiders-web/./src/cfg/ObjectiveImageCfg.ts","webpack://rock-raiders-web/./src/cfg/LevelsCfg.ts","webpack://rock-raiders-web/./src/cfg/MenuCycleItemCfg.ts","webpack://rock-raiders-web/./src/cfg/MenuLabelItemCfg.ts","webpack://rock-raiders-web/./src/cfg/CfgHelper.ts","webpack://rock-raiders-web/./src/cfg/MenuSliderItemCfg.ts","webpack://rock-raiders-web/./src/cfg/MenuEntryCfg.ts","webpack://rock-raiders-web/./src/cfg/MenuCfg.ts","webpack://rock-raiders-web/./src/cfg/RewardCfg.ts","webpack://rock-raiders-web/./src/resource/wadworker/parser/RonFileParser.ts","webpack://rock-raiders-web/./src/resource/wadworker/WadAssetRegistry.ts","webpack://rock-raiders-web/./src/resource/wadworker/WadFile.ts","webpack://rock-raiders-web/./src/resource/wadworker/WadLoader.ts","webpack://rock-raiders-web/./src/resource/wadworker/WadUtil.ts","webpack://rock-raiders-web/./src/resource/wadworker/parser/NerpMsgParser.ts","webpack://rock-raiders-web/./src/params.ts","webpack://rock-raiders-web/./src/cfg/BuildingEntityStats.ts","webpack://rock-raiders-web/./src/cfg/GameStatsCfg.ts","webpack://rock-raiders-web/./src/resource/wadworker/WadWorkerMessage.ts","webpack://rock-raiders-web/./src/resource/wadworker/WadWorker.ts"],"names":["getPath","url","strUrl","toString","replace","startsWith","substring","lastInd","lastIndexOf","getFilename","iGet","obj","keys","forEach","keyname","Object","filter","key","toLowerCase","map","setPixel","imgData","x","y","r","g","b","a","n","width","data","Array","prototype","add","element","this","indexOf","push","remove","index","splice","last","length","undefined","count","callback","counter","e","partition","left","right","random","max","min","Math","ceil","floor","getRandomInclusive","Map","getOrUpdate","updateCallback","value","get","set","String","equalsIgnoreCase","other","FlhParser","dataView","fileLength","flicFileType","lengthFrames","frames","height","depth","offsetFirstFrame","flhContent","DataView","parseHeader","parseChunks","getDWord","getWord","console","warn","frameIndex","chunkStart","chunkLength","chunkType","chunkDataView","buffer","slice","parseFrameType","toUpperCase","seg","offset","numChunks","getUint16","len","getUint32","parseDtaBrun","parseDeltaFlc","ImageData","w","repeat","getInt8","i","getARGBFrom555RGB","res","numLines","linesDone","packCount","opcode","getInt16","opType","abs","j","rgb","HeaderTypes","BmpDecoder","toRGBA","bufferView","byteOffset","byteLength","bottomUp","flag","fromCharCode","pos","Error","locRed","locGreen","locBlue","locAlpha","parseRGBA","fileSize","readUInt32LE","reserved1","reserved2","headerSize","planes","bitPP","compression","rawSize","hr","vr","colors","importantColors","maskAlpha","maskRed","maskGreen","maskBlue","BITMAP_INFO_HEADER","BITMAP_V2_INFO_HEADER","BITMAP_V3_INFO_HEADER","BITMAP_V4_HEADER","BITMAP_V5_HEADER","palette","blue","green","red","quad","coloShift","maskRedR","maskGreenR","maskBlueR","maskAlphaR","shiftedMaskRedL","shiftedMaskGreenL","shiftedMaskBlueL","shiftedMaskAlphaL","shiftRed","shiftGreen","shiftBlue","shiftAlpha","maskColor","Uint8Array","bit1","bit4","bit8","bit16","bit24","bit32","xLen","mode","padding","lastLine","scanImage","line","location","fill","lowNibble","lines","c","setPixelData","first4","last4","loc","px","processPixel","call","rgbIndex","BitmapWithPalette","decoder","super","Uint8ClampedArray","alphaIndex","alphaColor","encodeChar","CfgFileParser","result","ancestry","activeObject","isComment","parsingState","seek","charCode","charStr","pop","parsed","parseValue","hasOwnProperty","stack","val","isArray","sub","values","levelConf","textureSet","dependencies","flatDeps","d","reduce","array","splitShrink","sep","split","num","Number","isNaN","lVal","includes","LevelObjectiveTextEntry","ObjectiveTextParser","txtFileContent","state","PARSING_STATE","DROP","currentLevel","code","char","KEY","lLine","OBJECTIVE","FAILURE","COMPLETION","CRYSTAL_FAILURE","charCodeAt","objective","failure","completion","crystalFailure","PriorityIdentifier","WorkerMessageType","WadParser","level","row","objectList","currentObject","trim","objectStartMatch","match","drivingMatch","driving","parseFloat","BaseConfig","config","cfgObj","cfgKey","lCfgKeyName","some","objKey","assignValue","constructor","name","cfgValue","currentValue","currentIsArray","parsedValue","parsedIsArray","ConfigColor","ObjectiveImageCfg","filename","LevelsCfg","levelsByName","levelKey","LevelEntryCfg","fullName","endGameAvi1","endGameAvi2","allowRename","recallOLObjects","generateSpiders","video","disableEndTeleport","disableStartTeleport","emergeTimeOut","boulderAnimation","noMultiSelect","noAutoEat","disableToolTipSound","blockSize","digDepth","roughLevel","roofHeight","useRoof","selBoxHeight","fpRotLightRGB","fogColourRGB","highFogColourRGB","fogRate","fallinMultiplier","numberOfLandSlidesTillCaveIn","noFallins","oxygenRate","surfaceMap","predugMap","terrainMap","emergeMap","erodeMap","fallinMap","blockPointersMap","cryOreMap","pathMap","noGather","rockFallStyle","emergeCreature","safeCaverns","seeThroughWalls","oListFile","ptlFile","nerpFile","nerpMessageFile","objectiveText","objectiveImage640x480","erodeTriggerTime","erodeErodeTime","erodeLockTime","nextLevel","levelLinks","frontEndX","frontEndY","frontEndOpen","priorities","reward","menuBMP","setFromCfg","endsWith","LevelPrioritiesEntryConfig","LevelRewardConfig","enabled","enable","modifier","importance","quota","LevelRewardImportanceConfig","LevelRewardQuotaConfig","crystals","timer","caverns","constructions","oxygen","figures","MenuCycleItemCfg","actionName","description","two","labelOff","labelOn","MenuLabelItemCfg","label","target","join","parseLabel","imgNormal","imgHover","imgPressed","tooltip","log","MenuSliderItemCfg","imgOff","imgOn","imgLeft","imgRight","btnRightNormal","btnLeftNormal","btnRightHover","btnLeftHover","MenuEntryCfg","title","position","menuFont","loFont","hiFont","itemCount","menuImage","autoCenter","displayTitle","overlays","playRandom","itemsLabel","itemsSlider","itemsCycle","anchored","canScroll","lActionName","MenuCfg","menuCount","menus","RewardCfg","display","wallpaper","images","texts","boxImages","fonts","flics","scrollSpeed","centreText","vertSpacing","backFont","font","titleFont","saveButton","advanceButton","completeText","failedText","quitText","textPos","imgConf","RewardImageCfg","RewardTextCfg","RewardFontsCfg","filePath","text","ore","diggable","rockMonsters","score","RonFileParser","content","l","indDoubleSlash","indComment","v","root","parseObj","start","lv","WadAssetRegistry","wadLoader","mainConf","addAssetFolder","loadFontImageAsset","loadAlphaImageAsset","wad0File","filterEntryNames","assetPath","addAsset","loadFlhAsset","addMenuWithAssets","loadObjectiveTexts","addAlphaImageFolder","loadWadImageAsset","loadNerpAsset","levelsCfg","onAssetLoaded","bmpName","loadMapAsset","loadObjectListAsset","loadNerpMsg","addTextureFolder","upgradeTypes","uType","addMeshObjects","buildingTypes","bType","addAnimatedEntity","rockMonsterTypes","mType","vehicleTypes","vType","loadLWOFile","loadWadTexture","addLWSFile","miscObjects","rewardCfg","imgPath","img","sndPathToKeys","samplesConf","sndKey","sndPath","sndKeys","loadWavAsset","basePath","aeFilepath","hasEntry","aeSharedFilepath","lwsFilepath","lwsSharedFilepath","lwoFilepath","lwoSharedFilepath","aeFile","getEntryText","cfgRoot","parse","path","wheelMeshName","polyType","cfgPoly","activities","activity","act","file","error","extractLwoFiles","lwoFile","objLine","folderPath","menuImageAlpha","menuCfg","method","optional","sfxKeys","bind","WadFile","entryIndexByName","fLength","fStart","debug","Int8Array","apply","numberOfEntries","getInt32","bufferStart","entryName","getEntryBuffer","getEntryData","regexStr","regex","RegExp","entry","WadLoader","wad1File","assetIndex","totalResources","assetRegistry","onMessage","msg","onInitialLoad","onLoadDone","loadingTimeSeconds","decode","alphaIndexMatch","assetNames","parseInt","applyAlphaByIndex","arr","grayscaleToGreen","applyAlpha","nrnName","wad0Data","wad1Data","parseNerpMsgFile","msg1","m1","txt","snd","wadData","isWad0File","txt0Match","txt1Match","sndMatch","numericNameToNumber","digits","one","three","four","five","six","seven","eight","nine","tens","twenty","thirty","forty","number","ten","eleven","twelve","thirteen","fourteen","fifteen","sixteen","seventeen","eighteen","nineteen","eightteen","digitName","parseNerpMessages","txtContent","parseObjectiveTextFile","parseMap","parseObjectList","lwoContent","promises","that","asset","Promise","resolve","assetObj","all","then","Date","getTime","startTime","toFixed","onCacheMiss","_onerror","openLocalCache","objectStore","request1","onerror","onsuccess","prop","request2","startLoadingProcess","wad0Url","wad1Url","loadWadFile","wadFiles","put","fetch","response","ok","arrayBuffer","wadFile","parseWadFile","catch","onopen","request","indexedDB","open","onupgradeneeded","db","objectStoreNames","contains","deleteObjectStore","createObjectStore","transaction","cfg","registerAllAssets","size","loadAssetsParallel","BuildingEntityStats","Levels","SelfPowered","PowerBuilding","PickSphere","TrainDynamite","CostOre","CostCrystal","OxygenCoef","EngineSound","GameStatsCfg","Pilot","RouteSpeed","SoilDrillTime","LooseDrillTime","MedDrillTime","HardDrillTime","SeamDrillTime","UpgradeTime","CollRadius","CollHeight","TrackDist","SingleWidthDig","RepairValue","SurveyRadius","Drillsound","Drillfadesound","RestPercent","EnergyDecayRate","CanClearRubble","NumOfToolsCanCarry","CrossLand","RubbleCoef","PathCoef","RouteAvoidance","UseLegoManTeleporter","AwarenessRange","CanStrafe","EnterToolStore","ShowHealthBar","RockMonster","AlertRadius","HealthDecayRate","CanScare","CarryMinHealth","PainThreshold","StampRadius","AttackRadius","CanSteal","GrabMinifigure","BumpDamage","AttackPaths","SplitOnZeroHealth","CanBeHitByFence","Capacity","CanBeShotAt","CanFreeze","FreezerTime","FreezerDamage","CanLaser","LaserDamage","CanPush","PusherDist","PusherDamage","WakeRadius","ScaredByBigBangs","RemoveReinforcement","SmallSpider","RandomMove","RandomEnterWall","CauseSlip","DontShowDamage","DontShowOnRadar","Bat","randomMoveTime","Flocks","FlocksDebug","FlocksSmooth","FlocksSize","FlocksTurn","FlocksSpeed","FlocksTightness","FlocksGoalUpdate","FlocksRandomness","FlocksHeight","CrossWater","CrossLava","TinyRM","ScaredByPlayer","TinyIM","Slug","UseHoles","DrainPower","LavaMonster","IceMonster","Hoverboard","CanBeDriven","UseSmallTeleporter","UpgradeCostOre","UpgradeCostStuds","SmallHeli","Smallmlp","Tracker","CanDoubleSelect","SmallCat","UseWaterTeleporter","MaxCarry","GetInAtLand","GetOutAtLand","TakeCarryingDrivers","SmallDigger","VehicleCanBeCarried","SmallTruck","CarryStart","Bulldozer","UseBigTeleporter","InvisibleDriver","WalkerDigger","DrillSound","DrillFadeSound","LargeDigger","LargeCat","ClassAsLarge","CarryVehicles","LargeHeli","LargeMLP","Barracks","CostRefinedOre","SnaxULike","TrainDriver","CrystalDrain","DamageCausesCallToArms","Powerstation","ProcessCrystal","OreRefinery","ProcessOre","TeleportPad","SmallTeleporter","ManTeleporter","TrainPilot","TeleportBIG","BigTeleporter","Docks","WaterEntrances","WaterTeleporter","TrainSailor","Toolstation","ToolStore","StoreObjects","FunctionCoef","GunStation","Geodome","TrainScanner","Upgrade","UpgradeBuilding","TrainRepair","PowerCrystal","ProcessedOre","Ore","Boulder","Pusher","Freezer","LaserShot","ColRadius","ElectricFence","Path","WadWorkerMessage","type","MSG","CFG","stats","ASSET","DONE","worker","self","postMessage","assetMessage","addEventListener","event","createTextMessage","createCfgLoaded","createAssetLoaded","createLoadDone","loadWadFiles","wad0FileUrl","wad1FileUrl","startWithCachedFiles","CACHE_MISS"],"mappings":"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","file":"25.index.js","sourcesContent":["export function getPath(url: string): string {\n    if (!url) return url\n    let strUrl = url.toString().replace(/\\\\/g, '/')\n    if (strUrl.startsWith('/')) strUrl = strUrl.substring(1)\n    const lastInd = strUrl.lastIndexOf('/')\n    strUrl = strUrl.substring(0, lastInd + 1)\n    if (strUrl.startsWith('/')) strUrl = strUrl.substring(1)\n    return strUrl\n}\n\nexport function getFilename(url: string): string {\n    if (!url) return url\n    let strUrl = url.toString().replace(/\\\\/g, '/')\n    if (strUrl.startsWith('/')) strUrl = strUrl.substring(1)\n    const lastInd = strUrl.lastIndexOf('/')\n    return strUrl.substring(lastInd + 1)\n}\n\nexport function iGet(obj, ...keys: string[]): any {\n    keys.forEach((keyname) => {\n        obj = Object.keys(obj)\n            .filter((key) => key.toLowerCase() === keyname.toLowerCase())\n            .map((key) => obj[key])\n        obj = obj ? obj[0] : obj\n    })\n    return obj\n}\n\nexport function decodeString(data) {\n    return new TextDecoder().decode(data).replace(/\\0/g, '')\n}\n\nexport function decodeFilepath(data) {\n    return decodeString(data).replace(/\\\\/g, '/')\n}\n\nexport function getRandomInclusive(min, max) {\n    min = Math.ceil(min)\n    max = Math.floor(max)\n    return Math.floor(Math.random() * (max - min + 1)) + min\n}\n\nexport function getRandom(max) {\n    return getRandomInclusive(0, max)\n}\n\nexport function getRandomSign() {\n    return -1 + getRandomInclusive(0, 1) * 2\n}\n\nexport function clearTimeoutSafe(timeout: NodeJS.Timeout) {\n    if (timeout) clearTimeout(timeout)\n    return null\n}\n\nexport function clearIntervalSafe(interval: NodeJS.Timeout) {\n    if (interval) clearInterval(interval)\n    return null\n}\n\ndeclare global {\n\n    interface Array<T> {\n        add(element: T): void\n\n        remove(element: T): void\n\n        last(): T\n\n        count(callback: (element: T) => boolean): number\n\n        partition(filter: (element: T) => boolean): [T[], T[]]\n\n        random(): T\n    }\n\n    interface Map<K, V> {\n        getOrUpdate(key: K, updateCallback: () => V): V\n    }\n\n    interface String {\n        equalsIgnoreCase(other: string): boolean\n    }\n\n}\n\nArray.prototype.add = function <T>(element: T): void {\n    const index = this.indexOf(element)\n    if (index === -1) this.push(element)\n}\n\nArray.prototype.remove = function <T>(element: T): void {\n    const index = this.indexOf(element)\n    if (index !== -1) this.splice(index, 1)\n}\n\nArray.prototype.last = function <T>(): T {\n    return this.length > 0 ? this[this.length - 1] : undefined\n}\n\nArray.prototype.count = function <T>(callback: (element: T) => boolean): number {\n    let counter = 0\n    this.forEach((e) => callback(e) && counter++)\n    return counter\n}\n\nArray.prototype.partition = function <T>(filter: (element: T) => boolean): [T[], T[]] {\n    const left: T[] = [], right: T[] = []\n    this.forEach((a) => filter(a) ? left.push(a) : right.push(a))\n    return [left, right]\n}\n\nArray.prototype.random = function <T>(): T {\n    if (!this.length) return undefined\n    return this[getRandom(this.length - 1)]\n}\n\n// noinspection JSUnusedGlobalSymbols\nMap.prototype.getOrUpdate = function <K, V>(key: K, updateCallback: () => V): V {\n    let value = this.get(key)\n    if (value === undefined) {\n        value = updateCallback()\n        this.set(key, value)\n    }\n    return value\n}\n\nString.prototype.equalsIgnoreCase = function (other: string): boolean {\n    return this.toLowerCase() === other?.toLowerCase()\n}\n","/**\n * creates a new context with the specified dimensions.\n * @param width: the desired width of the new context\n * @param height: the desired height of the new context\n * @returns RenderingContext the newly created canvas\n */\nexport function createContext(width, height): SpriteContext {\n    if (width < 1 || height < 1) {\n        console.error('Can\\'t create context with size ' + width + ' x ' + height)\n        return createDummyContext(64, 64)\n    }\n    let canvas\n    if (typeof document !== 'undefined') {\n        canvas = document.createElement('canvas')\n        canvas.setAttribute('width', width)\n        canvas.setAttribute('height', height)\n    } else {\n        canvas = new OffscreenCanvas(width, height)\n    }\n    const context = canvas.getContext('2d')\n    context.width = width\n    context.height = height\n    return context\n}\n\n/**\n * This method is intended to increase stability by providing an (ugly) placeholder image in case the right one is missing\n * @param width: expected width of the original image\n * @param height: expected height of the original image\n */\nexport function createDummyContext(width, height): SpriteContext {\n    const result = createContext(width, height)\n    for (let y = 0; y < height; y += 16) {\n        for (let x = 0; x < width; x += 16) {\n            if (x / 16 % 2 === y / 16 % 2) {\n                result.fillStyle = 'rgb(0,255,255)'\n            } else {\n                result.fillStyle = 'rgb(255,0,255)'\n            }\n            result.fillRect(x, y, 16, 16)\n        }\n    }\n    return result\n}\n\nexport function createDummyImgData(width, height): ImageData {\n    const result = new ImageData(width, height)\n    for (let y = 0; y < height; y += 16) {\n        for (let x = 0; x < width; x += 16) {\n            const e = x / 16 % 2 === y / 16 % 2\n            for (let px = x; px < x + 16; px++) {\n                for (let py = y; py < y + 16; py++) {\n                    setPixel(result, px, py, e ? 0 : 255, e ? 255 : 0, 255)\n                }\n            }\n        }\n    }\n    return result\n}\n\nexport function setPixel(imgData, x, y, r, g, b, a = 255): void {\n    const n = (y * imgData.width + x) * 4\n    imgData.data[n] = r\n    imgData.data[n + 1] = g\n    imgData.data[n + 2] = b\n    imgData.data[n + 3] = a\n}\n\nexport function getPixel(imgData, x, y): { r: number, g: number, b: number, a: number } {\n    const n = (y * imgData.width + x) * 4\n    return {r: imgData.data[n], g: imgData.data[n + 1], b: imgData.data[n + 2], a: imgData.data[n + 3]}\n}\n","import { setPixel } from '../core/ImageHelper'\n\n/**\n * References for FLIC file formats (FLC, FLI and FLH)\n *\n * https://www.compuphase.com/flic.htm#DELTA_FLC\n * https://github.com/miningmanna/LRR-remake/blob/master/src/org/rrr/assets/tex/FLHFile.java\n * https://www.drdobbs.com/windows/the-flic-file-format/184408954\n * http://bespin.org/~qz/pc-gpe/fli.for\n * https://github.com/aseprite/flic/blob/main/decoder.cpp\n *\n */\n\nexport class FlhParser {\n\n    dataView: DataView = null\n    fileLength: number = null\n    flicFileType: number = null\n    lengthFrames: number = null\n    frames: Array<ImageData> = null\n    width: number = null\n    height: number = null\n    depth: number = null\n    offsetFirstFrame: number = null\n\n    parse(flhContent: ArrayBufferLike): ImageData[] {\n        this.dataView = new DataView(flhContent)\n        this.parseHeader()\n        this.parseChunks()\n        return this.frames\n    }\n\n    private parseHeader() {\n        this.fileLength = this.getDWord(0)\n        this.flicFileType = this.getWord(4)\n        if (this.flicFileType !== 0xAF43) console.warn('Unexpected FLIC file type found: ' + this.flicFileType + ' does not match expected 0xAF43')\n        this.lengthFrames = this.getWord(6)\n        this.frames = new Array(this.lengthFrames)\n        this.width = this.getWord(8)\n        this.height = this.getWord(10)\n        this.depth = this.getWord(12)\n        if (this.depth != 16) console.warn('Expected 16 bit colors in flh file; got instead: ' + this.depth)\n        // const flags = this.getWord(14) // always 0\n        // const speed = this.getDWord(16) // delay between frames; always 0\n        this.offsetFirstFrame = this.getDWord(80)\n    }\n\n    private parseChunks() {\n        let frameIndex = 0\n        for (let chunkStart = this.offsetFirstFrame; chunkStart < this.fileLength;) {\n            const chunkLength = this.getDWord(chunkStart)\n            const chunkType = this.getWord(chunkStart + 4)\n            const chunkDataView = new DataView(this.dataView.buffer.slice(chunkStart + 6, chunkStart + chunkLength)) // TODO do not slice buffer, but instead use offsets\n            switch (chunkType) {\n                case 0xF1FA:\n                    if (chunkLength > 16) {\n                        this.parseFrameType(chunkDataView, frameIndex)\n                        frameIndex++\n                    }\n                    break\n                default:\n                    console.warn('Unexpected chunk type: 0x' + chunkType.toString(16).toUpperCase())\n                    break\n            }\n            chunkStart += chunkLength\n        }\n    }\n\n    parseFrameType(seg: DataView, frameIndex: number) {\n        let offset = 0\n        const numChunks = seg.getUint16(offset, true)\n        if (numChunks > 1) {\n            console.warn('More than one sub-chunk; got instead: ' + numChunks)\n        }\n        offset += 2\n        offset += 2\n        offset += 2 // reserved = 0\n        offset += 4 // width and height override should be 0\n\n        let len = seg.getUint32(offset, true)\n        len -= 6\n        offset += 4\n        const chunkType = seg.getUint16(offset, true)\n        offset += 2\n\n        switch (chunkType) {\n            case 25:\n                this.parseDtaBrun(seg, offset, len, frameIndex)\n                break\n            case 27:\n                this.parseDeltaFlc(seg, offset, len, frameIndex)\n                break\n            default:\n                console.warn('Unsupported sub-chunk type: ' + chunkType)\n                break\n        }\n    }\n\n    private parseDtaBrun(seg: DataView, offset: number, len: number, frameIndex: number) {\n        const imgData = new ImageData(this.width, this.height)\n        let x = 0\n        let y = 0\n        let w = this.width\n        offset += 1\n        while ((len - offset) > 0) {\n            let repeat = seg.getInt8(offset)\n            if (repeat < 0) {\n                repeat = (repeat * -1)\n                for (let i = 0; i < repeat; i++) {\n                    const [r, g, b] = this.getARGBFrom555RGB(seg, offset + i * 2 + 1)\n                    setPixel(imgData, x, y, r, g, b, (!r && !g && !b ? 0 : 255)) // TODO these loops can be simplified, don't use x y\n                    x++\n                }\n                offset += repeat * 2 + 1\n            } else {\n                const [r, g, b] = this.getARGBFrom555RGB(seg, offset + 1)\n                for (let i = 0; i < repeat; i++) {\n                    setPixel(imgData, x, y, r, g, b, (!r && !g && !b ? 0 : 255)) // TODO these loops can be simplified, don't use x y\n                    x++\n                }\n                offset += 3\n            }\n            if (x >= w) {\n                x %= w\n                y++\n                if (y > this.height) break\n                offset++\n            }\n        }\n        this.frames[frameIndex] = imgData\n    }\n\n    private parseDeltaFlc(seg: DataView, offset: number, len: number, frameIndex: number) {\n        const res = new ImageData(this.width, this.height)\n        if (frameIndex > 0) {\n            res.data.set(this.frames[frameIndex - 1].data)\n        }\n        const numLines = seg.getUint16(offset, true)\n        offset += 2\n        let y = 0\n        let linesDone = 0\n        while ((len - offset) > 0) {\n            if (numLines === linesDone) {\n                console.warn('All lines already done. Unexpected data at: ' + (len - offset))\n                break\n            }\n            let packCount = -1\n            while (packCount === -1) {\n                const opcode = seg.getInt16(offset, true)\n                offset += 2\n                const opType = (0x0000C000 & opcode) >> 14\n                switch (opType) {\n                    case 0:\n                        packCount = opcode\n                        break\n                    case 1: // undefined opcode according to specs\n                        console.warn('Undefined opcode: ' + opcode)\n                        break\n                    case 2:\n                        // console.log('Last Pixel?')\n                        break\n                    case 3:\n                        y += Math.abs(opcode) & 0x000000FF\n                        break\n                    default:\n                        console.warn('Unknown opType: ' + opType + '; opcode: ' + opcode)\n                        break\n                }\n            }\n            let x = 0\n            for (let i = 0; i < packCount; i++) {\n                x += 0x000000FF & seg.getInt8(offset)\n                offset++\n                let repeat = seg.getInt8(offset)\n                offset++\n                if (repeat < 0) {\n                    repeat = (-1 * repeat)\n                    const [r, g, b] = this.getARGBFrom555RGB(seg, offset) // TODO these loops can be simplified, don't use x y\n                    for (let j = 0; j < repeat; j++) {\n                        setPixel(res, x, y, r, g, b)\n                        x++\n                    }\n                    offset += 2\n                } else {\n                    for (let j = 0; j < repeat; j++) {\n                        const [r, g, b] = this.getARGBFrom555RGB(seg, offset + j * 2) // TODO these loops can be simplified, don't use x y\n                        setPixel(res, x, y, r, g, b)\n                        x++\n                    }\n                    offset += repeat * 2\n                }\n            }\n            y++\n            linesDone++\n        }\n        this.frames[frameIndex] = res\n    }\n\n    private getARGBFrom555RGB(a: DataView, offset: number): [number, number, number] {\n        let rgb = 0x000000FF\n        rgb &= a.getInt8(offset + 1)\n        rgb = rgb << 8\n        rgb |= 0x000000FF & a.getInt8(offset)\n        let r = Math.floor((rgb >> 10) * (255.0 / 31.0))\n        let g = Math.floor(((rgb >> 5) & 0b00011111) * (255.0 / 31.0))\n        let b = Math.floor((rgb & 0b00011111) * (255.0 / 31.0))\n        return [r, g, b]\n    }\n\n    private getDWord(offset: number): number {\n        return this.dataView.getUint32(offset, true)\n    }\n\n    private getWord(offset: number): number {\n        return this.dataView.getUint16(offset, true)\n    }\n\n}\n","/**\n * Source: https://github.com/wokwi/bmp-ts\n */\n\nenum HeaderTypes {\n    BITMAP_INFO_HEADER = 40,\n    BITMAP_V2_INFO_HEADER = 52,\n    BITMAP_V3_INFO_HEADER = 56,\n    BITMAP_V4_HEADER = 108,\n    BITMAP_V5_HEADER = 124\n}\n\n// We have these:\n//\n// const sample = 0101 0101 0101 0101\n// const mask   = 0111 1100 0000 0000\n// 256        === 0000 0001 0000 0000\n//\n// We want to take the sample and turn it into an 8-bit value.\n//\n// 1. We extract the last bit of the mask:\n//\n// 0000 0100 0000 0000\n//       ^\n//\n// Like so:\n//\n// const a = ~mask =    1000 0011 1111 1111\n// const b = a + 1 =    1000 0100 0000 0000\n// const c = b & mask = 0000 0100 0000 0000\n//\n// 2. We shift it to the right and extract the bit before the first:\n//\n// 0000 0000 0010 0000\n//             ^\n//\n// Like so:\n//\n// const d = mask / c = 0000 0000 0001 1111\n// const e = mask + 1 = 0000 0000 0010 0000\n//\n// 3. We apply the mask and the two values above to a sample:\n//\n// const f = sample & mask = 0101 0100 0000 0000\n// const g = f / c =         0000 0000 0001 0101\n// const h = 256 / e =       0000 0000 0000 0100\n// const i = g * h =         0000 0000 1010 1000\n//                                     ^^^^ ^\n//\n// Voila, we have extracted a sample and \"stretched\" it to 8 bits. For samples\n// which are already 8-bit, h === 1 and g === i.\n\nfunction maskColor(\n    maskRed: number,\n    maskGreen: number,\n    maskBlue: number,\n    maskAlpha: number,\n) {\n    const maskRedR = (~maskRed + 1) & maskRed\n    const maskGreenR = (~maskGreen + 1) & maskGreen\n    const maskBlueR = (~maskBlue + 1) & maskBlue\n    const maskAlphaR = (~maskAlpha + 1) & maskAlpha\n\n    const shiftedMaskRedL = maskRed / maskRedR + 1\n    const shiftedMaskGreenL = maskGreen / maskGreenR + 1\n    const shiftedMaskBlueL = maskBlue / maskBlueR + 1\n    const shiftedMaskAlphaL = maskAlpha / maskAlphaR + 1\n\n    return {\n        shiftRed: (x: number) =>\n            (((x & maskRed) / maskRedR) * 0x100) / shiftedMaskRedL,\n        shiftGreen: (x: number) =>\n            (((x & maskGreen) / maskGreenR) * 0x100) / shiftedMaskGreenL,\n        shiftBlue: (x: number) =>\n            (((x & maskBlue) / maskBlueR) * 0x100) / shiftedMaskBlueL,\n        shiftAlpha:\n            maskAlpha !== 0\n                ? (x: number) =>\n                (((x & maskAlpha) / maskAlphaR) * 0x100) / shiftedMaskAlphaL\n                : () => 255,\n    }\n}\n\nconst enum Compression {\n    NONE = 0,\n    BI_RLE8 = 1,\n    BI_RLE4 = 2,\n    BI_BIT_FIELDS = 3,\n    BI_ALPHA_BIT_FIELDS = 6\n}\n\ntype BitsPerPixel = 1 | 4 | 8 | 16 | 24 | 32;\n\ninterface IColor {\n    red: number;\n    green: number;\n    blue: number;\n    quad: number;\n}\n\ninterface IDecoderOptions {\n    toRGBA?: boolean;\n}\n\ninterface IImage {\n    width: number;\n    height: number;\n    bitPP: BitsPerPixel;\n    data: Uint8Array;\n    reserved1?: number;\n    reserved2?: number;\n    hr?: number;\n    vr?: number;\n    colors?: number;\n    importantColors?: number;\n    palette?: IColor[];\n}\n\ninterface IBitmapImage extends IImage {\n    flag: string;\n    fileSize: number;\n    offset: number;\n    headerSize: number;\n    planes?: number;\n    compression?: Compression;\n    rawSize: number;\n}\n\ntype IColorProcessor = (x: number, line: number) => void;\n\nclass BmpDecoder implements IBitmapImage {\n    // Header\n    public flag: string\n    public fileSize!: number\n    public reserved1!: number\n    public reserved2!: number\n    public offset!: number\n    public headerSize!: number\n    public width!: number\n    public height!: number\n    public planes!: number\n    public bitPP!: BitsPerPixel\n    public compression?: Compression\n    public rawSize!: number\n    public hr!: number\n    public vr!: number\n    public colors!: number\n    public importantColors!: number\n    public palette!: IColor[]\n    public data!: Uint8Array\n\n    private maskRed!: number\n    private maskGreen!: number\n    private maskBlue!: number\n    private maskAlpha!: number\n\n    private readonly toRGBA: boolean\n\n    private pos: number\n    private bottomUp: boolean\n    private readonly buffer: Uint8Array\n    private readonly bufferView: DataView\n\n    private readonly locRed: number\n    private readonly locGreen: number\n    private readonly locBlue: number\n    private readonly locAlpha: number\n\n    private shiftRed!: (x: number) => number\n    private shiftGreen!: (x: number) => number\n    private shiftBlue!: (x: number) => number\n    private shiftAlpha!: (x: number) => number\n\n    constructor(\n        buffer: Uint8Array,\n        {toRGBA}: IDecoderOptions = {toRGBA: false},\n    ) {\n        this.buffer = buffer\n        this.bufferView = new DataView(\n            buffer.buffer,\n            buffer.byteOffset,\n            buffer.byteLength,\n        )\n        this.toRGBA = !!toRGBA\n        this.bottomUp = true\n        this.flag = String.fromCharCode(this.buffer[0]) + String.fromCharCode(this.buffer[1])\n        this.pos = 2\n\n        if (this.flag !== 'BM') {\n            throw new Error('Invalid BMP File')\n        }\n\n        this.locRed = this.toRGBA ? 0 : 3\n        this.locGreen = this.toRGBA ? 1 : 2\n        this.locBlue = this.toRGBA ? 2 : 1\n        this.locAlpha = this.toRGBA ? 3 : 0\n\n        this.parseHeader()\n        this.parseRGBA()\n    }\n\n    private parseHeader() {\n        this.fileSize = this.readUInt32LE()\n\n        this.reserved1 = this.bufferView.getUint16(this.pos, true)\n        this.pos += 2\n        this.reserved2 = this.bufferView.getUint16(this.pos, true)\n        this.pos += 2\n\n        this.offset = this.readUInt32LE()\n\n        // End of BITMAP_FILE_HEADER\n        this.headerSize = this.readUInt32LE()\n\n        if (!(this.headerSize in HeaderTypes)) {\n            throw new Error(`Unsupported BMP header size ${this.headerSize}`)\n        }\n\n        this.width = this.readUInt32LE()\n        this.height = this.readUInt32LE()\n\n        this.planes = this.bufferView.getUint16(this.pos, true)\n        this.pos += 2\n        this.bitPP = this.bufferView.getUint16(this.pos, true) as BitsPerPixel\n        this.pos += 2\n\n        this.compression = this.readUInt32LE()\n        this.rawSize = this.readUInt32LE()\n        this.hr = this.readUInt32LE()\n        this.vr = this.readUInt32LE()\n        this.colors = this.readUInt32LE()\n        this.importantColors = this.readUInt32LE()\n\n        // De facto defaults\n\n        if (this.bitPP === 32) {\n            this.maskAlpha = 0\n            this.maskRed = 0x00ff0000\n            this.maskGreen = 0x0000ff00\n            this.maskBlue = 0x000000ff\n        } else if (this.bitPP === 16) {\n            this.maskAlpha = 0\n            this.maskRed = 0x7c00\n            this.maskGreen = 0x03e0\n            this.maskBlue = 0x001f\n        }\n\n        // End of BITMAP_INFO_HEADER\n\n        if (\n            this.headerSize > HeaderTypes.BITMAP_INFO_HEADER ||\n            this.compression === Compression.BI_BIT_FIELDS ||\n            this.compression === Compression.BI_ALPHA_BIT_FIELDS\n        ) {\n            this.maskRed = this.readUInt32LE()\n            this.maskGreen = this.readUInt32LE()\n            this.maskBlue = this.readUInt32LE()\n        }\n\n        // End of BITMAP_V2_INFO_HEADER\n\n        if (\n            this.headerSize > HeaderTypes.BITMAP_V2_INFO_HEADER ||\n            this.compression === Compression.BI_ALPHA_BIT_FIELDS\n        ) {\n            this.maskAlpha = this.readUInt32LE()\n        }\n\n        // End of BITMAP_V3_INFO_HEADER\n\n        if (this.headerSize > HeaderTypes.BITMAP_V3_INFO_HEADER) {\n            this.pos +=\n                HeaderTypes.BITMAP_V4_HEADER - HeaderTypes.BITMAP_V3_INFO_HEADER\n        }\n\n        // End of BITMAP_V4_HEADER\n\n        if (this.headerSize > HeaderTypes.BITMAP_V4_HEADER) {\n            this.pos += HeaderTypes.BITMAP_V5_HEADER - HeaderTypes.BITMAP_V4_HEADER\n        }\n\n        // End of BITMAP_V5_HEADER\n\n        if (this.bitPP <= 8 || this.colors > 0) {\n            const len = this.colors === 0 ? 1 << this.bitPP : this.colors\n            this.palette = new Array(len)\n\n            for (let i = 0; i < len; i++) {\n                const blue = this.buffer[this.pos++]\n                const green = this.buffer[this.pos++]\n                const red = this.buffer[this.pos++]\n                const quad = this.buffer[this.pos++]\n\n                this.palette[i] = {\n                    red,\n                    green,\n                    blue,\n                    quad,\n                }\n            }\n        }\n\n        // End of color table\n\n        // Can the height ever be negative?\n        if (this.height < 0) {\n            this.height *= -1\n            this.bottomUp = false\n        }\n\n        const coloShift = maskColor(\n            this.maskRed,\n            this.maskGreen,\n            this.maskBlue,\n            this.maskAlpha,\n        )\n\n        this.shiftRed = coloShift.shiftRed\n        this.shiftGreen = coloShift.shiftGreen\n        this.shiftBlue = coloShift.shiftBlue\n        this.shiftAlpha = coloShift.shiftAlpha\n    }\n\n    private parseRGBA() {\n        this.data = new Uint8Array(this.width * this.height * 4)\n\n        switch (this.bitPP) {\n            case 1:\n                this.bit1()\n                break\n            case 4:\n                this.bit4()\n                break\n            case 8:\n                this.bit8()\n                break\n            case 16:\n                this.bit16()\n                break\n            case 24:\n                this.bit24()\n                break\n            default:\n                this.bit32()\n        }\n    }\n\n    private bit1() {\n        const xLen = Math.ceil(this.width / 8)\n        const mode = xLen % 4\n        const padding = mode !== 0 ? 4 - mode : 0\n\n        let lastLine: number | undefined\n\n        this.scanImage(padding, xLen, (x, line) => {\n            if (line !== lastLine) {\n                lastLine = line\n            }\n\n            const b = this.buffer[this.pos++]\n            const location = line * this.width * 4 + x * 8 * 4\n\n            for (let i = 0; i < 8; i++) {\n                if (x * 8 + i < this.width) {\n                    const rgb = this.palette[(b >> (7 - i)) & 0x1]\n\n                    this.data[location + i * 4 + this.locAlpha] = 0xff\n                    this.data[location + i * 4 + this.locBlue] = rgb.blue\n                    this.data[location + i * 4 + this.locGreen] = rgb.green\n                    this.data[location + i * 4 + this.locRed] = rgb.red\n                } else {\n                    break\n                }\n            }\n        })\n    }\n\n    private bit4() {\n        if (this.compression === Compression.BI_RLE4) {\n            this.data.fill(0)\n\n            let lowNibble = false //for all count of pixel\n            let lines = this.bottomUp ? this.height - 1 : 0\n            let location = 0\n\n            while (location < this.data.length) {\n                const a = this.buffer[this.pos++]\n                const b = this.buffer[this.pos++]\n\n                //absolute mode\n                if (a === 0) {\n                    if (b === 0) {\n                        //line end\n                        lines += this.bottomUp ? -1 : 1\n                        location = lines * this.width * 4\n                        lowNibble = false\n\n                        continue\n                    }\n\n                    if (b === 1) {\n                        // image end\n                        break\n                    }\n\n                    if (b === 2) {\n                        // offset x, y\n                        const x = this.buffer[this.pos++]\n                        const y = this.buffer[this.pos++]\n\n                        lines += this.bottomUp ? -y : y\n                        location += y * this.width * 4 + x * 4\n                    } else {\n                        let c = this.buffer[this.pos++]\n\n                        for (let i = 0; i < b; i++) {\n                            location = this.setPixelData(\n                                location,\n                                lowNibble ? c & 0x0f : (c & 0xf0) >> 4,\n                            )\n\n                            if (i & 1 && i + 1 < b) {\n                                c = this.buffer[this.pos++]\n                            }\n\n                            lowNibble = !lowNibble\n                        }\n\n                        if ((((b + 1) >> 1) & 1) === 1) {\n                            this.pos++\n                        }\n                    }\n                } else {\n                    //encoded mode\n                    for (let i = 0; i < a; i++) {\n                        location = this.setPixelData(\n                            location,\n                            lowNibble ? b & 0x0f : (b & 0xf0) >> 4,\n                        )\n                        lowNibble = !lowNibble\n                    }\n                }\n            }\n        } else {\n            const xLen = Math.ceil(this.width / 2)\n            const mode = xLen % 4\n            const padding = mode !== 0 ? 4 - mode : 0\n\n            this.scanImage(padding, xLen, (x, line) => {\n                const b = this.buffer[this.pos++]\n                const location = line * this.width * 4 + x * 2 * 4\n\n                const first4 = b >> 4\n                let rgb = this.palette[first4]\n\n                this.data[location + this.locAlpha] = 0xff\n                this.data[location + this.locBlue] = rgb.blue\n                this.data[location + this.locGreen] = rgb.green\n                this.data[location + this.locRed] = rgb.red\n\n                if (x * 2 + 1 >= this.width) {\n                    // throw new Error('Something');\n                    return false\n                }\n\n                const last4 = b & 0x0f\n                rgb = this.palette[last4]\n\n                this.data[location + 4 + this.locAlpha] = 0xff\n                this.data[location + 4 + this.locBlue] = rgb.blue\n                this.data[location + 4 + this.locGreen] = rgb.green\n                this.data[location + 4 + this.locRed] = rgb.red\n            })\n        }\n    }\n\n    private bit8() {\n        if (this.compression === Compression.BI_RLE8) {\n            this.data.fill(0)\n\n            let lines = this.bottomUp ? this.height - 1 : 0\n            let location = 0\n\n            while (location < this.data.length) {\n                const a = this.buffer[this.pos++]\n                const b = this.buffer[this.pos++]\n\n                //absolute mode\n                if (a === 0) {\n                    if (b === 0) {\n                        //line end\n                        lines += this.bottomUp ? -1 : 1\n                        location = lines * this.width * 4\n                        continue\n                    }\n\n                    if (b === 1) {\n                        //image end\n                        break\n                    }\n\n                    if (b === 2) {\n                        //offset x,y\n                        const x = this.buffer[this.pos++]\n                        const y = this.buffer[this.pos++]\n\n                        lines += this.bottomUp ? -y : y\n                        location += y * this.width * 4 + x * 4\n                    } else {\n                        for (let i = 0; i < b; i++) {\n                            const c = this.buffer[this.pos++]\n                            location = this.setPixelData(location, c)\n                        }\n\n                        // @ts-ignore\n                        const shouldIncrement = b & (1 === 1)\n                        if (shouldIncrement) {\n                            this.pos++\n                        }\n                    }\n                } else {\n                    //encoded mode\n                    for (let i = 0; i < a; i++) {\n                        location = this.setPixelData(location, b)\n                    }\n                }\n            }\n        } else {\n            const mode = this.width % 4\n            const padding = mode !== 0 ? 4 - mode : 0\n\n            this.scanImage(padding, this.width, (x, line) => {\n                const b = this.buffer[this.pos++]\n                const location = line * this.width * 4 + x * 4\n\n                if (b < this.palette.length) {\n                    const rgb = this.palette[b]\n\n                    this.data[location + this.locAlpha] = 0xff\n                    this.data[location + this.locBlue] = rgb.blue\n                    this.data[location + this.locGreen] = rgb.green\n                    this.data[location + this.locRed] = rgb.red\n                }\n            })\n        }\n    }\n\n    private bit16() {\n        const padding = (this.width % 2) * 2\n\n        this.scanImage(padding, this.width, (x, line) => {\n            const loc = line * this.width * 4 + x * 4\n            const px = this.bufferView.getUint16(this.pos, true)\n            this.pos += 2\n\n            this.data[loc + this.locRed] = this.shiftRed(px)\n            this.data[loc + this.locGreen] = this.shiftGreen(px)\n            this.data[loc + this.locBlue] = this.shiftBlue(px)\n            this.data[loc + this.locAlpha] = this.shiftAlpha(px)\n        })\n    }\n\n    private bit24() {\n        const padding = this.width % 4\n\n        this.scanImage(padding, this.width, (x, line) => {\n            const loc = line * this.width * 4 + x * 4\n            const blue = this.buffer[this.pos++]\n            const green = this.buffer[this.pos++]\n            const red = this.buffer[this.pos++]\n\n            this.data[loc + this.locAlpha] = 0xff\n            this.data[loc + this.locBlue] = blue\n            this.data[loc + this.locGreen] = green\n            this.data[loc + this.locRed] = red\n        })\n    }\n\n    private bit32() {\n        this.scanImage(0, this.width, (x, line) => {\n            const loc = line * this.width * 4 + x * 4\n            const px = this.readUInt32LE()\n\n            this.data[loc + this.locAlpha] = this.shiftAlpha(px)\n            this.data[loc + this.locBlue] = this.shiftBlue(px)\n            this.data[loc + this.locGreen] = this.shiftGreen(px)\n            this.data[loc + this.locRed] = this.shiftRed(px)\n        })\n    }\n\n    private scanImage(\n        padding = 0,\n        width = this.width,\n        processPixel: IColorProcessor,\n    ) {\n        for (let y = this.height - 1; y >= 0; y--) {\n            const line = this.bottomUp ? y : this.height - 1 - y\n\n            for (let x = 0; x < width; x++) {\n                processPixel.call(this, x, line)\n            }\n\n            this.pos += padding\n        }\n    }\n\n    private readUInt32LE() {\n        const value = this.bufferView.getUint32(this.pos, true)\n        this.pos += 4\n        return value\n    }\n\n    private setPixelData(location: number, rgbIndex: number) {\n        const {blue, green, red} = this.palette[rgbIndex]\n\n        this.data[location + this.locAlpha] = 0xff\n        this.data[location + this.locBlue] = blue\n        this.data[location + this.locGreen] = green\n        this.data[location + this.locRed] = red\n\n        return location + 4\n    }\n}\n\nexport class BitmapWithPalette extends ImageData {\n\n    readonly palette: IColor[]\n\n    static decode(buffer: Uint8Array): BitmapWithPalette {\n        return new BitmapWithPalette(new BmpDecoder(buffer, {toRGBA: true}))\n    }\n\n    constructor(decoder: BmpDecoder) {\n        super(new Uint8ClampedArray(decoder.data), decoder.width, decoder.height)\n        this.palette = decoder.palette\n    }\n\n    applyAlphaByIndex(alphaIndex: number): BitmapWithPalette {\n        if (alphaIndex || alphaIndex === 0) {\n            const alphaColor = this.palette?.[alphaIndex] // XXX fails for a102_bigtyre.bmp\n            if (alphaColor) {\n                const data = this.data\n                for (let c = 0; c < data.length; c += 4) {\n                    data[c + 3] = alphaColor.red === data[c] && alphaColor.green === data[c + 1] && alphaColor.blue === data[c + 2] ? 0 : 255\n                }\n            }\n        }\n        return this\n    }\n\n    applyAlpha(): BitmapWithPalette {\n        const data = this.data\n        for (let n = 0; n < data.length; n += 4) {\n            if (data[n] <= 2 && data[n + 1] <= 2 && data[n + 2] <= 2) { // Interface/Reward/RSoxygen.bmp uses 2/2/2 as \"black\" alpha background\n                data[n + 3] = 0\n            }\n        }\n        return this\n    }\n\n}\n","export const encodeChar: number[] = []\n\nfor (let c = 0; c < 256; c++) {\n    encodeChar[c] = c\n}\nencodeChar[130] = 0x00E4 // ä\nencodeChar[142] = 0x00C4 // Ä\nencodeChar[162] = 0x00F6 // ö\nencodeChar[167] = 0x00DC // Ü\nencodeChar[171] = 0x00FC // ü\nencodeChar[195] = 0x00DF // ß\n","import { encodeChar } from './EncodingHelper'\n\nconst enum PARSING_STATE {\n\n    LOOKING_FOR_KEY,\n    INSIDE_KEY,\n    LOOKING_FOR_VALUE,\n    INSIDE_VALUE,\n\n}\n\nexport class CfgFileParser {\n\n    static parse(buffer): any {\n        const result = {}\n        const ancestry = []\n        let activeObject = result\n        let isComment = false\n        let parsingState: PARSING_STATE = PARSING_STATE.LOOKING_FOR_KEY\n        let key = ''\n        let value = ''\n        // debug output is a bad idea here, buffer size is about 232.611 characters and has 6781 lines\n        for (let seek = 0; seek < buffer.length; seek++) {\n            let charCode = buffer[seek]\n            if (charCode === 123 && key === 'FullName') { // dirty workaround but in the original file { (123) was used instead of Ä (142)\n                charCode = 142\n            }\n            let charStr = String.fromCharCode(encodeChar[charCode])\n            if (charStr === ';' || charStr === '/') { // someone used // as a marker for a comment\n                isComment = true\n            } else if (charCode === 10 || charCode === 13) {\n                isComment = false\n            }\n            if (!isComment) {\n                if (charCode > 32) { // not a whitespace\n                    if (parsingState === PARSING_STATE.LOOKING_FOR_KEY) {\n                        if (charStr === '}') {\n                            activeObject = ancestry.pop()\n                        } else {\n                            key = charStr\n                            parsingState = PARSING_STATE.INSIDE_KEY\n                        }\n                    } else if (parsingState === PARSING_STATE.INSIDE_KEY) {\n                        key += charStr\n                    } else if (parsingState === PARSING_STATE.LOOKING_FOR_VALUE) {\n                        if (charStr === '{') { // start of a new object key is identifier\n                            ancestry.push(activeObject)\n                            activeObject = {}\n                            ancestry[ancestry.length - 1][key] = activeObject\n                            parsingState = PARSING_STATE.LOOKING_FOR_KEY\n                        } else {\n                            value = charStr\n                            parsingState = PARSING_STATE.INSIDE_VALUE\n                        }\n                    } else if (parsingState === PARSING_STATE.INSIDE_VALUE) {\n                        value += charStr\n                    }\n                } else { // some whitespace\n                    if (parsingState === PARSING_STATE.INSIDE_KEY) {\n                        parsingState = PARSING_STATE.LOOKING_FOR_VALUE\n                    } else if (parsingState === PARSING_STATE.INSIDE_VALUE) {\n                        const parsed = CfgFileParser.parseValue(value)\n                        if (activeObject.hasOwnProperty(key)) {\n                            activeObject[key].push(parsed)\n                        } else {\n                            activeObject[key] = [parsed]\n                        }\n                        parsingState = PARSING_STATE.LOOKING_FOR_KEY\n                    }\n                }\n            }\n        }\n\n        const stack = [result]\n        while (stack.length > 0) {\n            const obj = stack.pop()\n            Object.keys(obj).forEach((key) => {\n                const val = obj[key]\n                if (Array.isArray(val)) {\n                    if (val.length === 1) {\n                        obj[key] = val[0]\n                    } else {\n                        val.forEach((sub) => stack.push(sub))\n                    }\n                } else if (Object.keys(val).length > 1) {\n                    stack.push(val)\n                }\n            })\n        }\n\n        // apply some patches here\n        Object.values(result['Lego*']['Levels']).forEach((levelConf) => {\n            if (levelConf['CryoreMap']) {\n                levelConf['CryOreMap'] = levelConf['CryoreMap']  // typos... typos everywhere\n                delete levelConf['CryoreMap']\n            }\n            if (levelConf['CryOreMap']) {\n                levelConf['CryOreMap'] = levelConf['CryOreMap'].replace('Cryo_', 'Cror_')\n            }\n            if (levelConf['PredugMap']) {\n                levelConf['PreDugMap'] = levelConf['PredugMap']\n                delete levelConf['PredugMap']\n            }\n            const textureSet = levelConf['TextureSet']\n            if (Array.isArray(textureSet) && Array.isArray(textureSet[1])) {\n                levelConf['TextureSet'] = textureSet[1]\n            }\n        })\n        const dependencies = result['Lego*']['Dependencies']\n        Object.keys(dependencies).forEach((key) => {\n            const flatDeps = []\n            dependencies[key].forEach((d) => {\n                if (Array.isArray(d)) {\n                    flatDeps.push(...d)\n                } else {\n                    flatDeps.push(d)\n                }\n            })\n            dependencies[key] = flatDeps.reduce((result, value, index, array) => {\n                if (index % 2 === 0)\n                    result.push(array.slice(index, index + 2))\n                return result\n            }, [])\n        })\n\n        return result['Lego*']\n    }\n\n    static parseValue(val) {\n        function splitShrink(sep) {\n            val = val.split(sep).filter(val => val !== '').map(val => CfgFileParser.parseValue(val))\n            if (val.length === 0) {\n                val = ''\n            } else if (val.length === 1) {\n                val = val[0]\n            }\n        }\n\n        const num = Number(val)\n        if (isNaN(num)) {\n            val = val.toString().replace(/\\\\/g, '/')\n            const lVal = val.toLowerCase()\n            if (lVal === 'true') return true\n            if (lVal === 'false') return false\n            if (lVal === 'null') return ''\n            if (val.includes(':')) { // XXX Dependencies uses separator , over : however icon panel entries use : over ,\n                splitShrink.call(this, ':')\n            } else if (val.includes(',')) {\n                splitShrink.call(this, ',')\n            } else if (val.includes('|')) {\n                splitShrink.call(this, '|')\n            }\n            return val\n        } else {\n            return num\n        }\n    }\n\n}\n","export class LevelObjectiveTextEntry {\n\n    key: string\n    objective: string\n    failure: string\n    completion: string\n    crystalFailure: string\n\n}\n","import { LevelObjectiveTextEntry } from '../../../cfg/LevelObjectiveTextEntry'\nimport { encodeChar } from './EncodingHelper'\n\nexport class ObjectiveTextParser {\n\n    parseObjectiveTextFile(txtFileContent: Uint8Array) {\n        const result = {}\n        let state = PARSING_STATE.DROP\n        let currentLevel: LevelObjectiveTextEntry = null\n        let value = ''\n        let line = ''\n        for (let c = 0; c < txtFileContent.length; c++) {\n            const code = encodeChar[txtFileContent[c]]\n            let char = String.fromCharCode(code)\n            if (state === PARSING_STATE.DROP) {\n                if (char === '[') {\n                    if (currentLevel) result[currentLevel.key] = currentLevel\n                    currentLevel = new LevelObjectiveTextEntry()\n                    state = PARSING_STATE.KEY\n                } else if (currentLevel && char === ':') {\n                    const lLine = line.toLowerCase()\n                    if (lLine === 'objective') {\n                        line = ''\n                        state = PARSING_STATE.OBJECTIVE\n                    } else if (lLine === 'failure') {\n                        line = ''\n                        state = PARSING_STATE.FAILURE\n                    } else if (lLine === 'completion') {\n                        line = ''\n                        state = PARSING_STATE.COMPLETION\n                    } else if (lLine === 'crystalfailure') {\n                        line = ''\n                        state = PARSING_STATE.CRYSTAL_FAILURE\n                    }\n                    for (; c < txtFileContent.length && txtFileContent[c + 1] === '\\t'.charCodeAt(0); c++) {\n                    }\n                } else if (char === '\\n' || char === '\\r') {\n                    line = ''\n                } else {\n                    line += char\n                }\n            } else if (state === PARSING_STATE.KEY) {\n                if (char === ']') {\n                    currentLevel.key = value\n                    value = ''\n                    state = PARSING_STATE.DROP\n                } else if (char === '\\n' || char === '\\r') {\n                    throw 'Malformed objective text file'\n                } else {\n                    value += char\n                }\n            } else if (state === PARSING_STATE.OBJECTIVE) {\n                if (char === '\\n' || char === '\\r') {\n                    currentLevel.objective = value\n                    value = ''\n                    state = PARSING_STATE.DROP\n                } else {\n                    value += char\n                }\n            } else if (state === PARSING_STATE.FAILURE) {\n                if (char === '\\n' || char === '\\r') {\n                    currentLevel.failure = value\n                    value = ''\n                    state = PARSING_STATE.DROP\n                } else {\n                    value += char\n                }\n            } else if (state === PARSING_STATE.COMPLETION) {\n                if (char === '\\n' || char === '\\r') {\n                    currentLevel.completion = value\n                    value = ''\n                    state = PARSING_STATE.DROP\n                } else {\n                    value += char\n                }\n            } else if (state === PARSING_STATE.CRYSTAL_FAILURE) {\n                if (char === '\\n' || char === '\\r') {\n                    currentLevel.crystalFailure = value\n                    value = ''\n                    state = PARSING_STATE.DROP\n                } else {\n                    value += char\n                }\n            }\n        }\n        if (currentLevel) result[currentLevel.key] = currentLevel\n        currentLevel = null\n        return result\n    }\n\n}\n\nenum PARSING_STATE {\n\n    DROP,\n    KEY,\n    OBJECTIVE,\n    FAILURE,\n    COMPLETION,\n    CRYSTAL_FAILURE,\n\n}\n\n","export enum PriorityIdentifier {\n\n    aiPriorityTrain,\n    aiPriorityGetIn,\n    aiPriorityCrystal,\n    aiPriorityOre,\n    aiPriorityRepair,\n    aiPriorityClearing,\n    aiPriorityDestruction,\n    aiPriorityConstruction,\n    aiPriorityReinforce,\n    aiPriorityRecharge,\n\n}\n","export enum WorkerMessageType {\n\n    // wad worker\n    MSG,\n    CFG,\n    CACHE_MISS,\n    SFX,\n    ASSET,\n    DONE,\n\n    // gui/scene worker\n    INIT,\n    CANVAS,\n    REDRAW,\n    RESET,\n    EVENT_POINTER,\n    EVENT_KEY,\n    EVENT_WHEEL,\n    RESPONSE_EVENT,\n    OVERLAY_SETUP,\n    SPACE_TO_CONINUE,\n    SHOW_OPTIONS,\n    GAME_ABORT,\n    GAME_RESTART,\n    GAME_EVENT,\n\n}\n","export class WadParser {\n\n    static parseMap(buffer: Uint8Array) {\n        const map = {width: buffer[8], height: buffer[12], level: []}\n        let row = []\n        for (let seek = 16; seek < buffer.length; seek += 2) {\n            row.push(buffer[seek])\n            if (row.length >= map.width) {\n                map.level.push(row)\n                row = []\n            }\n        }\n        return map\n    }\n\n    static parseObjectList(data: string) {\n        const lines = data.split('\\n')\n        const objectList = []\n        let currentObject = null\n        for (let c = 0; c < lines.length; c++) {\n            const line = lines[c].trim()\n            const objectStartMatch = line.match(/(.+)\\s+{/)\n            const drivingMatch = line.match(/driving\\s+(.+)/)\n            if (line.length < 1 || line.startsWith(';') || line.startsWith('Lego*')) {\n                // ignore empty lines, comments and the root object\n            } else if (objectStartMatch) {\n                currentObject = {}\n                objectList[objectStartMatch[1]] = currentObject\n            } else if (line === '}') {\n                currentObject = null\n            } else if (drivingMatch) {\n                currentObject.driving = drivingMatch[1]\n            } else {\n                const split = line.split(/\\s+/)\n                if (split.length !== 2 || currentObject === null) {\n                    throw 'Unexpected key value entry: ' + line\n                }\n                const key = split[0]\n                let val: any = split[1]\n                if (key === 'xPos' || key === 'yPos' || key === 'heading') {\n                    val = parseFloat(val)\n                } else if (key !== 'type') {\n                    throw 'Unexpected key value entry: ' + line\n                }\n                currentObject[key] = val\n            }\n        }\n        return objectList\n    }\n\n}\n","export class BaseConfig {\n\n    static setFromCfg(config: BaseConfig, cfgObj: any) {\n        Object.keys(cfgObj).forEach((cfgKey) => {\n            const lCfgKeyName = (cfgKey.startsWith('!') ? cfgKey.substring(1) : cfgKey)\n                .toLowerCase()\n                .replace(/_/g, '') // Activity_Stand\n                .replace(/-/g, '') // Geo-dome\n            const found = Object.keys(config).some((objKey) => {\n                return config.assignValue(objKey, lCfgKeyName, cfgObj[cfgKey])\n            })\n            if (!found) {\n                console.warn('cfg key: ' + cfgKey + ' does not exist in cfg: ' + config?.constructor?.name)\n            }\n        })\n        return config\n    }\n\n    assignValue(objKey, lCfgKeyName, cfgValue): boolean {\n        if (objKey.toLowerCase() === lCfgKeyName) {\n            const currentValue = this[objKey]\n            const currentIsArray = Array.isArray(currentValue)\n            let parsedValue = this.parseValue(lCfgKeyName, cfgValue)\n            const parsedIsArray = Array.isArray(parsedValue)\n            if (currentValue && currentIsArray !== parsedIsArray) {\n                if (currentIsArray) {\n                    parsedValue = [parsedValue]\n                    // } else {\n                    //     console.warn('Array overwrite conflict for key ' + objKey + ' with existing value (' + currentValue + ') and new value (' + parsedValue + ')')\n                }\n            }\n            this[objKey] = parsedValue\n            return true\n        }\n    }\n\n    parseValue(lCfgKeyName: string, cfgValue: any): any {\n        return cfgValue\n    }\n\n}\n","export class ConfigColor {\n\n    r: number\n    g: number\n    b: number\n\n    constructor(values: number[]) {\n        [this.r, this.g, this.b] = values\n    }\n\n}\n","export class ObjectiveImageCfg {\n\n    filename: string\n    x: number\n    y: number\n\n    constructor(cfgValue: any) {\n        [this.filename, this.x, this.y] = cfgValue\n    }\n\n}\n","import { iGet } from '../core/Util'\nimport { PriorityIdentifier } from '../game/model/job/PriorityIdentifier'\nimport { BaseConfig } from './BaseConfig'\nimport { ConfigColor } from './ConfigColor'\nimport { ObjectiveImageCfg } from './ObjectiveImageCfg'\n\nexport class LevelsCfg {\n\n    levelsByName: {} = []\n\n    constructor(cfgObj: any) {\n        Object.keys(cfgObj).forEach((levelKey) => {\n            if (!levelKey.startsWith('Tutorial') && !levelKey.startsWith('Level')) return // ignore incomplete test levels and duplicates\n            this.levelsByName[levelKey] = new LevelEntryCfg(cfgObj[levelKey])\n        })\n    }\n\n}\n\nexport class LevelEntryCfg extends BaseConfig {\n\n    fullName: string = ''\n    endGameAvi1: string = ''\n    endGameAvi2: string = ''\n    allowRename: boolean = false\n    recallOLObjects: boolean = false\n    generateSpiders: boolean = false\n    video: string = ''\n    disableEndTeleport: boolean = false\n    disableStartTeleport: boolean = false\n    emergeTimeOut: any = ''\n    boulderAnimation: any = ''\n    noMultiSelect: any = ''\n    noAutoEat: any = ''\n    disableToolTipSound: any = ''\n    blockSize: any = ''\n    digDepth: any = ''\n    roughLevel: any = ''\n    roofHeight: any = ''\n    useRoof: any = ''\n    selBoxHeight: any = ''\n    fpRotLightRGB: any = ''\n    fogColourRGB: any = ''\n    highFogColourRGB: any = ''\n    fogRate: number = 0\n    fallinMultiplier: number = 0\n    numberOfLandSlidesTillCaveIn: number = 0\n    noFallins: boolean = false\n    oxygenRate: number = 0 // 0 - 100\n    surfaceMap: string = ''\n    predugMap: string = ''\n    terrainMap: string = ''\n    emergeMap: string = ''\n    erodeMap: string = ''\n    fallinMap: string = ''\n    blockPointersMap: string = ''\n    cryOreMap: string = ''\n    pathMap: string = ''\n    noGather: boolean = false\n    textureSet: string = ''\n    rockFallStyle: any = ''\n    emergeCreature: any = ''\n    safeCaverns: any = ''\n    seeThroughWalls: any = ''\n    oListFile: any = ''\n    ptlFile: any = ''\n    nerpFile: any = ''\n    nerpMessageFile: any = ''\n    objectiveText: any = ''\n    objectiveImage640x480: ObjectiveImageCfg = null\n    erodeTriggerTime: number = 0\n    erodeErodeTime: number = 0\n    erodeLockTime: number = 0\n    nextLevel: any = ''\n    levelLinks: any = ''\n    frontEndX: number = 0\n    frontEndY: number = 0\n    frontEndOpen: boolean = false\n    priorities: LevelPrioritiesEntryConfig[] = [] // priority order matters!\n    reward: LevelRewardConfig = null\n    menuBMP: string[] = []\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n    parseValue(lCfgKeyName: string, cfgValue: any): any {\n        if (lCfgKeyName === 'fullName'.toLowerCase()) {\n            return cfgValue.replace(/_/g, ' ')\n        } else if (lCfgKeyName.endsWith('rgb')) {\n            return new ConfigColor(cfgValue)\n        } else if (lCfgKeyName === 'priorities') {\n            return Object.keys(cfgValue)\n                .filter(name => name.toLowerCase() !== 'AI_Priority_GetTool'.toLowerCase()) // not used in the game\n                .map(name => new LevelPrioritiesEntryConfig(name, cfgValue[name]))\n        } else if (lCfgKeyName === 'reward') {\n            return new LevelRewardConfig(cfgValue)\n        } else if (lCfgKeyName === 'objectiveimage640x480') {\n            return new ObjectiveImageCfg(cfgValue)\n        } else {\n            return super.parseValue(lCfgKeyName, cfgValue)\n        }\n    }\n\n}\n\nexport class LevelPrioritiesEntryConfig {\n\n    key: PriorityIdentifier\n    enabled: boolean\n\n    constructor(name: string, enabled: boolean) {\n        this.key = iGet(PriorityIdentifier, name.replace(/_/g, ''))\n        this.enabled = enabled\n    }\n\n}\n\nexport class LevelRewardConfig extends BaseConfig {\n\n    enable: boolean = true\n    modifier: number = null\n    importance: LevelRewardImportanceConfig = null\n    quota: LevelRewardQuotaConfig = null\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n    parseValue(lCfgKeyName: string, cfgValue: any): any {\n        if (lCfgKeyName === 'importance') {\n            return new LevelRewardImportanceConfig(cfgValue)\n        } else if (lCfgKeyName === 'quota') {\n            return new LevelRewardQuotaConfig(cfgValue)\n        } else {\n            return super.parseValue(lCfgKeyName, cfgValue)\n        }\n    }\n}\n\nexport class LevelRewardImportanceConfig extends BaseConfig {\n\n    crystals: number = 0\n    timer: number = 0\n    caverns: number = 0\n    constructions: number = 0\n    oxygen: number = 0\n    figures: number = 0\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n}\n\nexport class LevelRewardQuotaConfig extends BaseConfig {\n\n    crystals: number = null\n    timer: number = null\n    caverns: number = null\n    constructions: number = null\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n}\n","export class MenuCycleItemCfg {\n\n    actionName: string\n    x: number\n    y: number\n    width: number\n    height: number\n    description: string\n    two: number // usage unclear\n    labelOff: string\n    labelOn: string\n\n    constructor(cfgObj: any) {\n        [this.actionName, this.x, this.y, this.width, this.height, this.description, this.two, this.labelOff, this.labelOn] = cfgObj\n        this.description = this.description.replace(/_/g, ' ')\n    }\n\n}\n","import { parseLabel } from './CfgHelper'\n\nexport class MenuLabelItemCfg {\n\n    actionName: string\n    x: number\n    y: number\n    label: string\n    imgNormal: string\n    imgHover: string\n    imgPressed: string\n    tooltip: string\n    target: string\n    flag: string // usage unclear\n\n    constructor(cfgObj: any) {\n        if (cfgObj.length === 5 || cfgObj.length === 6) {\n            [this.actionName, this.x, this.y, this.label, this.target, this.flag] = cfgObj\n            this.label = parseLabel(this.label)\n        } else if (cfgObj.length === 8) {\n            [this.actionName, this.x, this.y, this.imgNormal, this.imgHover, this.imgPressed, this.tooltip, this.target] = cfgObj\n        } else {\n            console.warn('Unexpected cfg object length: ' + cfgObj.length)\n            console.log(cfgObj)\n        }\n    }\n\n}\n","export function parseLabel(label: string[] | string): string {\n    const result = Array.isArray(label) ? label.join(',') : label // cfg parser does split(',')\n    return result?.replace(/_/g, ' ')\n}\n","export class MenuSliderItemCfg {\n\n    actionName: string\n    x: number\n    y: number\n    width: number\n    height: number\n    description: string\n    min: number\n    max: number\n    imgOff: string\n    imgOn: string\n    imgLeft: string\n    imgRight: string\n    btnLeftNormal: string\n    btnRightNormal: string\n    btnLeftHover: string\n    btnRightHover: string\n\n    constructor(cfgObj: any) {\n        [this.actionName, this.x, this.y, this.width, this.height, this.description, this.min, this.max, this.imgOff, this.imgOn,\n            this.imgLeft, this.imgRight, this.btnRightNormal, this.btnLeftNormal, this.btnRightHover, this.btnLeftHover] = cfgObj\n    }\n\n}\n","import { BaseConfig } from './BaseConfig'\nimport { MenuCycleItemCfg } from './MenuCycleItemCfg'\nimport { MenuLabelItemCfg } from './MenuLabelItemCfg'\nimport { MenuSliderItemCfg } from './MenuSliderItemCfg'\n\nexport class MenuEntryCfg extends BaseConfig {\n\n    fullName: string = ''\n    title: string = ''\n    position: [number, number] = [0, 0]\n    menuFont: string = ''\n    loFont: string = ''\n    hiFont: string = ''\n    itemCount: number = 0\n    menuImage: string = ''\n    autoCenter: boolean = false\n    displayTitle: boolean = false\n    overlays: any[] = []\n    playRandom: boolean = false\n    itemsLabel: MenuLabelItemCfg[] = []\n    itemsSlider: MenuSliderItemCfg[] = []\n    itemsCycle: MenuCycleItemCfg[] = []\n    anchored: boolean = false\n    canScroll: boolean = false\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n    assignValue(objKey, lCfgKeyName, cfgValue): boolean {\n        if (lCfgKeyName.match(/item\\d+/i)) {\n            const lActionName = cfgValue[0].toLowerCase()\n            if (lActionName === 'next' || lActionName === 'trigger') {\n                this.itemsLabel.push(new MenuLabelItemCfg(cfgValue))\n            } else if (lActionName === 'slider') {\n                this.itemsSlider.push(new MenuSliderItemCfg(cfgValue))\n            } else if (lActionName === 'cycle') {\n                this.itemsCycle.push(new MenuCycleItemCfg(cfgValue))\n            } else {\n                console.warn('Unexpected item action name: ' + cfgValue[0])\n                return false\n            }\n            return true\n        } else if (lCfgKeyName.match(/overlay\\d+/i)) {\n            this.overlays.push(cfgValue)\n            return true\n        }\n        return super.assignValue(objKey, lCfgKeyName, cfgValue)\n    }\n\n    parseValue(lCfgKeyName: string, cfgValue: any): any {\n        if (lCfgKeyName === 'fullName'.toLowerCase() || lCfgKeyName === 'title') {\n            return cfgValue.replace(/_/g, ' ')\n        } else {\n            return super.parseValue(lCfgKeyName, cfgValue)\n        }\n    }\n\n}\n","import { BaseConfig } from './BaseConfig'\nimport { MenuEntryCfg } from './MenuEntryCfg'\n\nexport class MenuCfg extends BaseConfig {\n\n    menuCount: number = 0\n    menus: MenuEntryCfg[] = []\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n    assignValue(objKey, lCfgKeyName, cfgValue): boolean {\n        if (lCfgKeyName.match(/menu\\d+/i)) {\n            this.menus.push(new MenuEntryCfg(cfgValue))\n            return true\n        }\n        return super.assignValue(objKey, lCfgKeyName, cfgValue)\n    }\n\n}\n","import { BaseConfig } from './BaseConfig'\n\nexport class RewardCfg extends BaseConfig {\n\n    display: boolean = true\n    wallpaper: string = ''\n    images: RewardImageCfg[] = []\n    texts: RewardTextCfg[] = []\n    boxImages: RewardImageCfg[] = []\n    fonts: RewardFontsCfg = null\n    flics: { flhFilepath: string, x: number, y: number, w: number, h: number } = null\n    scrollSpeed: number = 0\n    centreText: boolean = false\n    vertSpacing: number = 0\n    backFont: string = ''\n    font: string = ''\n    titleFont: string = ''\n    timer: number = 0\n    saveButton: any = ''\n    advanceButton: any = ''\n    completeText: string = ''\n    failedText: string = ''\n    quitText: string = ''\n    textPos: [number, number] = [0, 0]\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n    assignValue(objKey, lCfgKeyName, cfgValue): boolean {\n        if (lCfgKeyName === 'images') {\n            Object.values(cfgValue).forEach((imgConf) => this.images.push(new RewardImageCfg(imgConf)))\n            return true\n        } else if (lCfgKeyName === 'text') {\n            Object.values(cfgValue).forEach((imgConf) => this.texts.push(new RewardTextCfg(imgConf)))\n            return true\n        } else if (lCfgKeyName === 'boximages') {\n            Object.values(cfgValue).forEach((imgConf) => this.boxImages.push(new RewardImageCfg(imgConf)))\n            return true\n        } else if (lCfgKeyName === 'fonts') {\n            this.fonts = new RewardFontsCfg(cfgValue)\n            return true\n        } else {\n            return super.assignValue(objKey, lCfgKeyName, cfgValue)\n        }\n    }\n\n}\n\nexport class RewardImageCfg {\n\n    filePath: string = ''\n    x: number = 0\n    y: number = 0\n\n    constructor(cfgObj: any) {\n        [this.filePath, this.x, this.y] = cfgObj\n    }\n\n}\n\nexport class RewardTextCfg {\n\n    text: string = ''\n    x: number = 0\n    y: number = 0\n\n    constructor(cfgObj: any) {\n        [this.text, this.x, this.y] = cfgObj\n    }\n\n}\n\nexport class RewardFontsCfg extends BaseConfig {\n\n    crystals: string = ''\n    ore: string = ''\n    diggable: string = ''\n    constructions: string = ''\n    caverns: string = ''\n    figures: string = ''\n    rockMonsters: string = ''\n    oxygen: string = ''\n    timer: string = ''\n    score: string = ''\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n}\n","// The RockRaidersObjectNotation (RON) format is related to JSON\n\nexport class RonFileParser {\n\n    static parse(content: string) {\n        const lines: string[][] = content.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n') // normalize newlines\n            .replace(/\\t/g, ' ') // tabs to spaces\n            .split('\\n')\n            .map((l) => { // strip comments from each line\n                const indDoubleSlash = l.indexOf('//')\n                if (indDoubleSlash > -1) l = l.substring(0, indDoubleSlash)\n                const indComment = l.indexOf(';')\n                if (indComment > -1) l = l.substring(0, indComment)\n                return l\n            })\n            .map((l) => { // remove whitespace at start/end of lines\n                l = l.trim()\n                return l\n            })\n            .filter(l => l !== '') // filter empty lines\n            .map((v) => v.split(' ').filter(v => v !== ''))\n        const root = {}\n        RonFileParser.parseObj(root, lines, 0)\n        return root\n    }\n\n    static parseObj(obj: {}, lines: string[][], start): number {\n        for (let c = start; c < lines.length; c++) {\n            const [name, val] = lines[c]\n            const key = name.toLowerCase()\n            if (val === '{') {\n                obj[key] = {}\n                c = this.parseObj(obj[key], lines, c + 1)\n            } else if (key === '}') {\n                return c\n            } else {\n                // parse values\n                let value: any = val.split(':').filter(v => v !== '') // there is key::value\n                    .map(v => v.split(',').map(v => v.split('|').map(v => this.parseValue(v))))\n                while (value.length === 1) value = value[0] // replace arrays with only one value\n                obj[key] = value\n            }\n        }\n        return lines.length\n    }\n\n    static parseValue(value: string) {\n        const num = Number(value)\n        const lv = value.toLowerCase()\n        if (!isNaN(num)) {\n            return num\n        } else if (lv === 'false') {\n            return false\n        } else if (lv === 'true') {\n            return true\n        } else {\n            return value\n        }\n    }\n\n}\n","import { LevelEntryCfg, LevelsCfg } from '../../cfg/LevelsCfg'\nimport { MenuCfg } from '../../cfg/MenuCfg'\nimport { RewardCfg } from '../../cfg/RewardCfg'\nimport { getFilename, getPath, iGet } from '../../core/Util'\nimport { RonFileParser } from './parser/RonFileParser'\nimport { WadLoader } from './WadLoader'\n\ninterface WadAsset {\n    method: ((name: string, callback: (assetName: string[], assetData: any) => void) => void)\n    assetPath: string\n    optional: boolean\n    sfxKeys: string[]\n}\n\nexport class WadAssetRegistry extends Map<string, WadAsset> {\n\n    wadLoader: WadLoader\n\n    constructor(wadLoader: WadLoader) {\n        super()\n        this.wadLoader = wadLoader\n    }\n\n    registerAllAssets(mainConf: any) {\n        // add fonts and cursors\n        this.addAssetFolder(this.wadLoader.loadFontImageAsset, 'Interface/Fonts/')\n        this.addAssetFolder(this.wadLoader.loadAlphaImageAsset, 'Interface/Pointers/')\n        this.wadLoader.wad0File.filterEntryNames('Interface/Pointers/' + '.+\\\\.flh').forEach((assetPath) => {\n            this.addAsset(this.wadLoader.loadFlhAsset, assetPath)\n        })\n        // add menu assets\n        this.addMenuWithAssets(mainConf, 'MainMenuFull', false)\n        this.addMenuWithAssets(mainConf, 'PausedMenu')\n        this.addMenuWithAssets(mainConf, 'OptionsMenu')\n        this.addAsset(this.wadLoader.loadAlphaImageAsset, 'Interface/BriefingPanel/BriefingPanel.bmp')\n        this.addAsset(this.wadLoader.loadObjectiveTexts, 'Languages/ObjectiveText.txt')\n        // add in-game assets\n        this.addAlphaImageFolder('Interface/TopPanel/') // top panel\n        this.addAlphaImageFolder('Interface/RightPanel/') // crystal side bar\n        this.addAlphaImageFolder('Interface/RadarPanel/')\n        this.addAlphaImageFolder('Interface/MessagePanel/')\n        this.addAsset(this.wadLoader.loadWadImageAsset, 'Interface/Airmeter/msgpanel_air_juice.bmp')\n        this.addAlphaImageFolder('Interface/InfoPanel/')\n        this.addAlphaImageFolder('Interface/PriorityPanel/')\n        this.addAlphaImageFolder('Interface/Priorities')\n        this.addAlphaImageFolder('Interface/CameraControl/')\n        this.addAlphaImageFolder('Interface/MessageTabs/')\n        this.addAlphaImageFolder('Interface/IconPanel/')\n        this.addAlphaImageFolder('Interface/Icons/')\n        this.addAlphaImageFolder('Interface/Menus/')\n        this.addAlphaImageFolder('Interface/Buttons/')\n        this.addAlphaImageFolder('Interface/InfoImages/')\n        this.addAssetFolder(this.wadLoader.loadAlphaImageAsset, 'Interface/FrontEnd/Vol_')\n        this.addAssetFolder(this.wadLoader.loadWadImageAsset, 'Interface/FrontEnd/lp_')\n        this.addAsset(this.wadLoader.loadAlphaImageAsset, 'Interface/FrontEnd/LowerPanel.bmp')\n        // level files\n        this.addAsset(this.wadLoader.loadNerpAsset, 'Levels/nerpnrn.h')\n        const levelsCfg = new LevelsCfg(iGet(mainConf, 'Levels'))\n        this.wadLoader.onAssetLoaded(0, ['Levels'], levelsCfg)\n        Object.values(levelsCfg.levelsByName).forEach((level: LevelEntryCfg) => {\n            level.menuBMP.forEach((bmpName) => {\n                this.addAsset(this.wadLoader.loadAlphaImageAsset, bmpName)\n            })\n            this.addAsset(this.wadLoader.loadMapAsset, level.surfaceMap)\n            this.addAsset(this.wadLoader.loadMapAsset, level.predugMap)\n            this.addAsset(this.wadLoader.loadMapAsset, level.terrainMap)\n            this.addAsset(this.wadLoader.loadMapAsset, level.blockPointersMap, true)\n            this.addAsset(this.wadLoader.loadMapAsset, level.cryOreMap)\n            this.addAsset(this.wadLoader.loadMapAsset, level.pathMap, true)\n            if (level.fallinMap) this.addAsset(this.wadLoader.loadMapAsset, level.fallinMap)\n            if (level.erodeMap) this.addAsset(this.wadLoader.loadMapAsset, level.erodeMap)\n            this.addAsset(this.wadLoader.loadObjectListAsset, level.oListFile)\n            this.addAsset(this.wadLoader.loadNerpAsset, level.nerpFile)\n            this.addAsset(this.wadLoader.loadNerpMsg, level.nerpMessageFile)\n        })\n        // load all shared textures\n        this.addTextureFolder('World/Shared/')\n        this.addTextureFolder('Vehicles/SharedUG/')\n        // load all entity upgrades\n        const upgradeTypes = iGet(mainConf, 'UpgradeTypes')\n        Object.values(upgradeTypes).forEach((uType: string) => {\n            this.addMeshObjects(uType)\n        })\n        // load all building types\n        const buildingTypes = iGet(mainConf, 'BuildingTypes')\n        Object.values(buildingTypes).forEach((bType: string) => {\n            this.addMeshObjects(bType)\n        })\n        this.addAnimatedEntity('mini-figures/pilot/pilot.ae')\n        // load monsters\n        const rockMonsterTypes = iGet(mainConf, 'RockMonsterTypes')\n        Object.values(rockMonsterTypes).forEach((mType: string) => {\n            this.addMeshObjects(mType)\n        })\n        // load vehicles\n        const vehicleTypes = mainConf['VehicleTypes']\n        Object.values(vehicleTypes).forEach((v) => {\n            (Array.isArray(v) ? v : [v]).forEach((vType: string) => {\n                this.addMeshObjects(vType)\n            })\n        })\n        // load misc objects\n        this.addTextureFolder('MiscAnims/Crystal/')\n        this.addAsset(this.wadLoader.loadLWOFile, 'World/Shared/Crystal.lwo') // high-poly version\n        this.addAsset(this.wadLoader.loadWadTexture, 'MiscAnims/Ore/Ore.bmp')\n        this.addTextureFolder('MiscAnims/RockFall/')\n        this.addLWSFile('MiscAnims/RockFall/Rock3Sides.lws')\n        const miscObjects = mainConf['MiscObjects']\n        Object.values(miscObjects).forEach((mType: string) => {\n            this.addMeshObjects(mType)\n        })\n        // spaces\n        this.addTextureFolder('World/WorldTextures/IceSplit/Ice')\n        this.addTextureFolder('World/WorldTextures/LavaSplit/Lava')\n        this.addTextureFolder('World/WorldTextures/RockSplit/Rock')\n        // reward screen\n        const rewardCfg = new RewardCfg(iGet(mainConf, 'Reward'))\n        this.wadLoader.onAssetLoaded(0, ['Reward'], rewardCfg)\n        this.addAsset(this.wadLoader.loadWadImageAsset, rewardCfg.wallpaper)\n        this.addAsset(this.wadLoader.loadFontImageAsset, rewardCfg.backFont)\n        Object.values(rewardCfg.fonts).forEach(imgPath => this.addAsset(this.wadLoader.loadFontImageAsset, imgPath))\n        rewardCfg.images.forEach(img => this.addAsset(this.wadLoader.loadAlphaImageAsset, img.filePath))\n        rewardCfg.boxImages.forEach(img => this.addAsset(this.wadLoader.loadWadImageAsset, img.filePath))\n        rewardCfg.saveButton.splice(0, 4).forEach(img => this.addAsset(this.wadLoader.loadWadImageAsset, img))\n        rewardCfg.advanceButton.splice(0, 4).forEach(img => this.addAsset(this.wadLoader.loadWadImageAsset, img))\n        // sounds\n        const sndPathToKeys = new Map<string, string[]>()\n        const samplesConf = mainConf['Samples']\n        Object.keys(samplesConf).forEach((sndKey) => {\n            const value = samplesConf[sndKey]\n            sndKey = sndKey.toLowerCase()\n            if (sndKey === '!sfx_drip') {\n                return // Sounds/dripB.wav missing and seems unused anyway\n            } else if (sndKey.startsWith('!')) { // TODO no clue what this means... loop? duplicate?!\n                sndKey = sndKey.slice(1)\n            }\n            const sndFilePaths = Array.isArray(value) ? value : [value]\n            sndFilePaths.forEach(sndPath => {\n                if (sndPath.startsWith('*')) { // TODO no clue what this means... don't loop maybe, see telportup\n                    sndPath = sndPath.slice(1)\n                } else if (sndPath.startsWith('@')) {\n                    // sndPath = sndPath.slice(1)\n                    // console.warn('Sound ' + sndPath + ' must be loaded from program files folder. Not yet implemented!')\n                    return // TODO implement sounds from program files folder\n                }\n                sndPathToKeys.getOrUpdate(sndPath + '.wav', () => []).push(sndKey)\n            })\n        })\n        sndPathToKeys.forEach((sndKeys, sndPath) => {\n            this.addAsset(this.wadLoader.loadWavAsset, sndPath, false, sndKeys)\n        })\n    }\n\n    addMeshObjects(basePath: string) {\n        const aeFilepath = basePath + '/' + basePath.split('/').last() + '.ae'\n        if (this.wadLoader.wad0File.hasEntry(aeFilepath)) this.addAnimatedEntity(aeFilepath)\n        const aeSharedFilepath = 'world/shared/' + basePath.split('/').last() + '.ae'\n        if (this.wadLoader.wad0File.hasEntry(aeSharedFilepath)) this.addAnimatedEntity(aeSharedFilepath)\n        const lwsFilepath = basePath + '.lws'\n        if (this.wadLoader.wad0File.hasEntry(lwsFilepath)) this.addLWSFile(lwsFilepath)\n        const lwsSharedFilepath = 'world/shared/' + basePath.split('/').last() + '.lws'\n        if (this.wadLoader.wad0File.hasEntry(lwsSharedFilepath)) this.addLWSFile(lwsSharedFilepath)\n        const lwoFilepath = basePath + '.lwo'\n        if (this.wadLoader.wad0File.hasEntry(lwoFilepath)) this.addAsset(this.wadLoader.loadLWOFile, lwoFilepath)\n        const lwoSharedFilepath = 'world/shared/' + basePath.split('/').last() + '.lwo'\n        if (this.wadLoader.wad0File.hasEntry(lwoSharedFilepath)) this.addAsset(this.wadLoader.loadLWOFile, lwoSharedFilepath)\n    }\n\n    addAnimatedEntity(aeFile: string) {\n        const content = this.wadLoader.wad0File.getEntryText(aeFile)\n        const cfgRoot = iGet(RonFileParser.parse(content), 'Lego*')\n        this.wadLoader.onAssetLoaded(0, [aeFile], cfgRoot)\n        const path = getPath(aeFile)\n        // load all textures for this type\n        this.addTextureFolder(path)\n        const wheelMeshName = iGet(cfgRoot, 'WheelMesh')\n        if (wheelMeshName && !'NULL_OBJECT'.equalsIgnoreCase(wheelMeshName)) {\n            this.addAsset(this.wadLoader.loadLWOFile, path + wheelMeshName + '.lwo')\n        }\n        ['HighPoly', 'MediumPoly', 'LowPoly'].forEach((polyType) => { // TODO add 'FPPoly' (contains two cameras)\n            const cfgPoly = iGet(cfgRoot, polyType)\n            if (cfgPoly) {\n                Object.keys(cfgPoly).forEach((key) => {\n                    this.addAsset(this.wadLoader.loadLWOFile, path + cfgPoly[key] + '.lwo')\n                })\n            }\n        })\n        const activities = iGet(cfgRoot, 'Activities')\n        if (activities) {\n            Object.keys(activities).forEach((activity) => {\n                try {\n                    let keyname = iGet(activities, activity)\n                    const act = iGet(cfgRoot, keyname)\n                    const file = iGet(act, 'FILE')\n                    const isLws = iGet(act, 'LWSFILE') === true\n                    if (isLws) {\n                        this.addLWSFile(path + file + '.lws')\n                    } else {\n                        console.error('Found activity which is not an LWS file')\n                    }\n                } catch (e) {\n                    console.error(e)\n                    console.log(cfgRoot)\n                    console.log(activities)\n                    console.log(activity)\n                }\n            })\n        }\n    }\n\n    addLWSFile(lwsFilepath: string) {\n        const content = this.wadLoader.wad0File.getEntryText(lwsFilepath)\n        this.wadLoader.onAssetLoaded(0, [lwsFilepath], content)\n        const lwoFiles: string[] = this.extractLwoFiles(getPath(lwsFilepath), content)\n        lwoFiles.forEach((lwoFile) => this.addAsset(this.wadLoader.loadLWOFile, lwoFile))\n    }\n\n    extractLwoFiles(path: string, content: string): string[] {\n        const lines: string[] = content.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n') // normalize newlines\n            .replace(/\\t/g, ' ') // tabs to spaces\n            .split('\\n')\n            .map((l) => l.trim())\n\n        if (lines[0] !== 'LWSC') {\n            throw 'Invalid start of file! Expected \\'LWSC\\' in first line'\n        }\n\n        return lines.filter((line) => line.toLowerCase().startsWith('LoadObject '.toLowerCase()))\n            .map((objLine) => path + getFilename(objLine.substring('LoadObject '.length)).toLowerCase())\n    }\n\n    addAlphaImageFolder(folderPath: string) {\n        this.addAssetFolder(this.wadLoader.loadAlphaImageAsset, folderPath)\n    }\n\n    addTextureFolder(folderPath: string) {\n        this.addAssetFolder(this.wadLoader.loadWadTexture, folderPath)\n    }\n\n    addAssetFolder(callback: (name: string, callback: (assetNames: string[], obj: any) => any) => void, folderPath) {\n        this.wadLoader.wad0File.filterEntryNames(folderPath + '.+\\\\.bmp').forEach((assetPath) => {\n            this.addAsset(callback, assetPath)\n        })\n    }\n\n    addMenuWithAssets(mainConf, name: string, menuImageAlpha: boolean = true) {\n        const menuCfg = new MenuCfg(iGet(mainConf, 'Menu', name))\n        this.wadLoader.onAssetLoaded(0, [name], menuCfg)\n        menuCfg.menus.forEach((menuCfg) => {\n            const method = menuImageAlpha ? this.wadLoader.loadAlphaImageAsset : this.wadLoader.loadWadImageAsset\n            const menuImage = Array.isArray(menuCfg.menuImage) ? menuCfg.menuImage[0] : menuCfg.menuImage\n            this.addAsset(method, menuImage)\n            this.addAsset(this.wadLoader.loadFontImageAsset, menuCfg.menuFont)\n            this.addAsset(this.wadLoader.loadFontImageAsset, menuCfg.loFont)\n            this.addAsset(this.wadLoader.loadFontImageAsset, menuCfg.hiFont)\n        })\n    }\n\n    addAsset(method: (name: string, callback: (assetNames: string[], assetData: any) => void) => void, assetPath: string, optional = false, sfxKeys: string[] = []) {\n        if (!assetPath || this.hasOwnProperty(assetPath) || assetPath === 'NULL') {\n            return // do not load assets twice\n        }\n        this.set(assetPath, {\n            method: method.bind(this.wadLoader),\n            assetPath: assetPath,\n            optional: optional,\n            sfxKeys: sfxKeys,\n        })\n    }\n\n}\n","import { encodeChar } from './parser/EncodingHelper'\n\n/**\n * Handles the extraction of single files from a bigger WAD data blob\n */\nexport class WadFile {\n\n    buffer: Int8Array = null\n    entryIndexByName: Map<string, number> = new Map()\n    fLength: number[] = []\n    fStart: number[] = []\n\n    /**\n     * Validate and parse the given data object as binary blob of a WAD file\n     * @param data binary blob\n     * @param debug enable/disable debug output while parsing\n     */\n    parseWadFile(data, debug = false) {\n        const dataView = new DataView(data)\n        this.buffer = new Int8Array(data)\n        let pos = 0\n        if (String.fromCharCode.apply(null, this.buffer.slice(pos, 4)) !== 'WWAD') {\n            throw 'Invalid WAD0 file provided'\n        }\n        if (debug) {\n            console.log('WAD0 file seems legit')\n        }\n        pos = 4\n        const numberOfEntries = dataView.getInt32(pos, true)\n        if (debug) {\n            console.log(numberOfEntries)\n        }\n        pos = 8\n\n        let bufferStart = pos\n        for (let i = 0; i < numberOfEntries; pos++) {\n            if (this.buffer[pos] === 0) {\n                this.entryIndexByName.set(String.fromCharCode.apply(null, this.buffer.slice(bufferStart, pos)).replace(/\\\\/g, '/').toLowerCase(), i)\n                bufferStart = pos + 1\n                i++\n            }\n        }\n\n        if (debug) {\n            console.log(this.entryIndexByName)\n        }\n\n        for (let i = 0; i < numberOfEntries; pos++) {\n            if (this.buffer[pos] === 0) {\n                bufferStart = pos + 1\n                i++\n            }\n        }\n\n        if (debug) {\n            console.log('Offset after absolute original names is ' + pos)\n        }\n\n        for (let i = 0; i < numberOfEntries; i++) {\n            this.fLength[i] = dataView.getInt32(pos + 8, true)\n            this.fStart[i] = dataView.getInt32(pos + 12, true)\n            pos += 16\n        }\n\n        if (debug) {\n            console.log(this.fLength)\n            console.log(this.fStart)\n        }\n    }\n\n    /**\n     * Returns the entries content extracted by name from the managed WAD file\n     * @param entryName Entry name to be extracted\n     * @returns {Uint8Array} Returns the content as Uint8Array\n     */\n    getEntryData(entryName): Uint8Array {\n        return new Uint8Array(this.getEntryBuffer(entryName))\n    }\n\n    /**\n     * Returns the entries content as text extracted by name from the managed WAD file\n     * @param entryName Entry name to be extracted\n     * @returns {string} Returns the content as String\n     */\n    getEntryText(entryName): string {\n        let result = ''\n        this.getEntryData(entryName).forEach((c) => result += String.fromCharCode(encodeChar[c]))\n        return result\n    }\n\n    /**\n     * Returns the entries content by name extracted from the managed WAD file\n     * @param entryName Entry name to be extracted\n     * @returns {ArrayBufferLike} Returns the content as buffer slice\n     */\n    getEntryBuffer(entryName): ArrayBufferLike {\n        const index = this.entryIndexByName.get(entryName.toLowerCase())\n        if (index === undefined || index === null) {\n            throw 'Entry \\'' + entryName + '\\' not found in WAD file'\n        }\n        return this.buffer.slice(this.fStart[index], this.fStart[index] + this.fLength[index]).buffer\n    }\n\n    filterEntryNames(regexStr) {\n        const regex = new RegExp(regexStr.toLowerCase())\n        const result = []\n        this.entryIndexByName.forEach((index, entry) => {\n            if (entry.match(regex)) result.push(entry)\n        })\n        return result\n    }\n\n    hasEntry(entryName: string): boolean {\n        const index = this.entryIndexByName.get(entryName.toLowerCase())\n        return index !== undefined && index !== null\n    }\n\n}\n","import { getFilename, iGet } from '../../core/Util'\nimport { WAD_CACHE_DB_NAME } from '../../params'\nimport { FlhParser } from '../FlhParser'\nimport { BitmapWithPalette } from './parser/BitmapWithPalette'\nimport { CfgFileParser } from './parser/CfgFileParser'\nimport { NerpMsgParser } from './parser/NerpMsgParser'\nimport { ObjectiveTextParser } from './parser/ObjectiveTextParser'\nimport { WadParser } from './parser/WadParser'\nimport { WadAssetRegistry } from './WadAssetRegistry'\nimport { WadFile } from './WadFile'\nimport { grayscaleToGreen } from './WadUtil'\n\nexport class WadLoader {\n\n    wad0File: WadFile = null\n    wad1File: WadFile = null\n    startTime: Date\n    assetIndex: number = 0\n    totalResources: number = 0\n    assetRegistry: WadAssetRegistry = new WadAssetRegistry(this)\n\n    onMessage: (msg: string) => any = (msg: string) => {\n        console.log(msg)\n    }\n    onInitialLoad: (totalResources: number, cfg: any) => any = () => {\n        console.log('Initial loading done.')\n    }\n    onAssetLoaded: (assetIndex: number, assetNames: string[], assetObj: any, sfxKeys?: string[]) => any = () => {\n    }\n    onLoadDone: (totalResources: number, loadingTimeSeconds: string) => any = (totalResources: number, loadingTimeSeconds: string) => {\n        console.log('Loading of about ' + totalResources + ' assets complete! Total load time: ' + loadingTimeSeconds + ' seconds.')\n    }\n\n    loadWadImageAsset(name: string, callback: (assetNames: string[], obj: ImageData) => any) {\n        const data = this.wad0File.getEntryData(name)\n        const imgData = BitmapWithPalette.decode(data)\n        callback([name], imgData)\n    }\n\n    loadWadTexture(name: string, callback: (assetNames: string[], obj: ImageData) => any) {\n        const data = this.wad0File.getEntryData(name)\n        const alphaIndexMatch = name.toLowerCase().match(/(.*a)(\\d+)(_.+)/)\n        let alphaIndex = null\n        const assetNames = [name]\n        if (alphaIndexMatch) {\n            assetNames.push(alphaIndexMatch[1] + alphaIndexMatch[3])\n            alphaIndex = parseInt(alphaIndexMatch[2])\n        }\n        const imgData = BitmapWithPalette.decode(data).applyAlphaByIndex(alphaIndex)\n        if (name.toLowerCase().startsWith('miscanims/crystal')) { // XXX fix crystal lwo loading\n            callback(assetNames, grayscaleToGreen(imgData))\n        } else {\n            callback(assetNames, imgData)\n        }\n    }\n\n    loadAlphaImageAsset(name: string, callback: (assetNames: string[], obj: ImageData) => any) {\n        const data = this.wad0File.getEntryData(name)\n        const imgData = BitmapWithPalette.decode(data).applyAlpha()\n        const assetNames = [name]\n        const alphaIndexMatch = name.toLowerCase().match(/(.*a)(\\d+)(_.+)/)\n        if (alphaIndexMatch) assetNames.push(alphaIndexMatch[1] + alphaIndexMatch[3])\n        callback(assetNames, imgData)\n    }\n\n    loadFontImageAsset(name: string, callback: (assetNames: string[], obj: ImageData) => any) {\n        const data = this.wad0File.getEntryData(name)\n        const imgData = BitmapWithPalette.decode(data)\n        callback([name], imgData)\n    }\n\n    loadNerpAsset(name: string, callback: (assetNames: string[], obj: string) => any) {\n        const nrnName = name.replace(/\\.npl$/, '.nrn')\n        const script = this.wad0File.getEntryText(nrnName)\n        callback([name, nrnName], script)\n    }\n\n    loadNerpMsg(name: string, callback: (assetNames: string[], obj: any) => any) {\n        const wad0Data = this.wad0File.getEntryText(name)\n        const wad1Data = this.wad1File.getEntryText(name)\n        const result = NerpMsgParser.parseNerpMessages(wad0Data, wad1Data)\n        callback([name], result)\n    }\n\n    loadObjectiveTexts(name: string, callback: (assetNames: string[], obj: any) => any) {\n        const txtContent = this.wad1File.getEntryData(name)\n        const result = new ObjectiveTextParser().parseObjectiveTextFile(txtContent)\n        callback([name], result)\n    }\n\n    loadMapAsset(name: string, callback: (assetNames: string[], obj: any) => any) {\n        const buffer = this.wad0File.getEntryData(name)\n        if (buffer.length < 13 || String.fromCharCode.apply(String, buffer.slice(0, 3)) !== 'MAP') {\n            console.error('Invalid map data provided for: ' + name)\n            return\n        }\n        const map = WadParser.parseMap(buffer)\n        callback([name], map)\n    }\n\n    loadObjectListAsset(name: string, callback: (assetNames: string[], obj: any) => any) {\n        const data = this.wad0File.getEntryText(name)\n        const objectList = WadParser.parseObjectList(data)\n        callback([name], objectList)\n    }\n\n    /**\n     * Load a WAV file format sound asset from the WAD file.\n     * @param path Path inside the WAD file\n     * @param callback A callback that is triggered after the file has been loaded\n     */\n    loadWavAsset(path: string, callback: (assetNames: string[], obj: any) => any) {\n        let buffer: ArrayBufferLike\n        try { // localized wad1 file first, then generic wad0 file\n            buffer = this.wad1File.getEntryBuffer(path)\n        } catch (e) {\n            buffer = this.wad0File.getEntryBuffer(path)\n        }\n        callback([path], buffer)\n    }\n\n    loadLWOFile(lwoFilepath: string, callback: (assetNames: string[], obj: any) => any) {\n        let lwoContent\n        try {\n            lwoContent = this.wad0File.getEntryBuffer(lwoFilepath)\n        } catch (e) {\n            try {\n                lwoContent = this.wad0File.getEntryBuffer('world/shared/' + getFilename(lwoFilepath))\n            } catch (e) {\n                if (!lwoFilepath.equalsIgnoreCase('Vehicles/BullDozer/VLBD_light.lwo') // ignore known issues\n                    && !lwoFilepath.equalsIgnoreCase('Vehicles/LargeDigger/LD_bucket.lwo')\n                    && !lwoFilepath.equalsIgnoreCase('Vehicles/LargeDigger/LD_main.lwo')\n                    && !lwoFilepath.equalsIgnoreCase('Vehicles/LargeDigger/LD_C_Pit.lwo')\n                    && !lwoFilepath.equalsIgnoreCase('Vehicles/LargeDigger/LD_Light01.lwo')\n                    && !lwoFilepath.equalsIgnoreCase('Vehicles/LargeDigger/digbodlight.lwo')\n                    && !lwoFilepath.equalsIgnoreCase('Vehicles/LargeDigger/LD_PipeL.lwo')) {\n                    console.error('Could not load LWO file ' + lwoFilepath + '; Error: ' + e)\n                }\n                lwoContent = {}\n            }\n        }\n        callback([lwoFilepath], lwoContent)\n    }\n\n    loadFlhAsset(filename: string, callback: (assetNames: string[], obj: any) => any) {\n        const flhContent = this.wad0File.getEntryBuffer(filename)\n        const flhFrames = new FlhParser().parse(flhContent)\n        callback([filename], flhFrames)\n    }\n\n    loadAssetsParallel() {\n        const promises = []\n        const that = this\n        this.assetRegistry.forEach((asset) => {\n            promises.push(new Promise<void>((resolve) => {\n                try {\n                    asset.method(asset.assetPath, (assetNames, assetObj) => {\n                        this.assetIndex++\n                        that.onAssetLoaded(this.assetIndex, assetNames, assetObj, asset.sfxKeys)\n                        resolve()\n                    })\n                } catch (e) {\n                    if (!asset.optional) console.error(e)\n                    this.assetIndex++\n                    that.onAssetLoaded(this.assetIndex, [asset.assetPath], null, asset.sfxKeys)\n                    resolve()\n                }\n            }))\n        })\n        Promise.all(promises).then(() => {\n            // indicate that loading has finished, and display the total loading time\n            const loadingTimeSeconds = ((new Date().getTime() - this.startTime.getTime()) / 1000).toFixed(3).toString()\n            this.onLoadDone(this.totalResources, loadingTimeSeconds)\n        })\n    }\n\n    startWithCachedFiles(onCacheMiss: () => any) {\n        this.startTime = new Date()\n        const _onerror = () => {\n            this.onMessage('WAD files not found in cache')\n            onCacheMiss()\n        }\n        this.onMessage('Loading WAD files from cache...')\n        const that = this\n        this.openLocalCache((objectStore) => {\n            const request1 = objectStore.get('wad0')\n            request1.onerror = _onerror\n            request1.onsuccess = function () {\n                if (request1.result === undefined) {\n                    _onerror()\n                    return\n                }\n                // console.log('First WAD file loaded from cache after ' + ((new Date().getTime() - that.startTime.getTime()) / 1000));\n                that.wad0File = new WadFile()\n                for (let prop in request1.result) { // class info are runtime info and not stored in cache => use copy constructor\n                    if (request1.result.hasOwnProperty(prop)) {\n                        that.wad0File[prop] = request1.result[prop]\n                    }\n                }\n                const request2 = objectStore.get('wad1')\n                request2.onerror = _onerror\n                request2.onsuccess = function () {\n                    if (request2.result === undefined) {\n                        _onerror()\n                        return\n                    }\n                    that.wad1File = new WadFile()\n                    for (let prop in request2.result) { // class info are runtime info and not stored in cache => use copy constructor\n                        if (request2.result.hasOwnProperty(prop)) {\n                            that.wad1File[prop] = request2.result[prop]\n                        }\n                    }\n                    console.log('WAD files loaded from cache after ' + ((new Date().getTime() - that.startTime.getTime()) / 1000))\n                    that.startLoadingProcess()\n                }\n            }\n        })\n    }\n\n    /**\n     * Private helper method, which combines file loading and waits for them to become ready before continuing\n     * @param wad0Url Url to parse the LegoRR0.wad file from\n     * @param wad1Url Url to parse the LegoRR1.wad file from\n     */\n    loadWadFiles(wad0Url: string, wad1Url: string) {\n        const that = this\n        Promise.all([this.loadWadFile(wad0Url), this.loadWadFile(wad1Url)]).then(wadFiles => {\n            that.wad0File = wadFiles[0] as WadFile\n            that.wad1File = wadFiles[1] as WadFile\n            this.openLocalCache((objectStore) => {\n                objectStore.put(that.wad0File, 'wad0')\n                objectStore.put(that.wad1File, 'wad1')\n            })\n            this.startLoadingProcess()\n        })\n    }\n\n    /**\n     * Read WAD file as binary blob from the given URL and parse it on success\n     * @param url the url to the WAD file, can be local file url (file://...) too\n     */\n    loadWadFile(url: string) {\n        return new Promise(resolve => {\n            console.log('Loading WAD file from ' + url)\n            fetch(url).then((response) => {\n                if (response.ok) {\n                    response.arrayBuffer().then((buffer) => {\n                        const wadFile = new WadFile()\n                        wadFile.parseWadFile(buffer)\n                        resolve(wadFile)\n                    })\n                }\n            }).catch((e) => console.error(e))\n        })\n    }\n\n    openLocalCache(onopen: (IDBObjectStore) => void) {\n        const request: IDBOpenDBRequest = indexedDB.open(WAD_CACHE_DB_NAME)\n        request.onupgradeneeded = function () {\n            const db = request.result\n            if (db.objectStoreNames.contains('wadfiles')) {\n                db.deleteObjectStore('wadfiles')\n            }\n            db.createObjectStore('wadfiles')\n        }\n        request.onsuccess = function () {\n            const db = request.result\n            const transaction = db.transaction(['wadfiles'], 'readwrite')\n            const objectStore = transaction.objectStore('wadfiles')\n            onopen(objectStore)\n        }\n    }\n\n    /**\n     * Load essential files, to begin the chain of asset loading\n     */\n    startLoadingProcess() {\n        this.startTime = new Date()\n        this.onMessage('Loading configuration...')\n        const cfg = CfgFileParser.parse(this.wad1File.getEntryData('Lego.cfg'))\n        // dynamically register all assets from config\n        this.assetRegistry.registerAllAssets(cfg)\n        this.onMessage('Loading initial assets...')\n        Promise.all([\n            new Promise<void>((resolve) => {\n                const name = iGet(cfg, 'Main', 'LoadScreen') // loading screen image\n                this.loadWadImageAsset(name, (assetNames: string[], imgData) => {\n                    this.onAssetLoaded(0, assetNames, imgData)\n                    resolve()\n                })\n            }),\n            new Promise<void>((resolve) => {\n                const name = iGet(cfg, 'Main', 'ProgressBar') // loading bar container image\n                this.loadWadImageAsset(name, (assetNames: string[], imgData) => {\n                    this.onAssetLoaded(0, assetNames, imgData)\n                    resolve()\n                })\n            }),\n            new Promise<void>((resolve) => {\n                const name = iGet(cfg, 'Pointers', 'Pointer_Standard')\n                this.loadAlphaImageAsset(name, (assetNames: string[], imgData) => {\n                    this.onAssetLoaded(0, assetNames, imgData)\n                    resolve()\n                })\n            }),\n            new Promise<void>((resolve) => {\n                const name = 'Interface/Fonts/Font5_Hi.bmp'\n                this.loadFontImageAsset(name, (assetNames: string[], imgData) => {\n                    this.onAssetLoaded(0, assetNames, imgData)\n                    resolve()\n                })\n            }),\n        ]).then(() => {\n            this.onMessage('Start loading assets...')\n            this.totalResources = this.assetRegistry.size\n            this.onInitialLoad(this.totalResources, cfg)\n            this.assetIndex = 0\n            this.loadAssetsParallel()\n        })\n    }\n\n}\n","export function grayscaleToGreen(imgData: ImageData): ImageData {\n    const arr = imgData.data\n    for (let c = 0; c < arr.length; c += 4) {\n        arr[c] = 0\n        arr[c + 2] = 0\n    }\n    return imgData\n}\n","interface NerpMessage {\n\n    txt?: string\n    snd?: string\n\n}\n\nexport class NerpMsgParser {\n\n    static parseNerpMessages(wad0Data: string, wad1Data: string): NerpMessage[] {\n        const result = this.parseNerpMsgFile(wad0Data, true)\n        const msg1 = this.parseNerpMsgFile(wad1Data, false)\n        for (let c = 0; c < msg1.length; c++) {\n            result[c] = result[c] || {}\n            const m1 = msg1[c]\n            if (!m1) continue\n            if (m1.txt) {\n                result[c].txt = m1.txt\n            }\n            if (m1.snd) {\n                result[c].snd = m1.snd\n            }\n        }\n        return result\n    }\n\n    static parseNerpMsgFile(wadData: string, isWad0File: boolean): NerpMessage[] {\n        const result = []\n        const lines = wadData.split(/[\\r\\n]/).map((l) => l?.trim()).filter((l) => !!l)\n        for (let c = 0; c < lines.length; c++) {\n            const line = lines[c]\n            if (line === '-') {\n                continue\n            }\n            // line formatting differs between wad0 and wad1 files!\n            const txt0Match = line.match(/\\\\\\[([^\\\\]+)\\\\](\\s*#([^#]+)#)?/)\n            const txt1Match = line.match(/^([^$][^#]+)(\\s*#([^#]+)#)?/)\n            const sndMatch = line.match(/\\$([^\\s]+)\\s*([^\\s]+)/)\n            if (isWad0File && txt0Match) {\n                const index = txt0Match[3] !== undefined ? this.numericNameToNumber(txt0Match[3]) : c // THIS IS MADNESS! #number# at the end of line is OPTIONAL\n                result[index] = result[index] || {}\n                result[index].txt = txt0Match[1]\n            } else if (!isWad0File && txt1Match) {\n                const index = txt1Match[3] !== undefined ? this.numericNameToNumber(txt1Match[3]) : c // THIS IS MADNESS! #number# at the end of line is OPTIONAL\n                result[index] = result[index] || {}\n                result[index].txt = txt1Match[1].replace(/_/g, ' ').trim()\n            } else if (sndMatch && sndMatch.length === 3) {\n                const index = this.numericNameToNumber(sndMatch[1])\n                result[index] = result[index] || {}\n                result[index].snd = sndMatch[2].replace(/\\\\/g, '/')\n            } else {\n                throw 'Line in nerps message file did not match anything'\n            }\n        }\n        return result\n    }\n\n    static numericNameToNumber(name: string): number {\n        if (name === undefined) {\n            throw 'Numeric name must not be undefined'\n        }\n        const digits = {one: 1, two: 2, three: 3, four: 4, five: 5, six: 6, seven: 7, eight: 8, nine: 9}\n        const specials = {\n            ten: 10, eleven: 11, twelve: 12, thirteen: 13, fourteen: 14, fifteen: 15,\n            sixteen: 16, seventeen: 17, eighteen: 18, nineteen: 19,\n            eightteen: 18, // typo seen in the wild\n        }\n        const tens = {twenty: 20, thirty: 30, forty: 40}\n        let number = specials[name] || digits[name]\n        if (number === undefined) {\n            Object.keys(tens).forEach(ten => {\n                if (name.startsWith(ten)) {\n                    const digitName = name.replace(ten, '')\n                    number = tens[ten] + (digitName ? digits[digitName] : 0)\n                }\n            })\n        }\n        if (number === undefined) {\n            throw 'Found unexpected numeric name ' + name\n        }\n        return number\n    }\n\n}\n","export const DEV_MODE = process.env.WEBPACK_MODE === 'development'\nexport const WAD_CACHE_DB_NAME = 'RockRaidersWeb'\nexport const JOB_SCHEDULE_INTERVAL = 1000 // milliseconds\nexport const CHECK_CLEAR_RUBBLE_INTERVAL = 5000 // milliseconds\nexport const CHECK_SPAWN_RAIDER_TIMER = 1000 // milliseconds\nexport const MAX_RAIDER_BASE = 12\nexport const MAX_RAIDER_REQUEST = 9\nexport const ADDITIONAL_RAIDER_PER_SUPPORT = 10\nexport const UPDATE_OXYGEN_TIMER = 5000 // milliseconds\nexport const PANEL_ANIMATION_MULTIPLIER = 3\nexport const HEIGHT_MULTIPLIER = 0.1\nexport const SEQUENCE_TEXTURE_FRAMERATE = 5\nexport const KEY_PAN_SPEED = 20\n\n// native constants (do not change)\n\nexport const SPRITE_RESOLUTION_WIDTH = 640\nexport const SPRITE_RESOLUTION_HEIGHT = 480\nexport const TILESIZE = 40\nexport const NATIVE_FRAMERATE = 30\nexport const NATIVE_UPDATE_INTERVAL = 1000 / NATIVE_FRAMERATE\n","import { BaseConfig } from './BaseConfig'\n\nexport class BuildingEntityStats extends BaseConfig {\n\n    Levels: number = 0\n    SelfPowered: boolean = false\n    PowerBuilding: boolean = false\n    PickSphere: number = 0\n    TrainDynamite: boolean[] = null\n    CostOre: number = 0\n    CostCrystal: number = 0\n    OxygenCoef: number = 0\n    EngineSound: string = null\n\n}\n","// noinspection JSUnusedGlobalSymbols\n\nimport { BaseConfig } from './BaseConfig'\nimport { BuildingEntityStats } from './BuildingEntityStats'\n\nexport class GameStatsCfg extends BaseConfig {\n\n    Pilot = new class PilotStats extends BaseConfig {\n        Levels: number = 4\n        RouteSpeed: number[] = [1.10, 1.10, 1.10, 1.10]\n        SoilDrillTime: number[] = [4.0, 4.0, 4.0, 4.0] // Time in seconds to drill through the rock.\n        LooseDrillTime: number[] = [4.0, 4.0, 4.0, 4.0]\n        MedDrillTime: number[] = [8.0, 8.0, 8.0, 8.0]\n        HardDrillTime: number[] = [0.0, 0.0, 0.0, 0.0] // Zero means the object cannot drill the rock type\n        SeamDrillTime: number[] = [10.0, 10.0, 10.0, 10.0] // Either or both ore or crystal.\n        UpgradeTime: number[] = [30.0, 45.0, 60.0, 60.0] // Last entry is ignored as it can never upgrade from that.\n        CollRadius: number = 5.0\n        CollHeight: number = 12.0\n        TrackDist: number = 40.0\n        SingleWidthDig: boolean[] = [true, true, true, true]\n        PickSphere: number = 10.0\n        RepairValue: number[] = [10.0, 15.0, 20.0, 25.0]\n        SurveyRadius: number[] = [3, 3, 3, 3]\n        Drillsound: string = 'SND_pilotdrill'\n        Drillfadesound: string = 'SND_pilotdrillfade'\n        RestPercent: number = 60.0\n        EnergyDecayRate: number = 0.25\n        CanClearRubble: boolean = true\n        NumOfToolsCanCarry: number[] = [2, 3, 4, 5]\n        CrossLand: boolean = true\n        RubbleCoef: number = 0.5\n        PathCoef: number = 2.0\n        RouteAvoidance: boolean = true\n        UseLegoManTeleporter: boolean = true\n        AwarenessRange: number = 10.0\n        OxygenCoef: number = -1.0\n        CanStrafe: boolean = true\n        EnterToolStore: boolean = true\n        ShowHealthBar: boolean = true\n    }\n\n    RockMonster = new class RockMonsterStats extends BaseConfig {\n        Levels: number = 1\n        RouteSpeed: number = 0.8\n        TrackDist: number = 50.0\n        CollRadius: number = 10.0\n        CollHeight: number = 22.0\n        AlertRadius: number = 60.0\n        HealthDecayRate: number = 0.6 // Reduce health by 'n' every second.\n        PickSphere: number = 22.0\n        RepairValue: number = -10.0\n        CanScare: boolean = true\n        RestPercent: number = 20.0\n        CarryMinHealth: number = 15.0\n        PainThreshold: number = 20.0\n        StampRadius: number = 80.0\n        AttackRadius: number = 160.0\n        CanSteal: boolean = true\n        CrossLand: boolean = true\n        RubbleCoef: number = 1.5\n        GrabMinifigure: boolean = true\n        RouteAvoidance: boolean = true\n        BumpDamage: boolean = true\n        AttackPaths: boolean = true\n        SplitOnZeroHealth: boolean = true\n        CanBeHitByFence: boolean = true\n        Capacity: number = 6 // How many crystals it can eat\n        PathCoef: number = 0.5\n        // Statistics about the weapons\n        CanBeShotAt: boolean = true // Can this monster be shot at by lego men\n        CanFreeze: boolean = true // Can this object be frozen\n        FreezerTime: number = 25.0 // Time this object is frozen for\n        FreezerDamage: number = 5.0 // Damage that freezing causes\n        CanLaser: boolean = true // Can this object be lasered\n        LaserDamage: number = 110.0 // Damage sustained by a laser\n        CanPush: boolean = true // Can this object be pusher'ed\n        PusherDist: number = 20.0 // Distance the object is pushed 40=1 block\n        PusherDamage: number = 2.0 // Damage that the pusher gun causes\n        WakeRadius: number = 25.0\n        ScaredByBigBangs: boolean = true\n        RemoveReinforcement: boolean = true\n        ShowHealthBar: boolean = true\n    }\n\n    SmallSpider = new class SmallSpiderStats extends BaseConfig {\n        Levels: number = 1\n        RouteSpeed: number[] = [2.0]\n        TrackDist: number = 10.0\n        CollRadius: number = 0.0\n        CollHeight: number = 0.0\n        PickSphere: number = 6.0\n        AlertRadius: number = 40.0\n        RandomMove: boolean = true\n        RandomEnterWall: boolean = true\n        CauseSlip: boolean = true\n        CrossLand: boolean = true\n        RubbleCoef: number = 0.2\n        DontShowDamage: boolean = true\n        DontShowOnRadar: boolean = true\n        ScaredByBigBangs: boolean = true\n    }\n\n    Bat = new class BatStats extends BaseConfig {\n        Levels: number = 1\n        RouteSpeed: number[] = [1.0]\n        TrackDist: number = 10.0\n        CollRadius: number = 10.0\n        AlertRadius: number = 10.0 // Alert radius (causes attack mode)\n        RandomMove: boolean = true // Random movement\n        randomMoveTime: number = 10\n        CanScare: boolean = true // Scare away the player\n        ScaredByBigBangs: boolean = true\n        // Flock parameters.\n        Flocks: boolean = true // Set this to create a flock for this object.\n        FlocksDebug: boolean = false // If this is set the actual lego objects animation is displayed at the \"lego\" position.\n        FlocksSmooth: boolean = true // Smooths out the orientation of the flocks elements.\n        FlocksSize: number = 8 // Number of the given item in the flock.  (Default 5)\n        FlocksTurn: number = 0.6 // Turning speed of the bat. (0.6 default)\n        FlocksSpeed: number = 1.5 // Velocity of the flock. (2.0 default)\n        FlocksTightness: number = 0.8 // Tightness of the flock. (2.0 default)\n        FlocksGoalUpdate: number = 2.0 // How often the flocks goal is updated (25 per second).  (2.0 default)\n        FlocksRandomness: number = 6.0 // Randomness of goals. (2.0 default)\n        FlocksHeight: number = 22.0 // Height above the ground of the flock elements.  (30.0 default)\n        CrossLand: boolean = true\n        CrossWater: boolean = true\n        CrossLava: boolean = true\n        DontShowDamage: boolean = true\n    }\n\n    TinyRM = new class TinyRMStats extends BaseConfig {\n        Levels: number = 1\n        RouteSpeed: number = 1.2\n        TrackDist: number = 10.0\n        CollRadius: number = 0.0\n        CollHeight: number = 5.0\n        PickSphere: number = 6.0\n        AlertRadius: number = 40.0\n        CrossLand: boolean = true\n        RubbleCoef: number = 1.5\n        DontShowDamage: boolean = true\n        DontShowOnRadar: boolean = true\n        ScaredByPlayer: boolean = true\n        ScaredByBigBangs: boolean = true\n    }\n\n    TinyIM = new class TinyIMStats extends BaseConfig {\n        Levels: number = 1\n        RouteSpeed: number = 1.2\n        TrackDist: number = 10.0\n        CollRadius: number = 0.0\n        CollHeight: number = 5.0\n        PickSphere: number = 6.0\n        AlertRadius: number = 40.0\n        CrossLand: boolean = true\n        RubbleCoef: number = 1.5\n        DontShowDamage: boolean = true\n        DontShowOnRadar: boolean = true\n        ScaredByPlayer: boolean = true\n        ScaredByBigBangs: boolean = true\n    }\n\n    Slug = new class SlugStats extends BaseConfig {\n        Levels: number = 1\n        RouteSpeed: number = 0.3\n        TrackDist: number = 10.0\n        CollRadius: number = 3.0\n        CollHeight: number = 7.0\n        PickSphere: number = 12.0\n        AlertRadius: number = 40.0\n        CrossLand: boolean = true\n        RubbleCoef: number = 0.3\n        UseHoles: boolean = true\n        DrainPower: boolean = true\n        AttackRadius: number = 280.0\n        PainThreshold: number = 50.0\n        CanBeShotAt: boolean = true\n        CanLaser: boolean = true\n        LaserDamage: number = 5.0\n        CanPush: boolean = true // Can this object be pusher'ed\n        PusherDist: number = 60.0 // Distance the object is pushed\n        PusherDamage: number = 5.0 // Damage that the pusher gun causes\n        ShowHealthBar: boolean = true\n        ScaredByBigBangs: boolean = true\n    }\n\n    LavaMonster = new class LavaMonsterStats extends BaseConfig {\n        Levels: number = 1\n        RouteSpeed: number = 0.8\n        TrackDist: number = 50.0\n        CollRadius: number = 10.0\n        CollHeight: number = 22.0\n        AlertRadius: number = 60.0\n        HealthDecayRate: number = 0.6 // Reduce health by 'n' every second.\n        PickSphere: number = 22.0\n        RepairValue: number = -10.0\n        CanScare: boolean = true\n        RestPercent: number = 20.0\n        CarryMinHealth: number = 15.0\n        PainThreshold: number = 20.0\n        StampRadius: number = 80.0\n        AttackRadius: number = 160.0\n        CanSteal: boolean = true\n        CrossLand: boolean = true\n        RubbleCoef: number = 1.5\n        GrabMinifigure: boolean = true\n        Capacity: number = 7 // How many crystals it can eat\n        RouteAvoidance: boolean = true\n        BumpDamage: boolean = true\n        AttackPaths: boolean = true\n        SplitOnZeroHealth: boolean = true\n        CanBeHitByFence: boolean = true\n        PathCoef: number = 0.5\n        CrossLava: boolean = true\n        // Statistics about the weapons\n        CanBeShotAt: boolean = true // Can this monster be shot at by lego men\n        CanFreeze: boolean = true // Can this object be frozen\n        FreezerTime: number = 75.0 // Time this object is frozen for\n        FreezerDamage: number = 40.0 // Damage that freezing causes\n        CanLaser: boolean = true // Can this object be lasered\n        LaserDamage: number = 1.0 // Damage sustained by a laser\n        CanPush: boolean = true // Can this object be pusher'ed\n        PusherDist: number = 60.0 // Distance the object is pushed\n        PusherDamage: number = 5.0 // Damage that the pusher gun causes\n        WakeRadius: number = 25.0\n        ScaredByBigBangs: boolean = true\n        RemoveReinforcement: boolean = true\n        ShowHealthBar: boolean = true\n    }\n\n    IceMonster = new class IceMonsterStats extends BaseConfig {\n        Levels: number = 1\n        RouteSpeed: number = 0.8\n        TrackDist: number = 50.0\n        CollRadius: number = 10.0\n        CollHeight: number = 22.0\n        AlertRadius: number = 60.0\n        HealthDecayRate: number = 0.6 // Reduce health by 'n' every second.\n        PickSphere: number = 22.0\n        RepairValue: number = -10.0\n        CanScare: boolean = true\n        RestPercent: number = 20.0\n        CarryMinHealth: number = 15.0\n        PainThreshold: number = 20.0\n        StampRadius: number = 80.0\n        AttackRadius: number = 120.0\n        CanSteal: boolean = true\n        CrossLand: boolean = true\n        RubbleCoef: number = 1.5\n        GrabMinifigure: boolean = true\n        Capacity: number = 5 // How many crystals it can eat\n        RouteAvoidance: boolean = true\n        BumpDamage: boolean = true\n        AttackPaths: boolean = true\n        SplitOnZeroHealth: boolean = true\n        CanBeHitByFence: boolean = true\n        PathCoef: number = 0.5\n        // Statistics about the weapons\n        CanBeShotAt: boolean = true // Can this monster be shot at by lego men\n        CanFreeze: boolean = false // Can this object be frozen\n        FreezerTime: number = 0.0 // Time this object is frozen for\n        FreezerDamage: number = 0.0 // Damage that freezing causes\n        CanLaser: boolean = true // Can this object be lasered\n        LaserDamage: number = 110.0 // Damage sustained by a laser\n        CanPush: boolean = true // Can this object be pusher'ed\n        PusherDist: number = 60.0 // Distance the object is pushed\n        PusherDamage: number = 2.0 // Damage that the pusher gun causes\n        WakeRadius: number = 25.0\n        ScaredByBigBangs: boolean = true\n        RemoveReinforcement: boolean = true\n        ShowHealthBar: boolean = true\n    }\n\n    Hoverboard = new class HoverboardStats extends BaseConfig { // [Carry][Scan][Speed][Drill]    (No drill or carry)\n        Levels: number = 8\n        RouteSpeed: number[] = [3.0, 3.0, 5.0, 5.0, 3.0, 3.0, 5.0, 5.0]\n        SurveyRadius: number[] = [0, 0, 0, 0, 4, 4, 4, 4]\n        TrackDist: number = 50.0\n        CollRadius: number = 8.0\n        CollHeight: number = 12.0\n        PickSphere: number = 16.0\n        CanBeDriven: boolean = true\n        CrossLand: boolean = true\n        UseSmallTeleporter: boolean = true\n        CanStrafe: boolean = true\n        CostCrystal: number = 1\n        UpgradeCostOre: number[] = [0, 5, 10, 0]\n        UpgradeCostStuds: number[] = [0, 1, 2, 0]\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_SmallEngine'\n    }\n\n    SmallHeli = new class SmallHeliStats extends BaseConfig {\n        Levels: number = 1\n        RouteSpeed: number = 2.50\n        TrackDist: number = 50.0\n        CollRadius: number = 10.0\n        CollHeight: number = 12.0\n        PickSphere: number = 20.0\n        CanBeDriven: boolean = true\n        CrossLand: boolean = true\n        CrossWater: boolean = true\n        CrossLava: boolean = true\n        UseSmallTeleporter: boolean = true\n        CanStrafe: boolean = true\n        CostCrystal: number = 3\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_HeliEngine'\n    }\n\n    Smallmlp = new class SmallmlpStats extends BaseConfig {\n        Levels: number = 4\n        RouteSpeed: number[] = [0.50, 0.50, 0.50, 0.50]\n        TrackDist: number = 50.0\n        CollRadius: number = 12.0\n        CollHeight: number = 22.0\n        PickSphere: number = 26.0\n        CanBeDriven: boolean = true\n        CrossLand: boolean = true\n        UseSmallTeleporter: boolean = true\n        Tracker: boolean = true\n        CanDoubleSelect: boolean = true\n        CostCrystal: number = 3\n        UpgradeCostOre: number[] = [0, 0, 0, 10]\n        UpgradeCostStuds: number[] = [0, 0, 0, 2]\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_MediumEngine'\n    }\n\n    SmallCat = new class SmallCatStats extends BaseConfig {\n        Levels: number = 3\n        RouteSpeed: number[] = [2.0, 3.0, 4.0]\n        TrackDist: number = 50.0\n        CollRadius: number = 12.0\n        CollHeight: number = 12.0\n        PickSphere: number = 26.0\n        CrossWater: boolean = true\n        CanBeDriven: boolean = true\n        UseWaterTeleporter: boolean = true\n        CostCrystal: number = 2\n        MaxCarry: number[] = [1, 1, 1]\n        GetInAtLand: boolean = true\n        GetOutAtLand: boolean = true\n        TakeCarryingDrivers: boolean = true\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_Catamaran'\n    }\n\n    SmallDigger = new class SmallDiggerStats extends BaseConfig {\n        Levels: number = 8\n        RouteSpeed: number[] = [2.0, 2.0, 4.0, 4.0, 2.0, 2.0, 4.0, 4.0]\n        SoilDrillTime: number[] = [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]\n        LooseDrillTime: number[] = [2.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0, 1.0]\n        MedDrillTime: number[] = [4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0]\n        HardDrillTime: number[] = [180.0, 150.0, 180.0, 150.0, 180.0, 150.0, 180.0, 150.0]\n        SeamDrillTime: number[] = [8.0, 4.0, 8.0, 4.0, 8.0, 4.0, 8.0, 4.0]\n        MaxCarry: number[] = [0, 0, 0, 0, 0, 0, 0, 0]\n        SurveyRadius: number[] = [0, 0, 0, 0, 4, 4, 4, 4]\n        TrackDist: number = 50.0\n        CollRadius: number = 10.0\n        CollHeight: number = 12.0\n        PickSphere: number = 20.0\n        CanBeDriven: boolean = true\n        CrossLand: boolean = true\n        RouteAvoidance: boolean = true\n        UseSmallTeleporter: boolean = true\n        VehicleCanBeCarried: boolean = true\n        CostCrystal: number = 1\n        UpgradeCostOre: number[] = [0, 5, 10, 10]\n        UpgradeCostStuds: number[] = [0, 1, 2, 2]\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_SmallEngine'\n    }\n\n    SmallTruck = new class SmallTruckStats extends BaseConfig { // [Carry][Scan][Speed][Drill]    (No drill)\n        Levels: number = 16\n        RouteSpeed: number[] = [2.0, 2.0, 3.0, 3.0, 2.0, 2.0, 3.0, 3.0, 2.0, 2.0, 3.0, 3.0, 2.0, 2.0, 3.0, 3.0]\n        MaxCarry: number[] = [3, 3, 3, 3, 3, 3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6]\n        CarryStart: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3]\n        SurveyRadius: number[] = [0, 0, 0, 0, 4, 4, 4, 4, 0, 0, 0, 0, 4, 4, 4, 4]\n        TrackDist: number = 50.0\n        CollRadius: number = 10.0\n        CollHeight: number = 12.0\n        PickSphere: number = 20.0\n        CanBeDriven: boolean = true\n        CrossLand: boolean = true\n        UseSmallTeleporter: boolean = true\n        VehicleCanBeCarried: boolean = true\n        CostCrystal: number = 2\n        EnterToolStore: boolean = true\n        UpgradeCostOre: number[] = [5, 5, 10, 0]\n        UpgradeCostStuds: number[] = [1, 1, 2, 0]\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_SmallEngine'\n    }\n\n    Bulldozer = new class BulldozerStats extends BaseConfig { // [Carry][Scan][Speed][Drill]    (No drill)\n        Levels: number = 16\n        RouteSpeed: number[] = [0.5, 0.5, 0.8, 0.8, 0.5, 0.5, 0.8, 0.8, 0.5, 0.5, 0.8, 0.8, 0.5, 0.5, 0.8, 0.8]\n        MaxCarry: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]\n        SurveyRadius: number[] = [0, 0, 0, 0, 5, 5, 5, 5, 0, 0, 0, 0, 5, 5, 5, 5]\n        TrackDist: number = 80.0\n        CollRadius: number = 18.0\n        CollHeight: number = 26.0\n        PickSphere: number = 40.0\n        CrossLand: boolean = true\n        CanClearRubble: boolean = true\n        UseBigTeleporter: boolean = true\n        CanBeDriven: boolean = true\n        CostCrystal: number = 4\n        InvisibleDriver: boolean = true\n        UpgradeCostOre: number[] = [5, 5, 20, 0]\n        UpgradeCostStuds: number[] = [1, 1, 4, 0]\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_MediumEngine'\n    }\n\n    WalkerDigger = new class WalkerDiggerStats extends BaseConfig { // [Carry][Scan][Speed][Drill]    (No carry)\n        Levels: number = 8\n        RouteSpeed: number[] = [0.50, 0.50, 0.80, 0.80, 0.50, 0.50, 0.80, 0.80]\n        SoilDrillTime: number[] = [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]\n        LooseDrillTime: number[] = [0.80, 0.40, 0.80, 0.40, 0.80, 0.40, 0.80, 0.40]\n        MedDrillTime: number[] = [2.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0, 1.0]\n        HardDrillTime: number[] = [180.0, 150.0, 180.0, 150.0, 180.0, 150.0, 180.0, 150.0]\n        SeamDrillTime: number[] = [4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0]\n        SurveyRadius: number[] = [0, 0, 0, 0, 5, 5, 5, 5]\n        TrackDist: number = 80.0\n        CollRadius: number = 15.0\n        CollHeight: number = 33.0\n        PickSphere: number = 35.0\n        CrossLand: boolean = true\n        UseBigTeleporter: boolean = true\n        CostCrystal: number = 3\n        CanBeDriven: boolean = true\n        InvisibleDriver: boolean = true\n        CanStrafe: boolean = true\n        DrillSound: string = 'DrillSFX_Grinder'\n        DrillFadeSound: string = 'DrillSFX_GrinderFade'\n        UpgradeCostOre: number[] = [0, 5, 20, 20]\n        UpgradeCostStuds: number[] = [0, 1, 4, 4]\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_MediumEngine'\n    }\n\n    LargeDigger = new class LargeDiggerStats extends BaseConfig { // [Carry][Scan][Speed][Drill]    (No carry or scan)\n        Levels: number = 4\n        RouteSpeed: number[] = [0.30, 0.30, 0.60, 0.60]\n        SoilDrillTime: number[] = [1.0, 1.0, 1.0, 1.0]\n        LooseDrillTime: number[] = [0.40, 0.20, 0.40, 0.20]\n        MedDrillTime: number[] = [0.80, 0.40, 0.80, 0.40]\n        HardDrillTime: number[] = [1.0, 0.50, 1.0, 0.50]\n        SeamDrillTime: number[] = [1.0, 0.50, 1.0, 0.50]\n        TrackDist: number = 80.0\n        CollRadius: number = 22.0\n        CollHeight: number = 30.0\n        PickSphere: number = 50.0\n        CrossLand: boolean = true\n        UseBigTeleporter: boolean = true\n        Tracker: boolean = true\n        CanDoubleSelect: boolean = true\n        CanBeDriven: boolean = true\n        CostCrystal: number = 5\n        InvisibleDriver: boolean = true\n        DrillSound: string = 'DrillSFX_Grinder'\n        DrillFadeSound: string = 'DrillSFX_GrinderFade'\n        UpgradeCostOre: number[] = [0, 0, 15, 20]\n        UpgradeCostStuds: number[] = [0, 0, 3, 4]\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_LargeEngine'\n    }\n\n    LargeCat = new class LargeCatStats extends BaseConfig { // [Carry][Scan][Speed][Drill] (No carry) (Drill???)\n        Levels: number = 1\n        RouteSpeed: number = 1.50\n        SurveyRadius: number = 0\n        TrackDist: number = 80.0\n        CollRadius: number = 22.0\n        CollHeight: number = 25.0\n        PickSphere: number = 50.0\n        CanBeDriven: boolean = true\n        CrossWater: boolean = true\n        UseWaterTeleporter: boolean = true\n        ClassAsLarge: boolean = true\n        CarryVehicles: boolean = true\n        CostCrystal: number = 4\n        EngineSound: string = 'SND_Catamaran'\n        ShowHealthBar: boolean = true\n    }\n\n    LargeHeli = new class LargeHeliStats extends BaseConfig {\n        Levels: number = 3\n        RouteSpeed: number[] = [0.30, 0.40, 0.50]\n        TrackDist: number = 80.0\n        CollRadius: number = 0.0\n        CollHeight: number = 0.0\n        PickSphere: number = 20.0\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_HeliEngine'\n    }\n\n    LargeMLP = new class LargeMLPStats extends BaseConfig { // [Carry][Scan][Speed][Drill]    (No carry or speed) (Doesn't have drills, just lasers)\n        Levels: number = 8\n        RouteSpeed: number[] = [0.40, 0.40, 0.40, 0.40, 0.40, 0.40, 0.40, 0.40]\n        SurveyRadius: number[] = [0, 0, 0, 0, 5, 5, 5, 5]\n        TrackDist: number = 80.0\n        CollRadius: number = 20.0\n        CollHeight: number = 24.0\n        PickSphere: number = 47.0\n        CrossLand: boolean = true\n        UseBigTeleporter: boolean = true\n        Tracker: boolean = true\n        CanDoubleSelect: boolean = true\n        CostCrystal: number = 4\n        CanBeDriven: boolean = true\n        InvisibleDriver: boolean = true\n        UpgradeCostOre: number[] = [0, 5, 0, 25]\n        UpgradeCostStuds: number[] = [0, 1, 0, 5]\n        ShowHealthBar: boolean = true\n        EngineSound: string = 'SND_LargeEngine'\n    }\n\n    Barracks = new class BarracksStats extends BuildingEntityStats {\n        Levels: number = 3\n        TrackDist: number = 50.0\n        CollHeight: number = 23.0\n        CollRadius: number = 15.0\n        PickSphere: number = 30.0\n        CostOre: number = 15\n        CostRefinedOre: number = 3\n        CostCrystal: number = 3\n        SnaxULike: boolean = true\n        TrainDriver: boolean[] = [true, true, true]\n        CrystalDrain: number[] = [1, 1, 1]\n        DamageCausesCallToArms: boolean = true\n        OxygenCoef: number = 10.0\n        EngineSound: string = 'SND_BuildingHum'\n        ShowHealthBar: boolean = true\n    }\n\n    Powerstation = new class PowerstationStats extends BuildingEntityStats {\n        Levels: number = 2\n        TrackDist: number = 80.0\n        ProcessCrystal: boolean = true\n        CollHeight: number = 31.0\n        CollRadius: number = 15.0\n        PickSphere: number = 32.0\n        CostOre: number = 12\n        CostRefinedOre: number = 3\n        CostCrystal: number = 2\n        PowerBuilding: boolean = true\n        DamageCausesCallToArms: boolean = true\n        EngineSound: string = 'SND_PowerBuildingHum'\n        ShowHealthBar: boolean = true\n    }\n\n    OreRefinery = new class OreRefineryStats extends BuildingEntityStats {\n        Levels: number = 4\n        TrackDist: number = 60.0\n        ProcessOre: boolean = true\n        CollHeight: number = 16.0\n        CollRadius: number = 15.0\n        PickSphere: number = 30.0\n        CostOre: number = 20\n        CostRefinedOre: number = 4\n        CostCrystal: number = 3\n        CrystalDrain: number[] = [1, 1, 1, 1]\n        DamageCausesCallToArms: boolean = true\n        MaxCarry: number[] = [5, 4, 3, 2]\n        EngineSound: string = 'SND_BuildingHum'\n        ShowHealthBar: boolean = true\n    }\n\n    TeleportPad = new class TeleportPadStats extends BuildingEntityStats {\n        Levels: number = 3\n        TrackDist: number = 60.0\n        SmallTeleporter: boolean = true\n        ManTeleporter: boolean = true\n        CollHeight: number = 20.0\n        CollRadius: number = 15.0\n        PickSphere: number = 30.0\n        CostOre: number = 8\n        CostRefinedOre: number = 2\n        CrystalDrain: number[] = [1, 1, 1]\n        DamageCausesCallToArms: boolean = true\n        TrainPilot: boolean[] = [true, true, true]\n        EngineSound: string = 'SND_BuildingHum'\n        ShowHealthBar: boolean = true\n    }\n\n    TeleportBIG = new class TeleportBIGStats extends BuildingEntityStats {\n        Levels: number = 2\n        TrackDist: number = 50.0\n        BigTeleporter: boolean = true\n        CollHeight: number = 17.0\n        CollRadius: number = 15.0\n        PickSphere: number = 30.0\n        CostOre: number = 20\n        CostRefinedOre: number = 4\n        CostCrystal: number = 2\n        CrystalDrain: number[] = [1, 1]\n        DamageCausesCallToArms: boolean = true\n        EngineSound: string = 'SND_BuildingHum'\n        ShowHealthBar: boolean = true\n    }\n\n    Docks = new class DocksStats extends BuildingEntityStats {\n        Levels: number = 1\n        TrackDist: number = 60.0\n        CollHeight: number = 20.0\n        CollRadius: number = 15.0\n        PickSphere: number = 30.0\n        CostOre: number = 8\n        CostRefinedOre: number = 2\n        CostCrystal: number = 1\n        WaterEntrances: number = 1\n        WaterTeleporter: boolean = true\n        CrystalDrain: number = 1\n        DamageCausesCallToArms: boolean = true\n        TrainSailor: boolean = true\n        EngineSound: string = 'SND_BuildingHum'\n        ShowHealthBar: boolean = true\n    }\n\n    Toolstation = new class ToolstationStats extends BuildingEntityStats {\n        Levels: number = 3\n        TrackDist: number = 50.0\n        ManTeleporter: boolean = true\n        CollHeight: number = 16.0\n        CollRadius: number = 15.0\n        PickSphere: number = 30.0\n        ToolStore: boolean = true\n        StoreObjects: boolean = true\n        SelfPowered: boolean = true\n        DamageCausesCallToArms: boolean = true\n        TrainDynamite: boolean[] = [false, false, true]\n        FunctionCoef: number[] = [1.0, 1.0, 1.0] // Function here is how long it takes to upgrade a minfigure\n        ShowHealthBar: boolean = true\n    }\n\n    GunStation = new class GunStationStats extends BuildingEntityStats {\n        Levels: number = 2\n        TrackDist: number = 60.0\n        CollHeight: number = 33.0\n        CollRadius: number = 15.0\n        PickSphere: number = 30.0\n        CostOre: number = 15\n        CostRefinedOre: number = 3\n        CostCrystal: number = 1\n        Tracker: boolean = true\n        CanDoubleSelect: boolean = true\n        CrystalDrain: number[] = [1, 1]\n        DamageCausesCallToArms: boolean = true\n        FunctionCoef: number[] = [1.0, 0.5] // How much of a crystal it drains every time it fires...\n        EngineSound: string = 'SND_BuildingHum'\n        ShowHealthBar: boolean = true\n    }\n\n    Geodome = new class GeodomeStats extends BuildingEntityStats {\n        Levels: number = 3\n        TrackDist: number = 50.0\n        CollHeight: number = 20.0\n        CollRadius: number = 15.0\n        PickSphere: number = 30.0\n        CostOre: number = 15\n        CostRefinedOre: number = 3\n        CostCrystal: number = 3\n        SurveyRadius: number[] = [6, 8, 12]\n        CrystalDrain: number[] = [1, 1, 1]\n        DamageCausesCallToArms: boolean = true\n        TrainScanner: boolean[] = [true, true, true]\n        EngineSound: string = 'SND_BuildingHum'\n        ShowHealthBar: boolean = true\n    }\n\n    Upgrade = new class UpgradeStats extends BuildingEntityStats {\n        Levels: number = 2\n        TrackDist: number = 80.0\n        CollHeight: number = 40.0\n        CollRadius: number = 15.0\n        PickSphere: number = 32.0\n        CostOre: number = 20\n        CostRefinedOre: number = 4\n        CostCrystal: number = 3\n        UpgradeBuilding: boolean = true\n        CrystalDrain: number[] = [1, 1]\n        DamageCausesCallToArms: boolean = true\n        FunctionCoef: number[] = [0.8, 1.6] // Function is speed of upgrade animation.\n        TrainRepair: boolean[] = [true, true]\n        EngineSound: string = 'SND_BuildingHum'\n        ShowHealthBar: boolean = true\n    }\n\n    PowerCrystal = new class PowerCrystalStats extends BaseConfig {\n        Levels: number = 1\n        TrackDist: number = 20.0\n        CollHeight: number = 2.0\n        PickSphere: number = 6.0\n    }\n\n    ProcessedOre = new class ProcessedOreStats extends BaseConfig {\n        Levels: number = 1\n        TrackDist: number = 20.0\n        CollHeight: number = 2.0\n        PickSphere: number = 8.0\n    }\n\n    Ore = new class OreStats extends BaseConfig {\n        Levels: number = 1\n        TrackDist: number = 20.0\n        CollHeight: number = 2.0\n        PickSphere: number = 6.0\n    }\n\n    Boulder = new class BoulderStats extends BaseConfig {\n        Levels: number = 1\n        CollRadius: number = 2.0\n    }\n\n    Pusher = new class PusherStats extends BaseConfig {\n        Levels: number = 1\n        CollRadius: number = 1.0\n    }\n\n    Freezer = new class FreezerStats extends BaseConfig {\n        Levels: number = 1\n        CollRadius: number = 1.0\n    }\n\n    LaserShot = new class LaserShotStats extends BaseConfig {\n        Levels: number = 1\n        ColRadius: number = 1.0\n    }\n\n    ElectricFence = new class ElectricFenceStats extends BaseConfig {\n        Levels: number = 1\n        TrackDist: number = 50.0\n        CollRadius: number = 5.0\n        CollHeight: number = 18.0\n        PickSphere: number = 20.0\n        DamageCausesCallToArms: boolean = true\n    }\n\n    Path = new class PathStats extends BaseConfig {\n        Levels: number = 1\n        CostOre: number = 2\n        CostRefinedOre: number = 1\n    }\n\n    constructor(cfgObj: any) {\n        super()\n        BaseConfig.setFromCfg(this, cfgObj)\n    }\n\n    assignValue(objKey, lCfgKeyName, cfgValue): boolean {\n        if (objKey.toLowerCase() === lCfgKeyName) {\n            BaseConfig.setFromCfg(this[objKey], cfgValue)\n            return true\n        }\n    }\n\n}\n\n","import { GameStatsCfg } from '../../cfg/GameStatsCfg'\nimport { WorkerMessageType } from './WorkerMessageType'\n\nexport class WadWorkerMessage {\n\n    type: WorkerMessageType = null\n    text?: string\n    cfg?: any\n    stats?: any\n    totalResources?: number\n    assetNames?: string[]\n    assetObj?: any\n    sfxKeys?: string[]\n    loadingTimeSeconds?: string\n\n    constructor(type: WorkerMessageType) {\n        this.type = type\n    }\n\n    static createTextMessage(msg: string): WadWorkerMessage {\n        return {type: WorkerMessageType.MSG, text: msg}\n    }\n\n    static createCfgLoaded(cfg: any, totalResources: number): WadWorkerMessage {\n        return {\n            type: WorkerMessageType.CFG,\n            cfg: cfg,\n            stats: new GameStatsCfg(cfg['Stats']),\n            totalResources: totalResources,\n        }\n    }\n\n    static createAssetLoaded(assetIndex: number, assetNames: string[], assetObj: any, sfxKeys: string[]): WadWorkerMessage {\n        return {type: WorkerMessageType.ASSET, assetNames: assetNames, assetObj: assetObj, sfxKeys: sfxKeys}\n    }\n\n    static createLoadDone(totalResources: number, loadingTimeSeconds: string): WadWorkerMessage {\n        return {type: WorkerMessageType.DONE, totalResources: totalResources, loadingTimeSeconds: loadingTimeSeconds}\n    }\n\n}\n","import { InitLoadingMessage } from './InitLoadingMessage'\nimport { WadLoader } from './WadLoader'\nimport { WadWorkerMessage } from './WadWorkerMessage'\nimport { WorkerMessageType } from './WorkerMessageType'\n\nconst worker: Worker = self as any\n\nfunction postMessage(assetMessage: WadWorkerMessage) {\n    worker.postMessage(assetMessage)\n}\n\nworker.addEventListener('message', (event) => {\n    const wadLoader = new WadLoader()\n    // set callbacks on wadLoader\n    wadLoader.onMessage = (text: string) => postMessage(WadWorkerMessage.createTextMessage(text))\n    wadLoader.onInitialLoad = (totalResources: number, cfg: any) => postMessage(WadWorkerMessage.createCfgLoaded(cfg, totalResources))\n    wadLoader.onAssetLoaded = (assetIndex: number, assetNames: string[], assetObj: any, sfxKeys: string[]) => {\n        postMessage(WadWorkerMessage.createAssetLoaded(assetIndex, assetNames, assetObj, sfxKeys))\n    }\n    wadLoader.onLoadDone = (totalResources: number, loadingTimeSeconds: string) => {\n        postMessage(WadWorkerMessage.createLoadDone(totalResources, loadingTimeSeconds))\n    }\n    // start loading\n    const msg = event.data as InitLoadingMessage\n    if (msg) {\n        wadLoader.loadWadFiles(msg.wad0FileUrl, msg.wad1FileUrl)\n    } else {\n        wadLoader.startWithCachedFiles(() => postMessage(new WadWorkerMessage(WorkerMessageType.CACHE_MISS)))\n    }\n})\n"],"sourceRoot":""}